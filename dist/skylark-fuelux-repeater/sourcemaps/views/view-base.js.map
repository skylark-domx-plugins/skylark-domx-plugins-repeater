{"version":3,"sources":["views/view-base.js"],"names":["define","langx","noder","$","views","ViewBase","Evented","inherit","klassName","options","controlsClass","fullScreen","_create$Item","template","itemData","end","start","val","invalid","search","indexOf","trim","substring","undefined","init","repeater","hasControls","that","this","initOptions","container","on","e","hasClass","removeClass","addClass","ctor","constructor","cache","defaults","ctors","unshift","Plugin","superclass","i","length","prototype","hasOwnProperty","mixin","Object","defineProperty","value","close","getValue","getSelectedItems","cleared","selected","dataOptions","enabled","helpers"],"mappings":";;;;;;;AAAAA,QACC,sBACA,qBACA,qBACA,YACC,SAASC,EAAMC,EAAMC,EAAEC,GAExB,IAAIC,EAAWJ,EAAMK,QAAQC,SACzBC,UAAW,WAEXC,SAEEC,cAAe,8BAEhBC,YAAY,GAKbC,aAAe,SAAUC,EAASC,GAC9B,IAGQC,EAAKC,EAAOC,EAHhBC,GAAU,EAiBd,MAAQA,GAAWL,EAASM,OAAO,OAAS,GAdpCJ,OAAAA,EAAKC,OAAAA,EAAOC,OAAAA,EAEhBD,EAAQH,EAASO,QAAQ,MACzBL,EAAMF,EAASO,QAAQ,KAAMJ,EAAQ,GAEjCA,GAAS,GAAKD,GAAO,GACrBE,EAAMhB,EAAMoB,KAAKR,EAASS,UAAUN,EAAQ,EAAGD,IAC/CE,OAAyBM,IAAlBT,EAASG,GAAsBH,EAASG,GAAO,GACtDJ,EAAWA,EAASS,UAAU,EAAGN,GAASC,EAAMJ,EAASS,UAAUP,EAAM,IAEzEG,GAAU,EAQlB,OAAOf,EAAEU,IAGdW,KAAO,SAAUC,EAAShB,GACzB,IACCiB,EADGC,EAAOC,KAEXA,KAAKH,SAAWA,EAChBG,KAAKC,YAAYpB,GACPmB,KAAKnB,QAAQE,YACfT,EAAMS,WAAWiB,KAAKE,UAAU,IAElCF,KAAKH,SAASM,GAAG,eAAe,SAASC,GACjCL,EAAKG,UAAUG,SAASN,EAAKlB,QAAQC,gBACvCgB,GAAc,EACdC,EAAKG,UAAUI,YAAYP,EAAKlB,QAAQC,gBAExCgB,GAAc,IAIpBE,KAAKH,SAASM,GAAG,eAAe,SAASC,GACjCN,GACFC,EAAKG,UAAUK,SAASR,EAAKlB,QAAQC,kBAUhDmB,YAAc,SAASpB,GACrB,IAAI2B,EAAOR,KAAKS,YACZC,EAAQF,EAAKE,MAAQF,EAAKE,UAC1BC,EAAWD,EAAMC,SACrB,IAAKA,EAAU,CACb,IAAKC,KACL,EAAG,CAED,GADAA,EAAMC,QAAQL,GACVA,IAASM,OACX,MAEFN,EAAOA,EAAKO,iBACLP,GAETG,EAAWD,EAAMC,YACjB,IAAK,IAAIK,EAAE,EAAEA,EAAEJ,EAAMK,OAAOD,KAC1BR,EAAOI,EAAMI,IACJE,UAAUC,eAAe,YAChC9C,EAAM+C,MAAMT,EAASH,EAAKU,UAAUrC,SAAQ,GAE1C2B,EAAKW,eAAe,YACtB9C,EAAM+C,MAAMT,EAASH,EAAK3B,SAAQ,GASxC,OALAwC,OAAOC,eAAetB,KAAK,WACzBuB,MAAOlD,EAAM+C,SAAST,EAAS9B,GAAQ,KAIlCmB,KAAKnB,SAIf2C,MAAO,WACAlD,EAAMS,eAAiBiB,KAAKE,UAAU,IACxC5B,EAAMS,YAAW,IAItB0C,SAAW,WACV,OAAOzB,KAAK0B,oBAGbC,QAAU,aAIVC,SAAW,aAIXC,YAAa,SAAUhD,GACtB,OAAOA,GAGRiD,QAAU,SAASC,OAMvB,OAAOvD,EAAMC,SAAWA","file":"../../views/view-base.js","sourcesContent":["define([\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"../views\",\t\r\n],function(langx,noder,$,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t    // Defines if the gallery should open in fullscreen mode:\r\n\t\t    fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n  \t\tinit : function (repeater,options) {\r\n  \t\t\tvar that = this,\r\n  \t\t\t\thasControls;\r\n  \t\t\tthis.repeater = repeater;\r\n  \t\t\tthis.initOptions(options);\r\n  \t        if (this.options.fullScreen) {\r\n  \t          noder.fullScreen(this.container[0]);\r\n  \t        }\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (that.container.hasClass(that.options.controlsClass)) {\r\n  \t              hasControls = true\r\n  \t              that.container.removeClass(that.options.controlsClass);\r\n  \t            } else {\r\n  \t              hasControls = false\r\n  \t            }\r\n  \t        });\r\n\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (hasControls) {\r\n  \t              that.container.addClass(that.options.controlsClass);\r\n  \t            }\r\n  \t        });\r\n  \t\t},\r\n\r\n\t    //initOptions: function (options) {\r\n\t    //  // Create a copy of the prototype options:\r\n\t    //  this.options = langx.mixin({}, this.options,options);\r\n\t    //},\r\n\r\n      initOptions : function(options) {\r\n        var ctor = this.constructor,\r\n            cache = ctor.cache = ctor.cache || {},\r\n            defaults = cache.defaults;\r\n        if (!defaults) {\r\n          var  ctors = [];\r\n          do {\r\n            ctors.unshift(ctor);\r\n            if (ctor === Plugin) {\r\n              break;\r\n            }\r\n            ctor = ctor.superclass;\r\n          } while (ctor);\r\n\r\n          defaults = cache.defaults = {};\r\n          for (var i=0;i<ctors.length;i++) {\r\n            ctor = ctors[i];\r\n            if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.prototype.options,true);\r\n            }\r\n            if (ctor.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.options,true);\r\n            }\r\n          }\r\n        }\r\n        Object.defineProperty(this,\"options\",{\r\n          value :langx.mixin({},defaults,options,true)\r\n        });\r\n\r\n        //return this.options = langx.mixin({},defaults,options);\r\n        return this.options;\r\n      },\r\n\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n    \t},\r\n\r\n    \tgetValue : function() {\r\n    \t\treturn this.getSelectedItems();\r\n    \t},\r\n\r\n    \tcleared : function() {\r\n\r\n    \t},\r\n\r\n    \tselected : function() {\r\n\r\n    \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n"]}