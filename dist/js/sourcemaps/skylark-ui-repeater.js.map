{"version":3,"sources":["skylark-ui-repeater.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","browser","eventer","noder","geom","$","widgets","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","e","shiftKey","isKey","keyCode","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","test","html","text","mixin","WidgetBase","Widget","inherit","klassName","velm","old","fn","loader","Loader","init","element","options","this","$element","defaults","destroy","remove","outerHTML","ieRepaint","msieVersion","next","pause","play","previous","reset","option","methodReturn","Array","prototype","slice","call","arguments","$set","each","$this","data","undefined","Constructor","noConflict","repeater","Repeater","$btn","currentView","self","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewOptions","viewType","selectlist","combobox","search","searchOnKeyPress","allowCancel","value","trigger","render","clearInfinite","proxy","evt","pageInputChange","val","viewChanged","clearTimeout","setTimeout","resize","defaultView","setViewOptions","initViewTypes","changeView","clear","opts","preserve","scan","empty","viewTypeObj","viewTypes","cleared","clearPreservedDataSourceOptions","markup","attr","infinitescroll","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","getDataOptions","dataSourceOptions","preserveDataSourceOptions","returnOptions","view","pageIndex","filter","pageSize","searchValue","addViewTypeData","dataOptions","infiniteScrolling","footer","viewport","end","dataSource","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","page","pages","NaN","initInfiniteScrolling","helpers","callback","key","initViewType","itemization","count","start","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropPagingCap","dropMenu","l","append","is","focus","prevView","selected","syncViewButtonState","beforeRender","repeaterPrototypeContext","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","staticHeight","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","curView","viewName","views","$selected","target","parents","$itemToCheck","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","afterRender","state","renderOptions","d","runRenderer","items","list_clearSelectedItems","list_highlightColumn","force","tbody","list_highlightSortedColumn","col","parent","list_getSelectedItems","$item","getValue","list_positionHeadings","$wrapper","offsetLeft","offset","left","scrollLeft","$heading","list_setSelectedItems","itms","selectable","list_selectable","isArray","checkIfItemMatchesValue","rowIndex","property","selectItem","$itm","slct","$frozenCols","select","list_frozenColumns","list_actions","prepend","list_sizeHeadings","$table","$th","list_setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","list_sizeFrozenColumns","click","list_positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","list_createItemActions","actionsHtml","$actionsTable","name","actionsDropdown","$actionsColumnWrapper","list_actions_width","$actionsColumn","label","$actionsCells","rowNumber","list_sizeActionsTable","actionName","row","rows","list_getActionItems","selector","selectorIndex","selectedObj","actionObj","grep","actions","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","list_frozenOptionsInitialize","revertCheckbox","$checkbox","list_revertingCheckbox","checkbox","$checkboxes","$headerCheckbox","$everyTable","type","$rowCheckboxes","$checkAll","preventDefault","currentTarget","numSelected","list_columnRendered","list_columnSizing","list_columnSyncing","list_infiniteScroll","list_noItemsHTML","list_sortClearing","list_rowRendered","list","list_sortDirection","sortDirection","list_sortProperty","sortProperty","toggleActionsHeaderButton","list_specialBrowserClass","specialBrowserClass","list_noItems","sizeColumns","infScroll","list_firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","areDifferentColumns","oldCols","newCols","newColsL","j","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevron","chevUp","$div","checkAllID","$header","add","onClickRowRepeaterList","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","$tbody","keyup","list_columns","colLength","columnAttr","$empty","error","$thead","checkboxColumn","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","fillTemplate","itemData","template","replace","trim","invalid","thumbnail_clearSelectedItems","thumbnail_getSelectedItems","thumbnail_setSelectedItems","compareItemIndex","n","compareItemSelector","thumbnail_selectable","thumbnail_alignment","thumbnail_infiniteScroll","thumbnail_itemRendered","thumbnail_noItemsHTML","thumbnail_template","thumbnail","validAlignments","alignment","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","main"],"mappings":";;;;;;;CAAA,SAAUA,EAAQC,GAQd,QAASC,GAASC,EAAUC,GACxB,GAAkB,MAAdD,EAAS,GACX,MAAOA,EAET,IAAIE,GAAQD,EAAKE,MAAM,KACnBC,EAAQJ,EAASG,MAAM,IAC3BD,GAAMG,KACN,KAAK,GAAIC,GAAE,EAAGA,EAAEF,EAAMG,OAAQD,IACV,KAAZF,EAAME,KAEM,MAAZF,EAAME,GACNJ,EAAMG,MAENH,EAAMM,KAAKJ,EAAME,IAEzB,OAAOJ,GAAMO,KAAK,KAtBxB,GAAIC,GAASZ,EAAQY,OAClBC,EAAUb,EAAQa,QAClBC,EAA2B,kBAAXF,IAAyBA,EAAOG,IAChDC,GAAUF,GAA4B,mBAAZG,QAE7B,KAAKH,IAAUF,EAAQ,CACrB,GAAIM,KAkBJN,GAASZ,EAAQY,OAAS,SAASO,EAAIC,EAAMrB,GACnB,kBAAXA,IACPmB,EAAIC,IACApB,QAASA,EACTqB,KAAMA,EAAKF,IAAI,SAASG,GACtB,MAAOpB,GAASoB,EAAIF,KAEtBF,QAAS,MAEbJ,EAAQM,IAERG,SAASH,GAAMpB,GAGvBc,EAAUb,EAAQa,QAAU,SAASM,GACjC,IAAKD,EAAIK,eAAeJ,GACpB,KAAM,IAAIK,OAAM,UAAYL,EAAK,wBAErC,IAAIM,GAASP,EAAIC,EACjB,KAAKM,EAAOR,QAAS,CACjB,GAAIS,KAEJD,GAAOL,KAAKO,QAAQ,SAASN,GACzBK,EAAKhB,KAAKG,EAAQQ,MAGtBI,EAAOR,QAAUQ,EAAO1B,QAAQ6B,MAAMC,OAAQH,GAElD,MAAOD,GAAOR,SAIpBlB,EAAQa,EAAOC,GAEVC,IACCE,EACFC,QAAUJ,EAAQ,4BAEbb,EAAQ8B,YACV9B,EAAQ8B,UAAYjB,EAAQ,4BAMlC,SAASD,EAAOC,GA/DnBD,EAAA,wBACA,wBACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,yBACA,SAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAR,EAAAQ,GAAAR,EAAAQ,OACAC,EAAAD,EAAAC,SAUAC,GACAC,kBAAA,EACAC,cAAA,IACAC,eAAA,GACAC,mBAAA,GACAC,cAAA,GACAC,YAAA,EACAC,iBAAA,IAGAC,EAAA,SAAAC,GAAA,MAAAA,GAAAC,YAAA,GAEAC,EAAA,SAAAC,GACA,MAAA,UAAAH,GACA,MAAAA,GAAAG,UAAAA,IAIAC,EAAAF,EAAAX,EAAAC,mBACAa,EAAAH,EAAAX,EAAAG,gBACAY,EAAAJ,EAAAX,EAAAM,aACAU,EAAAL,EAAAX,EAAAO,kBACAU,EAAAN,EAAAX,EAAAI,oBAEAc,EAAA,WAIAC,EAAA,SAAAC,GAEA,KAAAF,EAAAG,KAAAD,IACAA,EAAAxB,EAAA,OAAA0B,KAAAF,GAAAG,MAIA,OAAA3B,GAAA,OAAA2B,KAAAH,GAAAE,OAMA/B,GAAAiC,MAAAzB,GACAC,MAAAA,EACAmB,WAAAA,EACAN,eAAAA,EACAC,YAAAA,EACAN,YAAAA,EACAO,SAAAA,EACAC,UAAAA,EACAC,YAAAA,GAKA,IAAAQ,GAAA5B,EAAA6B,OAAAC,SACAC,UAAA,cAQA,OAJArC,GAAAiC,MAAAzB,GACA0B,WAAAA,IAGA1B,IAUA5B,EAAA,yBACA,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,WACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkC,EAAAjC,EAAAG,GAYA,GAAA+B,GAAAlC,EAAAmC,GAAAC,OAIAC,EAAAlC,EAAAkC,OAAAlC,EAAA0B,WAAAE,SACAC,UAAA,SAEAM,KAAA,SAAAC,EAAAC,GACAC,KAAAC,SAAA1C,EAAAuC,GACAE,KAAAD,QAAA7C,EAAAiC,SAAA5B,EAAAmC,GAAAC,OAAAO,SAAAH,IAEAI,QAAA,WAOA,MANAH,MAAAC,SAAAG,SAMAJ,KAAAC,SAAA,GAAAI,WAGAC,UAAA,aAEAC,YAAA,aAEAC,KAAA,aAEAC,MAAA,aAEAC,KAAA,aAEAC,SAAA,aAEAC,MAAA,cA+CA,OA1CArD,GAAAmC,GAAAC,OAAA,SAAAkB,GACA,GACAC,GADAlE,EAAAmE,MAAAC,UAAAC,MAAAC,KAAAC,UAAA,GAGAC,EAAApB,KAAAqB,KAAA,WACA,GAAAC,GAAA/D,EAAAyC,MACAuB,EAAAD,EAAAC,KAAA,aACAxB,EAAA,gBAAAc,IAAAA,CAEAU,IACAD,EAAAC,KAAA,YAAAA,EAAA,GAAA3B,GAAAI,KAAAD,IAGA,gBAAAc,KACAC,EAAAS,EAAAV,GAAA/D,MAAAyE,EAAA3E,KAIA,OAAA4E,UAAAV,EAAAM,EAAAN,GAGAvD,EAAAmC,GAAAC,OAAAO,YAEA3C,EAAAmC,GAAAC,OAAA8B,YAAA7B,EAEArC,EAAAmC,GAAAC,OAAA+B,WAAA,WAEA,MADAnE,GAAAmC,GAAAC,OAAAF,EACAO,MAeAzC,EAAAmC,GAAAC,SAGA7D,EAAA,gCACA,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,uBACA,yBACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkC,EAAAjC,EAAAG,GAUA,GAAA+B,GAAAlC,EAAAmC,GAAAiC,SAIAC,EAAAlE,EAAAkE,SAAAlE,EAAA0B,WAAAE,SACAsC,SAAA,QAEA/B,KAAA,SAAAC,EAAAC,GACA,GACA8B,GACAC,EAFAC,EAAA/B,IAIAA,MAAAC,SAAA1C,EAAAuC,GAEAE,KAAAgC,QAAAhC,KAAAC,SAAAgC,KAAA,oBACAjC,KAAAkC,OAAAlC,KAAAC,SAAAgC,KAAA,mBACAjC,KAAAmC,KAAAnC,KAAAC,SAAAgC,KAAA,iBACAjC,KAAAoC,SAAApC,KAAAC,SAAAgC,KAAA,qBACAjC,KAAAqC,QAAArC,KAAAC,SAAAgC,KAAA,oBACAjC,KAAAsC,UAAAtC,KAAAC,SAAAgC,KAAA,qCACAjC,KAAAuC,SAAAvC,KAAAC,SAAAgC,KAAA,kBACAjC,KAAAwC,OAAAxC,KAAAC,SAAAgC,KAAA,mBACAjC,KAAAyC,SAAAzC,KAAAC,SAAAgC,KAAA,kBACAjC,KAAA0C,eAAA1C,KAAAC,SAAAgC,KAAA,2BACAjC,KAAA2C,QAAA3C,KAAAC,SAAAgC,KAAA,oBAAAA,KAAA,WACAjC,KAAA4C,iBAAA5C,KAAAC,SAAAgC,KAAA,6BACAjC,KAAA6C,OAAA7C,KAAAC,SAAAgC,KAAA,mBACAjC,KAAA8C,UAAA9C,KAAAC,SAAAgC,KAAA,sBACAjC,KAAA+C,OAAA/C,KAAAC,SAAAgC,KAAA,mBAEAjC,KAAAC,SAAA+C,GAAA,iCAAA,2BAAA,SAAA5E,GACAb,EAAAyC,MAAAiD,aAGAjD,KAAAkD,YAAA,EACAlD,KAAA8B,YAAA,KACA9B,KAAAmD,YAAA,EACAnD,KAAAoD,0BAAA,aACApD,KAAAqD,sBAAA,KACArD,KAAAsD,0BAAA,EACAtD,KAAAuD,qBAAA,KACAvD,KAAAwD,4BACAxD,KAAAyD,cAAA,EACAzD,KAAAD,QAAA7C,EAAAiC,SAAA5B,EAAAmC,GAAAiC,SAAAzB,SAAAH,GACAC,KAAA0D,cAAA,EACA1D,KAAA2D,iBACA3D,KAAA4D,OAAA,GAAAC,OAAAC,WAAAC,KAAAC,MAAA,IAAAD,KAAAE,UAAA,GACAjE,KAAAkE,qBAAA,KACAlE,KAAAmE,wBAAA,EACAnE,KAAAoE,eACApE,KAAAqE,SAAA,KAEArE,KAAAoC,SAAAkC,aACAtE,KAAAsC,UAAAgC,aACAtE,KAAA0C,eAAAT,KAAA,aAAAsC,WACAvE,KAAA2C,QAAA6B,QACAC,iBAAAzE,KAAAD,QAAA0E,iBACAC,YAAA1E,KAAAD,QAAA2E,cAGA1E,KAAAoC,SAAAY,GAAA,wBAAA,SAAA5E,EAAAuG,GACA5C,EAAA9B,SAAA2E,QAAA,uBAAAD,GACA5C,EAAA8C,QACAC,eAAA,EACApB,cAAA,SAGA1D,KAAAuC,SAAAS,GAAA,oBAAA9F,EAAA6H,MAAA/E,KAAAQ,KAAAR,OACAA,KAAAsC,UAAAU,GAAA,wBAAA,SAAA5E,EAAAuG,GACA5C,EAAA9B,SAAA2E,QAAA,8BAAAD,GACA5C,EAAA8C,QACAnB,cAAA,SAGA1D,KAAAyC,SAAAO,GAAA,oBAAA9F,EAAA6H,MAAA/E,KAAAW,SAAAX,OACAA,KAAA0C,eAAAT,KAAA,aAAAe,GAAA,sBAAA,SAAAgC,EAAAzD,GACAQ,EAAAkD,gBAAA1D,EAAArC,KAAAqC,KAEAvB,KAAA2C,QAAAK,GAAA,uCAAA,SAAA5E,EAAAuG,GACA5C,EAAA9B,SAAA2E,QAAA,4BAAAD,GACA5C,EAAA8C,QACAC,eAAA,EACApB,cAAA,SAGA1D,KAAA2C,QAAAK,GAAA,qBAAA,SAAA5E,EAAAuG,GACA5C,EAAA9B,SAAA2E,QAAA,uBAAAD,GACA5C,EAAA8C,QACAC,eAAA,EACApB,cAAA,SAIA1D,KAAA4C,iBAAAI,GAAA,mBAAA,WACAjB,EAAAkD,gBAAAlD,EAAAa,iBAAAsC,SAEAlF,KAAA4C,iBAAAI,GAAA,QAAA,SAAA5E,GACA,KAAAA,EAAAG,SACAwD,EAAAkD,gBAAAlD,EAAAa,iBAAAsC,SAGAlF,KAAA+C,OAAAd,KAAA,SAAAe,GAAA,qBAAA9F,EAAA6H,MAAA/E,KAAAmF,YAAAnF,OAEAzC,EAAAR,QAAAiG,GAAA,sBAAAhD,KAAA4D,MAAA,WACAwB,aAAArD,EAAA4B,eACA5B,EAAA4B,cAAA0B,WAAA,WACAtD,EAAAuD,SACAvD,EAAA9B,SAAA2E,QAAA,wBACA,MAGA5E,KAAAqC,QAAA1C,SACAK,KAAAqC,QAAA1C,OAAA,SACAK,KAAAD,QAAAwF,iBACAzD,EAAA9B,KAAAD,QAAAwF,aAEA1D,EAAA7B,KAAA+C,OAAAd,KAAA,sBACAH,EAAAD,EAAAlG,OAAA,EAAAkG,EAAAqD,MAAA,QAGAlF,KAAAwF,eAAA1D,GAEA9B,KAAAyF,cAAA,WACA1D,EAAAuD,SACAvD,EAAA9B,SAAA2E,QAAA,uBACA7C,EAAA8C,QACAa,WAAA5D,OAKA6D,MAAA,SAAAC,GACA,GAAA7F,GAAA6F,KAEA7F,GAAA8F,SAGA7F,KAAAsD,2BAAAvD,EAAA+E,eAEAgB,EAAA9F,KAAAgC,SAHAhC,KAAAgC,QAAA+D,OAOA,IAAAZ,GAAA3D,SAAAzB,EAAAoF,aAAApF,EAAAoF,YACAa,EAAAzI,EAAAmC,GAAAiC,SAAAsE,UAAAjG,KAAAqE,eACAc,GAAAa,EAAAE,SACAF,EAAAE,QAAAhF,KAAAlB,MACAD,QAAAA,KAKAoG,gCAAA,WACAnG,KAAAkE,qBAAA,MAGA/D,QAAA,WACA,GAAAiG,EAuBA,OArBApG,MAAAC,SAAAgC,KAAA,SAAAZ,KAAA,WACA9D,EAAAyC,MAAAqG,KAAA,QAAA9I,EAAAyC,MAAAkF,SAIAlF,KAAAgC,QAAA+D,QACAK,EAAApG,KAAAC,SAAA,GAAAI,UAGAL,KAAAC,SAAAgC,KAAA,aAAAsC,SAAA,WACAvE,KAAAC,SAAAgC,KAAA,eAAAqC,WAAA,WACAtE,KAAAC,SAAAgC,KAAA,WAAAuC,OAAA,WACAxE,KAAAsD,0BACA/F,EAAAyC,KAAAqD,uBAAAiD,eAAA,WAGAtG,KAAAC,SAAAG,SAGA7C,EAAAR,QAAAwJ,IAAA,sBAAAvG,KAAA4D,OAEAwC,GAGAI,QAAA,WACA,GAAAR,GAAAzI,EAAAmC,GAAAiC,SAAAsE,UAAAjG,KAAAqE,aAEArE,MAAA2C,QAAA6B,OAAA,WACAxE,KAAAoC,SAAAkC,WAAA,WACAtE,KAAA+C,OAAAd,KAAA,gBAAAwE,SAAA,YAAAJ,KAAA,WAAA,YACArG,KAAAsC,UAAAgC,WAAA,WACAtE,KAAA0C,eAAAT,KAAA,aAAAsC,SAAA,WACAvE,KAAA4C,iBAAAyD,KAAA,WAAA,YACArG,KAAAyC,SAAA4D,KAAA,WAAA,YACArG,KAAAuC,SAAA8D,KAAA,WAAA,YAEAL,EAAAU,SACAV,EAAAU,QAAAxF,KAAAlB,MACA2G,QAAA,IAIA3G,KAAAmD,YAAA,EACAnD,KAAAC,SAAAwG,SAAA,YACAzG,KAAAC,SAAA2E,QAAA,yBAGAgC,OAAA,WACA,GAAAZ,GAAAzI,EAAAmC,GAAAiC,SAAAsE,UAAAjG,KAAAqE,aAEArE,MAAA2C,QAAA6B,OAAA,UACAxE,KAAAoC,SAAAkC,WAAA,UACAtE,KAAA+C,OAAAd,KAAA,gBAAA4E,YAAA,YAAAC,WAAA,YACA9G,KAAAsC,UAAAgC,WAAA,UACAtE,KAAA0C,eAAAT,KAAA,aAAAsC,SAAA,UACAvE,KAAA4C,iBAAAkE,WAAA,YAEA9G,KAAAyC,SAAAsE,SAAA,aACA/G,KAAAyC,SAAAqE,WAAA,YAEA9G,KAAAuC,SAAAwE,SAAA,aACA/G,KAAAuC,SAAAuE,WAAA,YAKA9G,KAAAyC,SAAAsE,SAAA,aAAA/G,KAAAuC,SAAAwE,SAAA,aACA/G,KAAA0C,eAAA6B,SAAA,WAIA,IAAAyC,SAAAhH,KAAAkC,OAAAjD,OAAA,IACAe,KAAAsC,UAAAgC,WAAA,UAEAtE,KAAAsC,UAAAgC,WAAA,WAGA0B,EAAAU,SACAV,EAAAU,QAAAxF,KAAAlB,MACA2G,QAAA,IAIA3G,KAAAmD,YAAA,EACAnD,KAAAC,SAAA4G,YAAA,YACA7G,KAAAC,SAAA2E,QAAA,wBAGAqC,eAAA,SAAArB,GACA,GAAA7F,GAAA6F,KACApE,UAAAzB,EAAA2D,gBACA,OAAA3D,EAAA2D,cACA1D,KAAAkD,YAAA,EAEAlD,KAAAkD,aAAAnD,EAAA2D,cAIA,IAAAwD,KACAnH,GAAAmH,oBACAA,EAAAnH,EAAAmH,kBAEAnH,EAAAoH,4BACAnH,KAAAkE,qBACAlE,KAAAkE,qBAAAhH,EAAAiC,MAAAa,KAAAkE,qBAAAgD,GAEAlH,KAAAkE,qBAAAgD,IAKAlH,KAAAkE,uBACAgD,EAAAhK,EAAAiC,MAAAa,KAAAkE,qBAAAgD,GAGA,IAAAE,IACAC,KAAArH,KAAA8B,YACAwF,UAAAtH,KAAAkD,YACAqE,QACArI,KAAA,MACAyF,MAAA,OAGA3E,MAAAoC,SAAAzG,OAAA,IACAyL,EAAAG,OAAAvH,KAAAoC,SAAAkC,WAAA,iBAGAtE,KAAAsD,2BACA8D,EAAAI,SAAA,GAEAxH,KAAAsC,UAAA3G,OAAA,IACAyL,EAAAI,SAAAR,SAAAhH,KAAAsC,UAAAgC,WAAA,gBAAAK,MAAA,KAIA,IAAA8C,GAAAzH,KAAA2C,SAAA3C,KAAA2C,QAAAV,KAAA,UAAAjC,KAAA2C,QAAAV,KAAA,SAAAiD,KACA,MAAAuC,IACAL,EAAA5C,OAAAiD,EAGA,IAAApD,GAAA9G,EAAAmC,GAAAiC,SAAAsE,UAAAjG,KAAAqE,cACAqD,EAAArD,EAAAsD,WAOA,OANAD,KACAN,EAAAM,EAAAxG,KAAAlB,KAAAoH,IAGAA,EAAAlK,EAAAiC,MAAAiI,EAAAF,IAKAU,kBAAA,SAAAhB,EAAAhB,GACA,GAAAiC,GAAA7H,KAAAC,SAAAgC,KAAA,oBACA6F,EAAA9H,KAAAC,SAAAgC,KAAA,sBACAlC,EAAA6F,KAEA,IAAAgB,EACA5G,KAAAsD,0BAAA,EACAtD,KAAAuD,qBAAAxD,EAAAgI,UACAhI,GAAAiI,iBACAjI,GAAAgI,IACA/H,KAAAwD,yBAAAzD,EACA+H,EAAAG,KACAC,OAAAJ,EAAAI,SAAAL,EAAAM,gBAEAN,EAAAO,WACA,CACA,GAAAC,GAAArI,KAAAqD,sBACA9B,EAAA8G,EAAA9G,aACAA,GAAA+E,eACA+B,EAAA9B,IAAA,UACA8B,EAAAxB,YAAA,kBAEA7G,KAAAqD,sBAAA,KACArD,KAAAsD,0BAAA,EACAtD,KAAAuD,qBAAA,KACAvD,KAAAwD,4BACAsE,EAAAG,KACAC,OAAAJ,EAAAI,SAAAL,EAAAM,gBAEAN,EAAAS,SAIAC,qBAAA,SAAAhH,GACA,GAAAwG,GAAA/H,KAAAuD,wBAAA,EAAAvD,KAAAuD,qBAAA/B,OACAgH,EAAAjH,EAAAiH,KACAC,EAAAlH,EAAAkH,KAEAzI,MAAAkD,YAAA1B,SAAAgH,EAAAA,EAAAE,KAEAnH,EAAAwG,OAAA,GAAA/H,KAAAkD,YAAA,GAAAuF,IACAzI,KAAAqD,sBAAAiD,eAAA,MAAAyB,IAIAY,sBAAA,WACA,GAAAN,GAAArI,KAAAgC,QAAAC,KAAA,+BAGA,IADAoG,EAAAA,EAAA1M,OAAA,EAAAqE,KAAAgC,QAAAqG,EACAA,EAAA9G,KAAA,qBACA8G,EAAA/B,eAAA,cACA,CACA,GAAAvE,GAAA/B,KACA4F,EAAA1I,EAAAiC,SAAAa,KAAAwD,yBACAoC,GAAAoC,WAAA,SAAAY,EAAAC,GACA9G,EAAAqB,0BAAAyF,EACA9G,EAAA8C,QACAnB,cAAA,KAGA2E,EAAA/B,eAAAV,GACA5F,KAAAqD,sBAAAgF,IAIA5C,cAAA,SAAAoD,GACA,GAAA5C,KAEA,KAAA,GAAA6C,KAAAvL,GAAAmC,GAAAiC,SAAAsE,eACAxJ,eAAAyE,KAAA3D,EAAAmC,GAAAiC,SAAAsE,UAAA6C,IACA7C,EAAArK,KAAA2B,EAAAmC,GAAAiC,SAAAsE,UAAA6C,GAIA7C,GAAAtK,OAAA,EACAoN,EAAA7H,KAAAlB,KAAA,EAAAiG,EAAA4C,GAEAA,KAIAG,YAAA,SAAAzH,GACAvB,KAAAkC,OAAAjD,KAAAuC,SAAAD,EAAA0H,MAAA1H,EAAA0H,MAAA,KACAjJ,KAAAmC,KAAAlD,KAAAuC,SAAAD,EAAAwG,IAAAxG,EAAAwG,IAAA,KACA/H,KAAA6C,OAAA5D,KAAAuC,SAAAD,EAAA2H,MAAA3H,EAAA2H,MAAA,MAGA1I,KAAA,WACAR,KAAAuC,SAAA8D,KAAA,WAAA,YACArG,KAAAyC,SAAA4D,KAAA,WAAA,YACArG,KAAA0D,cAAA,EACA1D,KAAAC,SAAA2E,QAAA,2BACA5E,KAAA6E,QACAnB,cAAA1D,KAAA0D,iBAIAuB,gBAAA,SAAAC,EAAAiE,GAGA,GAAAC,EACA,IAAAlE,IAAAlF,KAAAyD,cAAA,CACAzD,KAAAyD,cAAAyB,CACA,IAAAP,GAAAqC,SAAA9B,EAAA,IAAA,CACAkE,GAAAzE,EAAA3E,KAAAkD,YACAlD,KAAAC,SAAA2E,QAAA,2BAAAD,EAAAwE,IACAnJ,KAAA6E,QACAnB,cAAA0F,MAKAC,WAAA,SAAA9H,GACAvB,KAAA0C,eAAAmE,YAAA,UACA7G,KAAA4C,iBAAAiE,YAAA,SAEA,IAAAyC,GAAA/H,EAAAkH,KACAzI,MAAAkD,YAAA1B,SAAAD,EAAAiH,KAAAjH,EAAAiH,KAAAE,GAEA,IAAAa,GAAA,IAAAD,EAAA,EAAAtJ,KAAAkD,YAAA,CAEA,IAAAoG,GAAAtJ,KAAAoE,YAAAoF,cAAA,CACAxJ,KAAA0C,eAAA+D,SAAA,SACA,IAAAgD,GAAAzJ,KAAA0C,eAAAT,KAAA,iBACAwH,GAAA1D,OACA,KAAA,GAAArK,GAAA,EAAAA,EAAA4N,EAAA5N,IAAA,CACA,GAAAgO,GAAAhO,EAAA,CACA+N,GAAAE,OAAA,mBAAAD,EAAA,iBAAAA,EAAA,aAGA1J,KAAA0C,eAAAT,KAAA,sBAAAiD,IAAAqE,OAEAvJ,MAAA4C,iBAAA6D,SAAA,UACAzG,KAAA4C,iBAAAsC,IAAAqE,EAGAvJ,MAAAyD,cAAAzD,KAAAkD,YAAA,EAAA,GAEAlD,KAAAwC,OAAAvD,KAAA,GAAAqK,GAGAtJ,KAAAkD,YAAA,EAAAoG,GACAtJ,KAAAuC,SAAAuE,WAAA,YACA9G,KAAAuC,SAAAsE,YAAA,cAEA7G,KAAAuC,SAAA8D,KAAA,WAAA,YACArG,KAAAuC,SAAAkE,SAAA,aAIAzG,KAAAkD,YAAA,GAAA,GACAlD,KAAAyC,SAAAqE,WAAA,YACA9G,KAAAyC,SAAAoE,YAAA,cAEA7G,KAAAyC,SAAA4D,KAAA,WAAA,YACArG,KAAAyC,SAAAgE,SAAA,aAIA,IAAAzG,KAAA0D,gBACA1D,KAAA0D,cAAA,EACA1D,KAAAuC,SAAAqH,GAAA,aAEA5J,KAAAyC,SAAAoH,QAEA7J,KAAAuC,SAAAsH,QAEA7J,KAAAyC,SAAAmH,GAAA,aAEA5J,KAAAuC,SAAAsH,QAEA7J,KAAAyC,SAAAoH,UAKAlJ,SAAA,WACAX,KAAAuC,SAAA8D,KAAA,WAAA,YACArG,KAAAyC,SAAA4D,KAAA,WAAA,YACArG,KAAA0D,iBACA1D,KAAAC,SAAA2E,QAAA,+BACA5E,KAAA6E,QACAnB,cAAA1D,KAAA0D,iBAKAmB,OAAA,SAAAe,GACA5F,KAAAwG,SAEA,IAAArB,IAAA,EACAa,EAAAzI,EAAAmC,GAAAiC,SAAAsE,UAAAjG,KAAAqE,cACAtE,EAAA6F,KAEA,IAAA7F,EAAA2F,YAAA1F,KAAA8B,cAAA/B,EAAA2F,WAAA,CACA,GAAAoE,GAAA9J,KAAA8B,WACA9B,MAAA8B,YAAA/B,EAAA2F,WACA1F,KAAAqE,SAAArE,KAAA8B,YAAAvG,MAAA,KAAA,GACAyE,KAAAwF,eAAAxF,KAAA8B,aACA9B,KAAAC,SAAAoG,KAAA,mBAAArG,KAAA8B,aACA9B,KAAAC,SAAAoG,KAAA,gBAAArG,KAAAqE,UACAc,GAAA,EACApF,EAAAoF,YAAAA,EAEAnF,KAAAC,SAAA2E,QAAA,0BAAA5E,KAAA8B,aAEA9B,KAAAsD,0BACAtD,KAAA4H,mBAAA,GAGA5B,EAAAzI,EAAAmC,GAAAiC,SAAAsE,UAAAjG,KAAAqE,cACA2B,EAAA+D,UACA/D,EAAA+D,SAAA7I,KAAAlB,MACA8J,SAAAA,IAKA9J,KAAAgK,sBAEAjK,EAAA8F,SAAArE,SAAAzB,EAAA8F,SAAA9F,EAAA8F,UAAAV,EACAnF,KAAA2F,MAAA5F,KAEAC,KAAAsD,0BAAAtD,KAAAsD,0BAAA6B,IACAnF,KAAAqC,QAAAiG,OAAA3I,OAAA,OAGA,IAAAgI,GAAA3H,KAAAiH,eAAAlH,GAEAkK,EAAAjK,KAAAoE,YAAA4D,WACAkC,EAAAlK,IACAiK,GACAtC,EAGA,SAAAwC,GACAC,EAAAlJ,KACAgJ,GAEA3I,KAAA4I,EACAxC,YAAAA,EACA5H,QAAAA,EACAoF,YAAAA,EACAa,YAAAA,OAOAV,OAAA,WAaA,IAZA,GAEA4C,GACAmC,EAKAC,EARAC,EAAAvK,KAAAoE,YAAAmG,kBAAAvK,KAAAC,SAAAoG,KAAA,qBAAArG,KAAAoE,YAAAmG,aACAvE,KAGAwE,KACAC,KAEAC,EAAA1K,KAAAC,SAAA0K,aAAA,YAEAC,EAAA,EAGAA,EAAAF,EAAA/O,QAAAqE,KAAAC,SAAA2J,GAAA,YACAU,EAAAI,EAAAE,GAEArN,EAAA+M,GAAAV,GAAA,aACAa,EAAA7O,KAAA0O,EAAAO,MAAA,SACAP,EAAAO,MAAA,QAAA,QACAL,EAAA5O,KAAA0O,IAEAM,GAOA,IAJA5K,KAAAqE,WACA2B,EAAAzI,EAAAmC,GAAAiC,SAAAsE,UAAAjG,KAAAqE,eAGA7C,SAAA+I,GAAAA,KAAA,GAAA,UAAAA,EAAA,CACAvK,KAAAgC,QAAAyE,SAAA,aACA4D,GACAS,OAAA9K,KAAA8C,UAAAmF,IAAA,iBACA8C,IAAA/K,KAAA8C,UAAAmF,IAAA,cAGA,IAAA+C,GAAA,SAAAT,GAAAA,KAAA,EAAAvK,KAAAC,SAAAiI,SAAAlB,SAAAuD,EAAA,IACAU,EAAAjL,KAAAC,SAAAgC,KAAA,oBAAAkG,cACA+C,EAAAlL,KAAAC,SAAAgC,KAAA,oBAAAkG,cACAgD,EAAA,SAAAd,EAAAS,OAAA,EAAA9D,SAAAqD,EAAAS,OAAA,IACAM,EAAA,SAAAf,EAAAU,IAAA,EAAA/D,SAAAqD,EAAAU,IAAA,GAEA7C,GAAA8C,EAAAC,EAAAC,EAAAC,EAAAC,EACApL,KAAA8C,UAAAqF,YAAAD,OAEAlI,MAAAgC,QAAA6E,YAAA,YAGAb,GAAAV,QACAU,EAAAV,OAAApE,KAAAlB,MACAkI,OAAAlI,KAAAC,SAAAkI,cACAkD,MAAArL,KAAAC,SAAAqL,eAIAd,EAAA3N,QAAA,SAAAiD,EAAApE,GACAoE,EAAA+K,MAAA,QAAAJ,EAAA/O,MAKA6P,YAAA,SAAAvF,EAAAzE,EAAAsH,GACA,GAAA7C,EAAAnB,OA4DAmB,EAAAnB,OAAA3D,KAAAlB,MACAwL,UAAAxL,KAAAgC,QACAT,KAAAA,GACAsH,OA/DA,CACA,GAAA7C,EAAAyF,OAAA,CACA,GAAAC,GAAA1F,EAAAyF,OAAAvK,KAAAlB,MACAwL,UAAAxL,KAAAgC,QACAT,KAAAA,GAEAoK,GAAA3L,KAAAgC,QAAA0J,GAGA,GAAAE,GAAA5L,KAAAgC,QAAAC,KAAA,gCACA4J,EAAAD,EAAAjQ,OAAA,EAAAiQ,EAAA5L,KAAAgC,OAKA,IAAAgE,EAAA8F,WAAA,CACA,GAAAC,GACAC,EAAAhG,EAAAiG,QAAA,aACAC,EAAAF,EAAAzQ,MAAA,KACA4Q,EAAAD,EAAA,EAEA,IAAA,SAAAC,GAAA,SAAAA,EAAA,CACAJ,EAAA,SAAAI,EAAAnM,KAAAuB,CAIA,KAAA,GADA6K,GAAAF,EAAAjL,MAAA,GACAoL,EAAA,EAAAA,EAAAD,EAAAzQ,OAAA0Q,IAAA,CACA,GAAA7K,SAAAuK,EAAAK,EAAAC,IAEA,CACAN,KACAO,EAAA,sEACA,OAJAP,EAAAA,EAAAK,EAAAC,IAQA,IAAA,GAAAE,GAAA,EAAAA,EAAAR,EAAApQ,OAAA4Q,IAAA,CACA,GAAAC,GAAAxG,EAAA8F,WAAA5K,KAAAlB,MACAwL,UAAAK,EACAtK,KAAAA,EACAkL,MAAAF,EACAR,OAAAA,GAEAJ,GAAAE,EAAAW,QAGAF,GAAA,mFAIA,GAAAtG,EAAA0G,MAAA,CACA,GAAAC,GAAA3G,EAAA0G,MAAAxL,KAAAlB,MACAwL,UAAAxL,KAAAgC,QACAT,KAAAA,GAEAoK,GAAA3L,KAAAgC,QAAA2K,GAGA9D,EAAAtH,KASAiE,eAAA,SAAAoH,GACA,GAAAhH,MACAiH,EAAAD,EAAArR,MAAA,KAAA,EAGAqK,GADA5F,KAAAD,QAAA+M,MACA9M,KAAAD,QAAA+M,MAAAD,IAAA7M,KAAAD,QAAA+M,MAAAF,UAKA5M,KAAAoE,YAAAlH,EAAAiC,SAAAa,KAAAD,QAAA6F,IAGAT,YAAA,SAAA/G,GACA,GAAA2O,GAAAxP,EAAAa,EAAA4O,QACA9H,EAAA6H,EAAA7H,KAEAlF,MAAAmE,yBACAnE,KAAAmD,YAAA4J,EAAAE,QAAA,eAAAlG,SAAA,YACA/G,KAAAgK,sBAEAhK,KAAA6E,QACAa,WAAAR,EACAxB,cAAA,SAMAsG,oBAAA,WACA,GAAAkD,GAAAlN,KAAA+C,OAAAd,KAAA,gBAAAjC,KAAA8B,YAAA,KAEA9B,MAAAmE,wBAAA,EACAnE,KAAA+C,OAAAd,KAAA,SAAAoK,KAAA,WAAA,GACArM,KAAA+C,OAAAd,KAAA,gBAAA4E,YAAA,UAEAqG,EAAAvR,OAAA,IACAuR,EAAAb,KAAA,WAAA,GACAa,EAAAD,QAAA,eAAAxG,SAAA,WAEAzG,KAAAmE,wBAAA,KAKAmI,EAAA,SAAAa,GACApQ,OAAAqQ,SAAArQ,OAAAqQ,QAAAC,MACAtQ,OAAAqQ,QAAAC,KAAAF,IAIArH,EAAA,QAAAA,GAAAuC,GACA,GAAAiF,KACAjF,GAAAkF,WAAAlM,KAAA,WACA,GAAAmM,GAAAjQ,EAAAyC,MACAyN,EAAAD,EAAAnH,KAAA,gBACA,UAAAoH,GACAD,EAAAE,SACAJ,EAAA1R,KAAA4R,IACA,YAAAC,IACA3H,EAAA0H,GACAA,EAAAE,SACAJ,EAAA1R,KAAA4R,MAGAnF,EAAAtC,QACAsC,EAAAsB,OAAA2D,IAGA3B,EAAA,SAAAgC,EAAAC,GACA,GAAAC,EACA,IAAAD,IACAC,EAAAD,EAAA,OAAAA,EAAAC,OAAA,SACA,SAAAA,GAAArM,SAAAoM,EAAAJ,MAAA,CACA,GAAA3B,GAAArK,SAAAoM,EAAApC,UAAAjO,EAAAqQ,EAAApC,WAAAmC,CACA9B,GAAAgC,GAAAD,EAAAJ,QAKAM,EAAA,SAAAC,EAAA9H,EAAA4C,GACA,GAAAmF,GAAAD,EAAA,CACAC,GAAA/H,EAAAtK,OACAoN,EAAA7H,KAAAlB,KAAAgO,EAAA/H,EAAA4C,GAEAA,KAIAE,EAAA,SAAAkF,EAAAhI,EAAA4C,GACA5C,EAAAgI,GAAAC,WACAjI,EAAAgI,GAAAC,WAAAhN,KAAAlB,QAAA,WACA8N,EAAA5M,KAAAlB,KAAAiO,EAAAhI,EAAA4C,KAGAiF,EAAA5M,KAAAlB,KAAAiO,EAAAhI,EAAA4C,IAKAsF,EAAA,SAAAC,GACA,GAAA7M,GAAA6M,EAAA7M,QAEAvB,MAAAsD,4BACA8K,EAAAjJ,aAAAiJ,EAAArO,QAAA+E,gBACA9E,KAAA2I,wBAGA3I,KAAAuI,qBAAAhH,EAAA6M,EAAArO,UAGAC,KAAAqC,QAAA+F,OAAAzI,OAAA,SACAK,KAAA4G,SAEA5G,KAAA2C,QAAAiC,QAAA,wBACArD,KAAAA,EACAxB,QAAAqO,EAAAzG,YACA0G,cAAAD,EAAArO,UAEAC,KAAAC,SAAA2E,QAAA,wBACArD,KAAAA,EACAxB,QAAAqO,EAAAzG,YACA0G,cAAAD,EAAArO,UAIAC,KAAAC,SAAA2E,QAAA,qBAAAwJ,EAAAzG,cAIAyC,EAAA,SAAAgE,GACA,GAAA7M,GAAA6M,EAAA7M,QAEAvB,MAAAsD,yBAEAtD,KAAAoD,+BAEApD,KAAAgJ,YAAAzH,GACAvB,KAAAqJ,WAAA9H,GAGA,IAAAQ,GAAA/B,IACAA,MAAAuL,YACA6C,EAAApI,YACAzE,EACA,SAAA+M,GACAF,EAAA7M,KAAA+M,EACAH,EAAAjN,KAAAa,EAAAqM,KAuDA,OA/CAxM,GAAAZ,UAAAuN,YAAA3M,EAAAZ,UAAAuK,YAIAhO,EAAAmC,GAAAiC,SAAA,SAAAd,GACA,GACAC,GADAlE,EAAAmE,MAAAC,UAAAC,MAAAC,KAAAC,UAAA,GAGAC,EAAApB,KAAAqB,KAAA,WACA,GAAAC,GAAA/D,EAAAyC,MACAuB,EAAAD,EAAAC,KAAA,eACAxB,EAAA,gBAAAc,IAAAA,CAEAU,IACAD,EAAAC,KAAA,cAAAA,EAAA,GAAAK,GAAA5B,KAAAD,IAGA,gBAAAc,KACAC,EAAAS,EAAAV,GAAA/D,MAAAyE,EAAA3E,KAIA,OAAA4E,UAAAV,EAAAM,EAAAN,GAGAvD,EAAAmC,GAAAiC,SAAAzB,UACA8H,WAAA,SAAAjI,EAAA8I,GACAA,GAAAI,MAAA,EAAAlB,IAAA,EAAAyG,SAAAhG,KAAA,EAAAC,MAAA,EAAAS,MAAA,KAEA3D,eACAiE,cAAA,GACAe,gBACAuC,MAAA,KACArI,kBAAA,EACAC,aAAA,GAGAnH,EAAAmC,GAAAiC,SAAAsE,aAEA1I,EAAAmC,GAAAiC,SAAAF,YAAAG,EAEArE,EAAAmC,GAAAiC,SAAAD,WAAA,WAEA,MADAnE,GAAAmC,GAAAiC,SAAAlC,EACAO,MAIAzC,EAAAmC,GAAAiC,WAIA7F,EAAA,qCACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,cACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAUAA,EAAAmC,GAAAiC,WAEApE,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAyN,wBAAA,WACAzO,KAAAgC,QAAAC,KAAA,wBAAA7B,SACAJ,KAAAgC,QAAAC,KAAA,0CAAA4E,YAAA,aAGAtJ,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAA0N,qBAAA,SAAAjC,EAAAkC,GACA,GAAAC,GAAA5O,KAAAgC,QAAAC,KAAA,yCACAjC,KAAAoE,YAAAyK,4BAAAF,KACAC,EAAA3M,KAAA,aAAA4E,YAAA,UACA+H,EAAA3M,KAAA,MAAAZ,KAAA,WACA,GAAAyN,GAAAvR,EAAAyC,MAAAiC,KAAA,iBAAAwK,EAAA,GAAA,KAAAlF,OAAA,WAAA,OAAAhK,EAAAyC,MAAA+O,SAAAhI,SAAA,UACA+H,GAAArI,SAAA,cAKAlJ,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAgO,sBAAA,WACA,GAAAjF,KAQA,OAPA/J,MAAAgC,QAAAC,KAAA,mEAAAZ,KAAA,WACA,GAAA4N,GAAA1R,EAAAyC,KACA+J,GAAAnO,MACA2F,KAAA0N,EAAA1N,KAAA,aACAzB,QAAAmP,MAGAlF,GAGAxM,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAkO,SAAA3R,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAgO,sBAEAzR,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAmO,sBAAA,WACA,GAAAC,GAAApP,KAAAC,SAAAgC,KAAA,0BACAoN,EAAAD,EAAAE,SAAAC,KACAC,EAAAJ,EAAAI,YACAA,GAAA,EACAJ,EAAAnN,KAAA,0BAAAZ,KAAA,WACA,GAAAoO,GAAAlS,EAAAyC,MACAuP,EAAAE,EAAAxC,QAAA,YAAAqC,SAAAC,KAAAF,EAAA,IACAI,GAAAhJ,SAAA,WAAAwB,IAAA,OAAAsH,KAGAH,EAAAnN,KAAA,0BAAAZ,KAAA,WACA9D,EAAAyC,MAAA6G,YAAA,WAAAoB,IAAA,OAAA,OAKA1K,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAA0O,sBAAA,SAAAC,EAAAhB,GACA,GAEApN,GACA7F,EACAuT,EACAtT,EALAiU,EAAA5P,KAAAoE,YAAAyL,gBACA9N,EAAA/B,KAMAwO,EAAAmB,CACApS,GAAAuS,QAAAtB,KACAA,GAAAA,GAIA,IAAAuB,GAAA,SAAAC,GACAf,EAAA1R,EAAAyC,MAEAuB,EAAA0N,EAAA1N,KAAA,iBACAA,EAAAiN,EAAA9S,GAAAuU,YAAAzB,EAAA9S,GAAAiJ,OACAuL,EAAAjB,EAAAT,EAAA9S,GAAAqO,SAAAiG,IAIAE,EAAA,SAAAC,EAAAC,EAAA3D,GACA,GAAA4D,GAEAC,EAAA9O,SAAA4O,GAAAA,CACAE,IACA3B,GAAA,UAAAiB,GACA7N,EAAA0M,0BAGA0B,EAAApJ,SAAA,cACAoJ,EAAA1J,SAAA,aAEA1E,EAAAqC,YAAAmM,oBAAA,UAAAxO,EAAAqC,YAAAyL,mBACAQ,EAAAtO,EAAA9B,SAAAgC,KAAA,wCAAAwK,EAAA,GAAA,KAEA4D,EAAA5J,SAAA,YACA4J,EAAApO,KAAA,6BAAAwE,SAAA,YAGA1E,EAAAqC,YAAAoM,cACAzO,EAAA9B,SAAAgC,KAAA,yCAAAwK,EAAA,GAAA,KAAAhG,SAAA,YAGA0J,EAAAlO,KAAA,YAAAwO,QAAA,0FAGA1O,EAAAqC,YAAAmM,qBACAF,EAAAtO,EAAA9B,SAAAgC,KAAA,wCAAAwK,EAAA,GAAA,KAEA4D,EAAA5J,SAAA,YACA4J,EAAApO,KAAA,6BAAA4E,YAAA,YAGA9E,EAAAqC,YAAAoM,cACAzO,EAAA9B,SAAAgC,KAAA,yCAAAwK,EAAA,GAAA,KAAA5F,YAAA,YAGAsJ,EAAAlO,KAAA,wBAAA7B,SACA+P,EAAAtJ,YAAA,aAYA,KAPAlL,EADAgT,KAAA,GAAA,UAAAiB,EACApB,EAAA7S,OACAiU,GACApB,EAAA7S,OAAA,EAAA,EAEA,EAGAD,EAAA,EAAAA,EAAAC,EAAAD,IACA8F,SAAAgN,EAAA9S,GAAA+Q,OACAwC,EAAAjP,KAAAgC,QAAAC,KAAA,qEAAAuM,EAAA9S,GAAA+Q,MAAA,GAAA,KACAwC,EAAAtT,OAAA,GACAuU,EAAAjB,EAAAT,EAAA9S,GAAAqO,SAAAyE,EAAA9S,GAAA+Q,QAEAjL,SAAAgN,EAAA9S,GAAAuU,UAAAzO,SAAAgN,EAAA9S,GAAAiJ,OACA3E,KAAAgC,QAAAC,KAAA,0DAAAZ,KAAA0O,IAKAxS,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAA0P,kBAAA,WACA,GAAAC,GAAA3Q,KAAAC,SAAAgC,KAAA,uBACA0O,GAAA1O,KAAA,YAAAZ,KAAA,WACA,GAAAuP,GAAArT,EAAAyC,MACAyP,EAAAmB,EAAA3O,KAAA,yBACAwN,GAAAxH,KAAAC,OAAA0I,EAAAzI,gBACAsH,EAAAnE,WAAAmE,EAAAlO,KAAA,iBAAAqP,EAAAtF,iBAIA/N,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAA6P,sBAAA,WACA,GAAAC,GAAA9Q,KAAAgC,QAAAC,KAAA,iBACAmN,EAAApP,KAAAC,SAAAgC,KAAA,oBACA0O,EAAA3Q,KAAAC,SAAAgC,KAAA,iDACA8O,EAAA/Q,KAAAC,SAAAgC,KAAA,kBACA+O,EAAAhR,KAAAoE,YAAAmM,mBACAxO,EAAA/B,IAOA,IALA,UAAAA,KAAAoE,YAAAyL,kBACAmB,GAAA,EACA5B,EAAA3I,SAAA,yBAGAqK,EAAAnV,OAAA,EAAA,CAGA,GAAAsV,GAAA1T,EAAA,6CAAA2T,aAAAP,GACAQ,EAAAR,EAAAS,QAAA3K,SAAA,eACA0K,GAAAlP,KAAA,cAAA+O,EAAA,MAAA5Q,SACA+Q,EAAAlP,KAAA,uCAAA+O,EAAA,MAAA5Q,QAGA,IAAAiR,GAAAF,EAAAC,QAAAvK,YAAA,eACAwK,GAAApP,KAAA,SAAA7B,QACA,IAAAkR,GAAA/T,EAAA,4CAAAoM,OAAA0H,GAIAE,EAAAD,EAAArP,KAAA,2CACAsP,GAAAlL,KAAA,KAAAkL,EAAAlL,KAAA,MAAA,WAEA4K,EAAAtH,OAAAwH,GACAJ,EAAApH,OAAA2H,GACAtR,KAAAgC,QAAAyE,SAAA,kBAGAzG,KAAAwR,yBAEAjU,EAAA,gDAAAyF,GAAA,QAAA,WACA,GAAAyJ,GAAAlP,EAAAyC,MAAA+O,OAAA,MAAAtC,OACAA,IAAA,EACA1K,EAAA9B,SAAAgC,KAAA,qDAAAwK,EAAA,4BAAA,GAAAgF,WAIAlU,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAA0Q,qBAAA,WACA,GAAAtC,GAAApP,KAAAC,SAAAgC,KAAA,oBACA0P,EAAAvC,EAAAuC,YACAnC,EAAAJ,EAAAI,aACAoC,EAAA5R,KAAAoE,YAAAmM,oBAAA,UAAAvQ,KAAAoE,YAAAyL,gBACAgC,EAAA7R,KAAAoE,YAAAoM,aAEAsB,EAAA9R,KAAAC,SAAAgC,KAAA,oBAAAqJ,aACAyG,EAAA/R,KAAAC,SAAAgC,KAAA,iDAAAqJ,aAEA0G,EAAAhS,KAAAC,SAAAgC,KAAA,kBAAAjC,KAAAC,SAAAgC,KAAA,kBAAAqJ,aAAA,EAEA2G,EAAAF,GAAAD,EAAAE,IAAAxC,CAGAmC,GAAA,EACAvC,EAAAnN,KAAA,0BAAAgG,IAAA,MAAA0J,GAEAvC,EAAAnN,KAAA,0BAAAgG,IAAA,MAAA,KAGAuH,EAAA,GACAoC,IACAxC,EAAAnN,KAAA,yBAAAgG,IAAA,OAAAuH,GACAJ,EAAAnN,KAAA,0BAAAgG,IAAA,OAAAuH,IAEAqC,GAAAI,IACA7C,EAAAnN,KAAA,0BAAAgG,IAAA,SAAAuH,GACAJ,EAAAnN,KAAA,2BAAAgG,IAAA,SAAAuH,MAGAoC,IACAxC,EAAAnN,KAAA,yBAAAgG,IAAA,OAAA,KACAmH,EAAAnN,KAAA,0BAAAgG,IAAA,OAAA,MAEA4J,IACAzC,EAAAnN,KAAA,0BAAAgG,IAAA,QAAA,KACAmH,EAAAnN,KAAA,2BAAAgG,IAAA,QAAA,QAKA1K,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAkR,uBAAA,WACA,GAEAxW,GACAC,EAHAwW,EAAA,GACApQ,EAAA/B,KAGA2Q,EAAA3Q,KAAAC,SAAAgC,KAAA,iDACAmQ,EAAApS,KAAAgC,QAAAC,KAAA,iBAEA,KAAAvG,EAAA,EAAAC,EAAAqE,KAAAoE,YAAAoM,aAAAhC,MAAA7S,OAAAD,EAAAC,EAAAD,IAAA,CACA,GAAAmS,GAAA7N,KAAAoE,YAAAoM,aAAAhC,MAAA9S,GACAuD,EAAA4O,EAAA5O,IAEAkT,IAAA,gCAAAtE,EAAAwE,KAAA,0BAAApT,EAAA,YAGA,GAAAqT,GAAA,mRAKAH,EACA,aAEA,IAAAC,EAAAzW,OAAA,EAAA,CACA,GAAA4W,GAAAhV,EAAA,qDAAAyC,KAAAwS,mBAAA,cAAAtB,aAAAP,GACA8B,EAAA9B,EAAAS,QAAA3K,SAAA,gBAKA,IAJAgM,EAAAxQ,KAAA,uBAAA7B,SACAqS,EAAAxQ,KAAA,0BAAA7B,SAGA,UAAAJ,KAAAoE,YAAAyL,iBAAA,WAAA7P,KAAAoE,YAAAyL,gBACA4C,EAAAxQ,KAAA,YAAAhD,KAAA,0CAAAqT,EAAA,eAEA,WAAAtS,KAAAoE,YAAAyL,iBAEA4C,EAAAxQ,KAAA,cAAAoE,KAAA,WAAA,gBAEA,CACA,GAAAqM,GAAA1S,KAAAoE,YAAAoM,aAAAkC,OAAA,uCACAD,GAAAxQ,KAAA,YAAAwE,SAAA,iBAAAxH,KAAA,OAAAyT,EAAA,sCAAAA,EAAA,eAIA,GAAAC,GAAAF,EAAAxQ,KAAA,KAEA0Q,GAAAtR,KAAA,SAAAuR,GACArV,EAAAyC,MAAAf,KAAAqT,GACA/U,EAAAyC,MAAAiC,KAAA,KAAAoE,KAAA,WAAAuM,EAAA,KAGAL,EAAA5I,OAAA8I,GAEAzS,KAAAgC,QAAAyE,SAAA,mBAGAzG,KAAA6S,wBAGA7S,KAAAC,SAAAgC,KAAA,qCAAAe,GAAA,QAAA,SAAA5E,GACA,IAAA2D,EAAAoB,WAAA,CACA,GAAA2P,GAAAvV,EAAAyC,MAAAuB,KAAA,UACAwR,EAAAxV,EAAAyC,MAAAuB,KAAA,OACAwI,GACA+I,WAAAA,EACAE,MAAAD,GAEAhR,GAAAkR,oBAAAlJ,EAAA3L,MAIA4B,KAAAC,SAAAgC,KAAA,qCAAAe,GAAA,QAAA,SAAA5E,GACA,IAAA2D,EAAAoB,WAAA,CACA,GAAA2P,GAAAvV,EAAAyC,MAAAuB,KAAA,UACAwI,GACA+I,WAAAA,EACAE,SAEAE,EAAA,0CAEA,YAAAnR,EAAAqC,YAAAyL,kBACAqD,EAAA,qCAEAnR,EAAA9B,SAAAgC,KAAAiR,GAAA7R,KAAA,SAAA8R,GACApJ,EAAAiJ,KAAApX,KAAAuX,EAAA,KAGApR,EAAAkR,oBAAAlJ,EAAA3L,OAKAb,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAiS,oBAAA,SAAAlJ,EAAA3L,GAKA,IAAA,GAJAgV,MACAC,EAAA9V,EAAA+V,KAAAtT,KAAAoE,YAAAoM,aAAAhC,MAAA,SAAA+E,GACA,MAAAA,GAAAlB,OAAAtI,EAAA+I,aACA,GACApX,EAAA,EAAA8X,EAAAzJ,EAAAiJ,KAAArX,OAAAD,EAAA8X,EAAA9X,IAAA,CACA,GAAA+X,GAAAzT,KAAAgC,QAAAC,KAAA,qDAAA8H,EAAAiJ,KAAAtX,GAAA,IACA0X,GAAAxX,MACA4R,KAAAiG,EACAC,QAAAD,EAAAlS,KAAA,eAOA,GAJA,IAAA6R,EAAAzX,SACAyX,EAAAA,EAAA,IAGAC,EAAAM,YAAA,CACA,GAAA9K,GAAA,YACAwK,GAAAM,YAAAP,EAAAvK,EAAAzK,KAIAb,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAA6R,sBAAA,WACA,GAAAT,GAAApS,KAAAC,SAAAgC,KAAA,sCACA2R,EAAAxB,EAAAnQ,KAAA,eACA0O,EAAA3Q,KAAAC,SAAAgC,KAAA,iCAEA2R,GAAAzL,YAAAwI,EAAA1O,KAAA,eAAAkG,eACAyL,EAAA3R,KAAA,0BAAAkG,YAAAyL,EAAAzL,eACAiK,EAAAnQ,KAAA,2BAAAZ,KAAA,SAAA3F,GACA6B,EAAAyC,MAAAmI,YAAAwI,EAAA1O,KAAA,eAAAvG,EAAA,QAAAyM,kBAIA5K,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAwQ,uBAAA,WACA,GAAAb,GAAA3Q,KAAAC,SAAAgC,KAAA,gDAEAjC,MAAAC,SAAAgC,KAAA,wCAAAZ,KAAA,SAAA3F,GACA6B,EAAAyC,MAAAkI,OAAAyI,EAAA1O,KAAA,SAAAvG,EAAA,KAAAwM,WAGA,IAAA2L,GAAAlD,EAAA1O,KAAA,YAAAqJ,YACAtL,MAAAC,SAAAgC,KAAA,iDAAAoJ,MAAAwI,IAGAtW,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAA8S,6BAAA,WAgEA,QAAAC,GAAAC,GACAjS,EAAAkS,wBAAA,EACAD,EAAAE,SAAA,gBACAnS,GAAAkS,uBAlEA,GAAAE,GAAAnU,KAAAC,SAAAgC,KAAA,2CACAmS,EAAApU,KAAAC,SAAAgC,KAAA,qCACAoS,EAAArU,KAAAC,SAAAgC,KAAA,wBACAF,EAAA/B,IAGAA,MAAAC,SAAAgC,KAAA,iBAAAe,GAAA,uBAAA,SAAA5E,GACA,GAAAqO,GAAAlP,EAAAyC,MAAAyM,OACAA,IAAA,EACA,cAAArO,EAAAkW,KACAD,EAAApS,KAAA,sBAAAwK,EAAA,KAAAhG,SAAA,WAEA4N,EAAApS,KAAA,sBAAAwK,EAAA,KAAA5F,YAAA,aAIAuN,EAAAF,WACAC,EAAAD,UAGA,IAAAK,GAAAvU,KAAAC,SAAAgC,KAAA,wCACAuS,EAAAxU,KAAAC,SAAAgC,KAAA,qDACAsS,GAAAvR,GAAA,SAAA,SAAA5E,GAGA,GAFAA,EAAAqW,kBAEA1S,EAAAkS,uBACA,GAAAlS,EAAAoB,WACA4Q,EAAAxW,EAAAa,EAAAsW,oBACA,CACA,GAAA3B,GAAAxV,EAAAyC,MAAAqG,KAAA,WACA0M,GAAA/L,SAAA+L,EAAA,IAAA,EACAhR,EAAA9B,SAAAgC,KAAA,qDAAA8Q,EAAA,KAAAtB,OAEA,IAAAkD,GAAA5S,EAAA9B,SAAAgC,KAAA,gDAAAtG,MACA,KAAAgZ,GACAH,EAAAnI,KAAA,WAAA,GACAmI,EAAAnI,KAAA,iBAAA,IACAsI,IAAAJ,EAAA5Y,QACA6Y,EAAAnI,KAAA,WAAA,GACAmI,EAAAnI,KAAA,iBAAA,KAEAmI,EAAAnI,KAAA,WAAA,GACAmI,EAAAnI,KAAA,iBAAA,OAOAmI,EAAAxR,GAAA,SAAA,SAAA5E,GACA2D,EAAAkS,yBACAlS,EAAAoB,WACA4Q,EAAAxW,EAAAa,EAAAsW,gBACAnX,EAAAyC,MAAA4J,GAAA,aACA7H,EAAA9B,SAAAgC,KAAA,0DAAAwP,QACA1P,EAAA9B,SAAA2E,QAAA,2BAAAuP,KAEApS,EAAA9B,SAAAgC,KAAA,oDAAAwP,QACA1P,EAAA9B,SAAA2E,QAAA,6BAAAuP,QAaA5W,EAAAmC,GAAAiC,SAAAzB,SAAAhD,EAAAiC,SAAA5B,EAAAmC,GAAAiC,SAAAzB,UACA0U,oBAAA,KACAC,mBAAA,EACAC,oBAAA,EACAjG,4BAAA,EACAkG,qBAAA,EACAC,iBAAA,iBACAnF,iBAAA,EACAoF,mBAAA,EACAC,iBAAA,KACA3E,mBAAA,EACAC,cAAA,IAIAjT,EAAAmC,GAAAiC,SAAAsE,UAAAkP,MACAjP,QAAA,WACAlG,KAAAoE,YAAA0Q,oBACA9U,KAAA0Q,qBAGA/I,YAAA,SAAA5H,GAOA,MANAC,MAAAoV,qBACArV,EAAAsV,cAAArV,KAAAoV,oBAEApV,KAAAsV,oBACAvV,EAAAwV,aAAAvV,KAAAsV,mBAEAvV,GAEA2G,QAAA,SAAAkC,GACA5I,KAAAoE,YAAAoM,eACA5H,EAAAjC,QAGA3G,KAAAgC,QAAAC,KAAA,4BAAA6E,WAAA,YACA0O,EAAAtU,KAAAlB,OAHAA,KAAAgC,QAAAC,KAAA,4BAAAoE,KAAA,WAAA,cAOA6H,WAAA,SAAAtF,EAAAC,GACA7I,KAAAoV,mBAAA,KACApV,KAAAsV,kBAAA,KACAtV,KAAAyV,yBAAAC,IACA1V,KAAAwS,mBAAAhR,SAAAxB,KAAAoE,YAAAoM,aAAAnF,MAAArL,KAAAoE,YAAAoM,aAAAnF,MAAA,GACArL,KAAA2V,cAAA,EACA9M,KAEAvD,OAAA,WACAsQ,EAAA1U,KAAAlB,KAAAA,KAAAC,SAAAgC,KAAA,4CACAjC,KAAAoE,YAAAoM,cACAxQ,KAAA6S,yBAEA7S,KAAAoE,YAAAmM,oBAAA,UAAAvQ,KAAAoE,YAAAyL,kBACA7P,KAAAwR,yBAEAxR,KAAAoE,YAAA0Q,oBACA9U,KAAA0Q,qBAGA3G,SAAA,WACA,GACAnE,GADAiQ,EAAA7V,KAAAoE,YAAA2Q,mBAGA/U,MAAA8V,kBAAA,EACA9V,KAAAqC,QAAAoE,SAAA,YAEAoP,IACAjQ,EAAA,gBAAAiQ,GAAAA,KACA7V,KAAA4H,mBAAA,EAAAhC,KAGA6F,OAAA,SAAA7C,GACA,GAEA+H,GAFAoF,EAAAnN,EAAA4C,UAAAvJ,KAAA,kBACAF,EAAA/B,IA+BA,OA3BA4I,GAAArH,KAAA0H,MAAA,EACAjJ,KAAA2V,cAAA,EAEA3V,KAAA2V,cAAA,EAGAI,EAAApa,OAAA,IACAoa,EAAAxY,EAAA,6BAAAyC,KAAAyV,yBAAA,gNACAM,EAAA9T,KAAA,0BAAAe,GAAA,yBAAA,WACAjB,EAAAqC,YAAA0Q,oBACA/S,EAAAoN,2BAGApN,EAAAqC,YAAAmM,oBAAAxO,EAAAqC,YAAAoM,cAAA,UAAAzO,EAAAqC,YAAAyL,kBACAjH,EAAA4C,UAAAxI,GAAA,yBAAA,WACAjB,EAAA2P,yBAIA9I,EAAA4C,UAAA7B,OAAAoM,IAEAnN,EAAA4C,UAAA3E,YAAA,wDAEA8J,EAAAoF,EAAA9T,KAAA,SACA+T,EAAA9U,KAAAlB,KAAA2Q,EAAA/H,EAAArH,MACA0U,EAAA/U,KAAAlB,KAAA2Q,EAAA/H,EAAArH,OAEA,GAEAuK,WAAA,SAAAlD,GAEA,MADAsN,GAAAhV,KAAAlB,KAAA4I,EAAA4C,UAAA5C,EAAAmD,OAAAnD,EAAA6D,QACA,GAEAC,MAAA,WACA,GAAAyJ,EA0BA,QAxBAnW,KAAAoE,YAAAmM,oBAAA,UAAAvQ,KAAAoE,YAAAyL,iBAAA7P,KAAA2V,cACA3V,KAAA6Q,wBAGA7Q,KAAAoE,YAAAoM,eAAAxQ,KAAA2V,eACA3V,KAAAkS;AACAlS,KAAA6S,0BAGA7S,KAAAoE,YAAAmM,qBAAAvQ,KAAAoE,YAAAoM,cAAA,UAAAxQ,KAAAoE,YAAAyL,iBAAA7P,KAAA2V,eACA3V,KAAA0R,uBACA1R,KAAA8T,gCAGA9T,KAAAoE,YAAA0Q,qBACA9U,KAAA0Q,oBACA1Q,KAAAmP,yBAGAgH,EAAAnW,KAAAgC,QAAAC,KAAA,gEACAkU,EAAAxa,OAAA,GACAqE,KAAA0O,qBAAAyH,EAAA5U,KAAA,mBAGA,IAMA,IAAA6U,GAAA,SAAAC,EAAAC,GACA,IAAAA,EACA,OAAA,CAEA,KAAAD,GAAAC,EAAA3a,SAAA0a,EAAA1a,OACA,OAAA,CAEA,KAAA,GAAAD,GAAA,EAAA6a,EAAAD,EAAA3a,OAAAD,EAAA6a,EAAA7a,IAAA,CACA,IAAA2a,EAAA3a,GACA,OAAA,CAGA,KAAA,GAAA8a,KAAAF,GAAA5a,GACA,GAAA4a,EAAA5a,GAAAe,eAAA+Z,IAAAH,EAAA3a,GAAA8a,KAAAF,EAAA5a,GAAA8a,GACA,OAAA,EAIA,OAAA,GAGAC,EAAA,SAAAC,EAAA1D,EAAAhD,EAAA2G,EAAAC,GACA,GAAAC,GAAAF,EAAAC,GAAAC,UACAC,EAAA9D,EAAAhD,GAAA2G,EAAAC,GAAA3G,UACA8G,EAAAxZ,EAAA,aACA8N,EAAAsL,EAAAC,GAAAI,YAEA/G,EAAA0G,EAAAC,GAAA3G,QAcA,IAbAjQ,KAAAoE,YAAAoM,gBAAA,GAAA,gBAAAP,IACA6G,EAAA,gEAAA9W,KAAAwS,mBAAA,cAGAsE,EAAAtV,SAAAsV,EAAAA,EAAA,GAEAC,EAAAtQ,SAAAjF,SAAAqV,EAAAA,EAAA,IAAAlN,OAAAmN,GACAtV,SAAA6J,GACA0L,EAAAzL,WAAAD,GAGAqL,EAAA/M,OAAAoN,GAEA,UAAA/W,KAAAoE,YAAAyL,iBAAA,iBAAA8G,EAAAC,GAAA3G,SAAA,CACA,GAAAgH,GAAA,oBAAAjH,EAAA,kIAGA+G,GAAA9X,KAAAgY,GAGA,MAAAF,IAGAG,EAAA,SAAAC,EAAAR,EAAAlK,GACA,GAeA2K,GACAP,EACAQ,EACAC,EACAC,EAnBAC,EAAA,yBACAC,EAAA,uBACAC,EAAA,uBACAC,EAAApa,EAAA,gFACAqa,GAAA5X,KAAAC,SAAAoG,KAAA,MAAA,KAAA,IAAA,WAEA4Q,EAAA,iEACAW,EAAA,qJAMAC,EAAAta,EAAA,aACAwE,EAAA/B,IAqBA,IAdA2X,EAAApW,KAAA,gBAAAkL,GACAkL,EAAAlH,QAAAkG,EAAAlK,GAAAiG,OACAmF,EAAA5Y,KAAA0Y,EAAA1Y,QAAAgD,KAAA,QAAA6E,WAAA,MAEA,iBAAA6P,EAAAlK,GAAAwD,SACA4H,EAAAlO,OAAAgO,GAEAE,EAAAlO,OAAAsN,GAGAG,EAAAS,EAAAC,IAAAH,GACAL,EAAAK,EAAA1V,KAAAwV,GACAF,EAAAD,EAAAQ,IAAAD,EAAA5V,KAAAwV,IAEAzX,KAAAoE,YAAAoM,cAAA,gBAAAmG,EAAAlK,GAAAwD,SAAA,CACA,GAAA5E,GAAArL,KAAAwS,kBACAqF,GAAA5P,IAAA,QAAAoD,GACAsM,EAAA1P,IAAA,QAAAoD,GAGAwL,EAAAF,EAAAlK,GAAAoK,UACArV,SAAAqV,GACAO,EAAA3Q,SAAAoQ,GAGAQ,EAAAV,EAAAlK,GAAA4K,SACAA,IACAD,EAAA3Q,SAAA,YACAkR,EAAA3U,GAAA,wBAAA,WACAjB,EAAAoB,aACApB,EAAAuT,kBAAA,gBAAA+B,GAAAA,EAAAV,EAAAlK,GAAAwD,SACA0H,EAAA5Q,SAAA,UACAuQ,EAAAvQ,SAAA2Q,IACAH,EAAA1Q,YAAA6Q,GAAAjR,SAAA+Q,GACAzV,EAAAqT,mBAAA,QACArT,EAAAqC,YAAA6Q,mBAIAmC,EAAAvQ,YAAA,UACA0Q,EAAA1Q,YAAA2Q,GACAzV,EAAAqT,mBAAA,KACArT,EAAAuT,kBAAA,OANAiC,EAAA1Q,YAAA2Q,GAAA/Q,SAAAiR,GACA3V,EAAAqT,mBAAA,QAQA+B,EAAAlV,KAAA,8BAAA4E,YAAA,UACA0Q,EAAA1Q,YAAA2Q,GAAA/Q,SAAAiR,GACA3V,EAAAqT,mBAAA,MACAgC,EAAA3Q,SAAA,WAGA1E,EAAA8C,QACAC,eAAA,EACApB,cAAA,WAMA,QAAAiT,EAAAlK,GAAA4I,eAAA,SAAAsB,EAAAlK,GAAA4I,gBACA8B,EAAAlV,KAAA,8BAAA4E,YAAA,UACAuQ,EAAA3Q,SAAA,mBACA,QAAAkQ,EAAAlK,GAAA4I,eACAkC,EAAA9Q,SAAAiR,GACA1X,KAAAoV,mBAAA,QAEAmC,EAAA9Q,SAAA+Q,GACAxX,KAAAoV,mBAAA,QAGApV,KAAAsV,kBAAA,gBAAA+B,GAAAA,EAAAV,EAAAlK,GAAAwD,UAGAkH,EAAAxN,OAAAkO,IAGAE,EAAA,SAAApW,GACA,GAAAqW,GAAA,UAAArW,EAAAyC,YAAAyL,gBACAoI,EAAAtW,EAAAyC,YAAAoM,aACA0H,EAAAvW,EAAA1B,QAEA,KAAA0B,EAAAwB,WAAA,CACA,GAAA8L,GAAA1R,EAAAyC,MACAyM,EAAAlP,EAAAyC,MAAAyM,QAAA,EACA0L,EAAAD,EAAAjW,KAAA,uCAAAwK,EAAA,KACA2L,EAAAF,EAAAjW,KAAA,wCAAAwK,EAAA,KACA4L,EAAAH,EAAAjW,KAAA,uCAAAwK,EAAA,qBAEAwC,GAAArF,GAAA,cACAqF,EAAApI,YAAA,YACAmR,GACAK,EAAA5G,QACA0G,EAAAtR,YAAA,YACAoR,GACAG,EAAAvR,YAAA,aAGAoI,EAAAhN,KAAA,wBAAA7B,SAGA8X,EAAAtT,QAAA,6BAAAqK,KAEA+I,GAUAK,EAAA5G,QACAxC,EAAAxI,SAAA,YACA0R,EAAA1R,SAAA,YACAwR,GACAG,EAAA3R,SAAA,cAbA9E,EAAAK,QAAAC,KAAA,wBAAA7B,SACAuB,EAAAK,QAAAC,KAAA,oCAAAZ,KAAA,WACA9D,EAAAyC,MAAA6G,YAAA,YACAqR,EAAAtT,QAAA,6BAAArH,EAAAyC,SAEAiP,EAAAhN,KAAA,YAAAwO,QAAA,uFACAxB,EAAAxI,SAAA,YACA0R,EAAA1R,SAAA,aASAyR,EAAAtT,QAAA,2BAAAqK,IAGAuG,EAAAtU,KAAAS,KAIAuU,EAAA,SAAAoC,EAAAtF,EAAAvG,GACA,GAAAiK,GAAAnZ,EAAA,YAEA,IAAAyC,KAAAoE,YAAAyL,kBACA6G,EAAAnV,KAAA,YAAAyR,EAAAvG,IAEA,WAAAzM,KAAAoE,YAAAyL,iBAAA,CACA6G,EAAAjQ,SAAA,cACAiQ,EAAArQ,KAAA,WAAA,EAEA,IAAA1E,GAAA3B,IACA0W,GAAA1T,GAAA,wBAAA,WACA+U,EAAA7W,KAAAlB,KAAA2B,KAIA+U,EAAA6B,MAAA,SAAAna,GACA,KAAAA,EAAAG,SAEAmY,EAAA9R,QAAA,2BAMA5E,KAAAoE,YAAAoM,eAAAxQ,KAAAoE,YAAAyL,iBACA6G,EAAAnV,KAAA,YAAAyR,EAAAvG,GAIA,KAAA,GADAkK,MACAjb,EAAA,EAAAC,EAAAqE,KAAAwY,aAAA7c,OAAAD,EAAAC,EAAAD,IACAib,EAAA/a,KAAA6a,EAAAvV,KAAAlB,KAAA0W,EAAA1D,EAAAvG,EAAAzM,KAAAwY,aAAA9c,GAKA,IAFA4c,EAAA3O,OAAA+M,GAEA1W,KAAAoE,YAAAwQ,oBACA,IAAA,GAAAgC,GAAA,EAAA6B,EAAA9B,EAAAhb,OAAAib,EAAA6B,EAAA7B,IACA,iBAAA5W,KAAAwY,aAAA5B,GAAA3G,UAAA,gBAAAjQ,KAAAwY,aAAA5B,GAAA3G,UACAjQ,KAAAoE,YAAAwQ,qBACApJ,UAAAkL,EACAgC,WAAA1Y,KAAAwY,aAAA5B,GAAA3G,SACAzC,KAAAmJ,EAAAC,GACAlD,QAAAV,EAAAvG,IACA,aAKAzM,MAAAoE,YAAA8Q,kBACAlV,KAAAoE,YAAA8Q,kBACA1J,UAAA8M,EACA9K,KAAAkJ,EACAhD,QAAAV,EAAAvG,IACA,eAIAwJ,EAAA,SAAAtF,EAAApP,GACA,GACAoX,GADAL,EAAA3H,EAAA1O,KAAA,QAGAqW,GAAA3c,OAAA,IACA2c,EAAA/a,EAAA,yCACAoT,EAAAhH,OAAA2O,IAGA,gBAAA/W,GAAAqX,OAAArX,EAAAqX,MAAAjd,OAAA,GACAgd,EAAApb,EAAA,8CAAAyC,KAAAwY,aAAA7c,OAAA,gBACAgd,EAAA1W,KAAA,MAAA0H,OAAApI,EAAAqX,OACAN,EAAA3O,OAAAgP,IACApX,EAAAiN,OAAAjN,EAAAiN,MAAA7S,OAAA,IACAgd,EAAApb,EAAA,kCAAAyC,KAAAwY,aAAA7c,OAAA,gBACAgd,EAAA1W,KAAA,MAAA0H,OAAA3J,KAAAoE,YAAA4Q,kBACAsD,EAAA3O,OAAAgP,KAIA3C,EAAA,SAAArF,EAAApP,GACA,GAEA7F,GACAC,EACAwb,EAJAR,EAAApV,EAAAoV,YACAkC,EAAAlI,EAAA1O,KAAA,QAKA,IAAAjC,KAAA8V,kBAAAM,EAAApW,KAAAwY,aAAA7B,IAAA,IAAAkC,EAAAld,OAAA,CAKA,GAJAkd,EAAAzY,SAIA,UAAAJ,KAAAoE,YAAAyL,kBAAA7P,KAAA2V,aAAA,CACA,GAAAmD,IACApG,MAAA,IACAzC,SAAA,eACAoH,UAAA,EAEAV,GAAAoC,OAAA,EAAA,EAAAD,GAQA,GALA9Y,KAAAwY,aAAA7B,EACA3W,KAAA8V,kBAAA,EACA9V,KAAAqC,QAAAwE,YAAA,YAGA7G,KAAAoE,YAAAoM,aAAA,CACA,GAAAwI,IACAtG,MAAA1S,KAAAoE,YAAAoM,aAAAkC,OAAA,wCACAzC,SAAA,cACAoH,UAAA,EACAhM,MAAArL,KAAAwS,mBAEAmE,GAAA/a,KAAAod,GAMA,IAFAH,EAAAtb,EAAA,iDACA4Z,EAAA0B,EAAA5W,KAAA,MACAvG,EAAA,EAAAC,EAAAgb,EAAAhb,OAAAD,EAAAC,EAAAD,IACAwb,EAAAhW,KAAAlB,KAAAmX,EAAAR,EAAAjb,EAIA,IAFAiV,EAAAF,QAAAoI,GAEA,UAAA7Y,KAAAoE,YAAAyL,kBAAA7P,KAAA2V,aAAA,CAGA,GAAAsD,GAAAjZ,KAAAC,SAAAgC,KAAA,2CAAAqJ,aACA4N,EAAA3b,EAAA+V,KAAAqD,EAAA,SAAAwC,GACA,MAAA,iBAAAA,EAAAlJ,WACA,EACAiJ,GAAA7N,MAAA4N,EAEArD,EAAA1U,KAAAlB,KAAAmX,KAIAvB,EAAA,SAAAuB,GACA,GAEAzb,GACAC,EACAyd,EACAC,EALAC,KACAvX,EAAA/B,IAMA,IAAAA,KAAAoE,YAAAyQ,oBACAnZ,EAAA,EACA2d,EAAA,EACAlC,EAAAlV,KAAA,MAAAZ,KAAA,WACA,GACAgK,GADAuF,EAAArT,EAAAyC,KAEA,IAAAwB,SAAAO,EAAAyW,aAAA9c,GAAA2P,MACAA,EAAAtJ,EAAAyW,aAAA9c,GAAA2P,MACAuF,EAAAtF,WAAAD,GACAgO,GAAAzI,EAAAtF,aACAvJ,EAAAyW,aAAA9c,GAAAsb,YAAA3L,MACA,CACA,GAAAC,GAAAsF,EAAA3O,KAAA,0BAAAqJ,YACAgO,GAAA1d,MACAkT,IAAA8B,EACAnE,MAAA/Q,EACA6d,SAAAjO,IAIA5P,MAGAC,EAAA2d,EAAA3d,OACAA,EAAA,GAAA,CACA,GAAAmW,GAAA9R,KAAAgC,QAAAC,KAAA,0BAAAqJ,YAEA,KADA8N,EAAArV,KAAAC,OAAA8N,EAAAuH,GAAA1d,GACAD,EAAA,EAAAA,EAAAC,EAAAD,IACA4d,EAAA5d,GAAA6d,SAAAH,IACAA,EAAAE,EAAA5d,GAAA6d,UAEAD,EAAA5d,GAAAoT,IAAAxD,WAAA8N,GACApZ,KAAAwY,aAAAc,EAAA5d,GAAA+Q,OAAAuK,YAAAoC,IAMA1D,EAAA,WACA,GAAA8D,GAAAzc,OAAA0c,UAAAC,UACAC,EAAAH,EAAAI,QAAA,SACAC,EAAAL,EAAAI,QAAA,UAEA,OAAAD,GAAA,EACA,MAAA3S,SAAAwS,EAAAM,UAAAH,EAAA,EAAAH,EAAAI,QAAA,IAAAD,IAAA,IACAE,EAAA,EACA,UAGA,IAGArE,EAAA,WACA,GAEAzI,GAFAgN,EAAA,2CACAtH,EAAAzS,KAAAC,SAAAgC,KAAA,iBAGA,YAAAjC,KAAAoE,YAAAyL,kBACAkK,EAAA,qCAGAhN,EAAA/M,KAAAgC,QAAAC,KAAA8X,GAEAhN,EAAApR,OAAA,EACA8W,EAAAxQ,KAAA,cAAA6E,WAAA,YAEA2L,EAAAxQ,KAAA,cAAAoE,KAAA,WAAA,eAMAvK,EAAA,0CACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,cACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAkMA,QAAAyc,GAAAC,EAAAC,GAGA,QAAAC,KACA,GAAApS,GAAAmB,EAAAhE,CAEAgE,GAAAgR,EAAAN,QAAA,MACA7R,EAAAmS,EAAAN,QAAA,KAAA1Q,EAAA,GAEAA,MAAAnB,MACA7C,EAAAhI,EAAAkd,KAAAF,EAAAJ,UAAA5Q,EAAA,EAAAnB,IACA7C,EAAA1D,SAAAyY,EAAA/U,GAAA+U,EAAA/U,GAAA,GACAgV,EAAAA,EAAAJ,UAAA,EAAA5Q,GAAAhE,EAAAgV,EAAAJ,UAAA/R,EAAA,IAEAsS,GAAA,EAIA,IAjBA,GAAAA,IAAA,GAiBAA,GAAAH,EAAA1V,OAAA,OAAA,GACA2V,EAAAD,EAGA,OAAAA,GA9MA3c,EAAAmC,GAAAiC,WAEApE,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAsZ,6BAAA,WACAta,KAAAgC,QAAAC,KAAA,iDAAA4E,YAAA,aAGAtJ,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAuZ,2BAAA,WACA,GAAAxQ,KAIA,OAHA/J,MAAAgC,QAAAC,KAAA,iDAAAZ,KAAA,WACA0I,EAAAnO,KAAA2B,EAAAyC,SAEA+J,GAGAxM,EAAAmC,GAAAiC,SAAAF,YAAAT,UAAAwZ,2BAAA,SAAAhM,EAAAG,GAMA,QAAA8L,KACA,MAAAC,KAAAlM,EAAA9S,GAAA+Q,OACAwC,EAAA1R,EAAAyC,OACA,OAEA0a,KAKA,QAAAC,KACA1L,EAAA1R,EAAAyC,MACAiP,EAAArF,GAAA4E,EAAA9S,GAAAwX,WACAhD,EAAAjB,EAAAT,EAAA9S,GAAAqO,UAIA,QAAAmG,GAAAC,EAAAG,GACAA,EAAA9O,SAAA8O,GAAAA,EACAA,GACA3B,GAAA,UAAAiB,GACA7N,EAAAuY,+BAGAnK,EAAA1J,SAAA,aAEA0J,EAAAtJ,YAAA,YA/BA,GAEAnL,GAAAuT,EAAAvF,EAAAgR,EAFA9K,EAAA5P,KAAAoE,YAAAwW,qBACA7Y,EAAA/B,IA8CA,KAZAzC,EAAAuS,QAAAtB,KACAA,GAAAA,IAIA9E,EADAiF,KAAA,GAAA,UAAAiB,EACApB,EAAA7S,OACAiU,GACApB,EAAA7S,OAAA,EAAA,EAEA,EAGAD,EAAA,EAAAA,EAAAgO,EAAAhO,IACA8F,SAAAgN,EAAA9S,GAAA+Q,OACAwC,EAAA1R,IACAmd,EAAA,EACA1a,KAAAgC,QAAAC,KAAA,wCAAAZ,KAAAoZ,GACAxL,EAAAtT,OAAA,GACAuU,EAAAjB,EAAAT,EAAA9S,GAAAqO,WAGAyE,EAAA9S,GAAAwX,UACAlT,KAAAgC,QAAAC,KAAA,wCAAAZ,KAAAsZ,IAMApd,EAAAmC,GAAAiC,SAAAzB,SAAAhD,EAAAiC,SAAA5B,EAAAmC,GAAAiC,SAAAzB,UACA2a,oBAAA,OACAC,0BAAA,EACAC,uBAAA,KACAC,sBAAA,iBACAJ,sBAAA,EACAK,mBAAA,oHAIA1d,EAAAmC,GAAAiC,SAAAsE,UAAAiV,WACAnR,SAAA,WACA,GACAnE,GADAiQ,EAAA7V,KAAAoE,YAAA0W,wBAEAjF,KACAjQ,EAAA,gBAAAiQ,GAAAA,KACA7V,KAAA4H,mBAAA,EAAAhC,KAGA6F,OAAA,SAAA7C,GACA,GAIA+P,GAAAwC,EAJAC,EAAApb,KAAAoE,YAAAyW,oBACAQ,EAAArb,KAAAgC,QAAAC,KAAA,4BACAV,EAAAqH,EAAArH,KACAqM,IA+BA,OA5BAyN,GAAA1f,OAAA,GACA0f,EAAA9d,EAAA,2HACA6d,GAAA,SAAAA,GACAD,GACAG,OAAA,EACAC,QAAA,EACAhM,KAAA,EACAiM,MAAA,GAEAJ,EAAAD,EAAAC,GAAAA,EAAA,UACAC,EAAA5U,SAAA,SAAA2U,GACApb,KAAAyb,yBAAA,GAEAzb,KAAAyb,yBAAA,EAEA7N,EAAAJ,KAAA6N,GAEAzN,EAAAC,OAAA,OAGAtM,EAAAiN,OAAAjN,EAAAiN,MAAA7S,OAAA,GACAgd,EAAApb,EAAA,6BACAob,EAAAhP,OAAA3J,KAAAoE,YAAA4W,uBACAK,EAAA1R,OAAAgP,IAEA0C,EAAApZ,KAAA,gBAAA7B,SAGAwN,GAEA9B,WAAA,SAAAlD,GACA,GAAAgH,GAAA5P,KAAAoE,YAAAwW,qBACA7Q,EAAA,WACAhI,EAAA/B,KACA0b,EAAAne,EAAAyc,EAAApR,EAAAmD,OAAAnD,EAAA6D,OAAAzM,KAAAoE,YAAA6W,oBAwCA,OAtCAS,GAAAna,KAAA,YAAAqH,EAAArH,KAAAiN,MAAA5F,EAAA6D,QAEAmD,IACA8L,EAAAjV,SAAA,cACAiV,EAAA1Y,GAAA,QAAA,WACAjB,EAAAoB,aAEAuY,EAAA3U,SAAAgD,IAYA2R,EAAA7U,YAAAkD,GACAhI,EAAA9B,SAAA2E,QAAA,kCAAA8W,KAZA,UAAA9L,GACA7N,EAAAC,QAAAC,KAAA,iDAAAZ,KAAA,WACA,GAAA8O,GAAA5S,EAAAyC,KACAmQ,GAAAtJ,YAAAkD,GACAhI,EAAA9B,SAAA2E,QAAA,kCAAAuL,KAIAuL,EAAAjV,SAAAsD,GACAhI,EAAA9B,SAAA2E,QAAA,gCAAA8W,QAQA9S,EAAA4C,UAAA7B,OAAA+R,GACA1b,KAAAyb,yBACAC,EAAAhP,MAAA,sCAGA1M,KAAAoE,YAAA2W,wBACA/a,KAAAoE,YAAA2W,wBACAvP,UAAA5C,EAAA4C,UACAgC,KAAAkO,EACAzB,SAAArR,EAAAmD,OAAAnD,EAAA6D,QACA,eAGA,OAgCA3Q,EAAA,4BACA,sBACA,aACA,kBACA,wBACA,SAAAyB,GACA,MAAAA,KAEAzB,EAAA,uBAAA,4BAAA,SAAA6f,GAAA,MAAAA,MA2EE3b","file":"../skylark-ui-repeater.js","sourcesContent":["/**\n * skylark-ui-swt - The skylark standard widget tookit\n * @author Hudaokeji, Inc.\n * @version v0.9.2.beta\n * @link https://github.com/skylarkui/skylark-ui-swt/\n * @license MIT\n */\ndefine('skylark-ui-swt/sbswt',[\n  \"skylark-utils/skylark\",\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\",\n  \"skylark-utils/widgets\"\n],function(skylark,langx,browser,eventer,noder,geom,$,widgets){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tsbswt = ui.sbswt = {};\n\n/*---------------------------------------------------------------------------------*/\n\t/*\n\t * Fuel UX utilities.js\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\n\n\n\tlangx.mixin(sbswt, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n/*---------------------------------------------------------------------------------*/\n\n\tvar WidgetBase = widgets.Widget.inherit({\n        klassName: \"WidgetBase\",\n    });\n\n\n\tlangx.mixin(sbswt, {\n\t\tWidgetBase : WidgetBase\n\t});\n\n\treturn sbswt;\n});\n\n/**\n * skylark-ui-swt - The skylark standard widget tookit\n * @author Hudaokeji, Inc.\n * @version v0.9.2.beta\n * @link https://github.com/skylarkui/skylark-ui-swt/\n * @license MIT\n */\ndefine('skylark-ui-swt/loader',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\n\tvar old = $.fn.loader;\n\n\t// LOADER CONSTRUCTOR AND PROTOTYPE\n\n\tvar Loader = sbswt.Loader = sbswt.WidgetBase.inherit({\n\t\tklassName: \"Loader\",\n\n\t\tinit : function(element,options) {\n\t\t\tthis.$element = $(element);\n\t\t\tthis.options = langx.mixin({}, $.fn.loader.defaults, options);\n\t\t},\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tieRepaint: function () {},\n\n\t\tmsieVersion: function () {},\n\n\t\tnext: function () {},\n\n\t\tpause: function () {},\n\n\t\tplay: function () {},\n\n\t\tprevious: function () {},\n\n\t\treset: function () {}\n\t});\n\n\t// LOADER PLUGIN DEFINITION\n\n\t$.fn.loader = function (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.loader');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.loader', (data = new Loader(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.loader.defaults = {};\n\n\t$.fn.loader.Constructor = Loader;\n\n\t$.fn.loader.noConflict = function () {\n\t\t$.fn.loader = old;\n\t\treturn this;\n\t};\n\n\t// INIT LOADER ON DOMCONTENTLOADED\n\t/*\n\t$(function () {\n\t\t$('[data-initialize=loader]').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tif (!$this.data('fu.loader')) {\n\t\t\t\t$this.loader($this.data());\n\t\t\t}\n\t\t});\n\t});\n\t*/\n\n\treturn $.fn.loader;\n});\n\ndefine('skylark-ui-repeater/repeater',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"skylark-ui-swt/sbswt\",\n  \"skylark-ui-swt/loader\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\t/*\n\t * Repeater\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tvar old = $.fn.repeater;\n\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\n\n\tvar Repeater = sbswt.Repeater = sbswt.WidgetBase.inherit({\n\t\tRepeater: \"Affix\",\n\n\t\tinit : function(element,options) {\n\t\t\tvar self = this;\n\t\t\tvar $btn;\n\t\t\tvar currentView;\n\n\t\t\tthis.$element = $(element);\n\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\n\t\t\tthis.$count = this.$element.find('.repeater-count');\n\t\t\tthis.$end = this.$element.find('.repeater-end');\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\n\t\t\tthis.$start = this.$element.find('.repeater-start');\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\n\t\t\tthis.$views = this.$element.find('.repeater-views');\n\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\n\t\t\t\t$(this).dropdown();\n\t\t\t}); \n\n\t\t\tthis.currentPage = 0;\n\t\t\tthis.currentView = null;\n\t\t\tthis.isDisabled = false;\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\n\t\t\tthis.infiniteScrollingCont = null;\n\t\t\tthis.infiniteScrollingEnabled = false;\n\t\t\tthis.infiniteScrollingEnd = null;\n\t\t\tthis.infiniteScrollingOptions = {};\n\t\t\tthis.lastPageInput = 0;\n\t\t\tthis.options = langx.mixin({}, $.fn.repeater.defaults, options);\n\t\t\tthis.pageIncrement = 0;// store direction navigated\n\t\t\tthis.resizeTimeout = {};\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\n\t\t\tthis.storedDataSourceOpts = null;\n\t\t\tthis.syncingViewButtonState = false;\n\t\t\tthis.viewOptions = {};\n\t\t\tthis.viewType = null;\n\n\t\t\tthis.$filters.selectlist();\n\t\t\tthis.$pageSize.selectlist();\n\t\t\tthis.$primaryPaging.find('.combobox').combobox();\n\t\t\tthis.$search.search({\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\n\t\t\t\tallowCancel: this.options.allowCancel\n\t\t\t});\n\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\n\t\t\t\tself.$element.trigger('filtered.fu.repeater', value);\n\t\t\t\tself.render({\n\t\t\t\t\tclearInfinite: true,\n\t\t\t\t\tpageIncrement: null\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.$nextBtn.on('click.fu.repeater', langx.proxy(this.next, this));\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\n\t\t\t\tself.$element.trigger('pageSizeChanged.fu.repeater', value);\n\t\t\t\tself.render({\n\t\t\t\t\tpageIncrement: null\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.$prevBtn.on('click.fu.repeater', langx.proxy(this.previous, this));\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\n\t\t\t\tself.pageInputChange(data.text, data);\n\t\t\t});\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\n\t\t\t\tself.$element.trigger('searchChanged.fu.repeater', value);\n\t\t\t\tself.render({\n\t\t\t\t\tclearInfinite: true,\n\t\t\t\t\tpageIncrement: null\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\n\t\t\t\tself.$element.trigger('canceled.fu.repeater', value);\n\t\t\t\tself.render({\n\t\t\t\t\tclearInfinite: true,\n\t\t\t\t\tpageIncrement: null\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.$secondaryPaging.on('blur.fu.repeater', function onSecondaryPagingBlur () {\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\n\t\t\t});\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\n\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.$views.find('input').on('change.fu.repeater', langx.proxy(this.viewChanged, this));\n\n\t\t\t$(window).on('resize.fu.repeater.' + this.stamp, function onResizeRepeater () {\n\t\t\t\tclearTimeout(self.resizeTimeout);\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\n\t\t\t\t\tself.resize();\n\t\t\t\t\tself.$element.trigger('resized.fu.repeater');\n\t\t\t\t}, 75);\n\t\t\t});\n\n\t\t\tthis.$loader.loader();\n\t\t\tthis.$loader.loader('pause');\n\t\t\tif (this.options.defaultView !== -1) {\n\t\t\t\tcurrentView = this.options.defaultView;\n\t\t\t} else {\n\t\t\t\t$btn = this.$views.find('label.active input');\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'list';\n\t\t\t}\n\n\t\t\tthis.setViewOptions(currentView);\n\n\t\t\tthis.initViewTypes(function initViewTypes () {\n\t\t\t\tself.resize();\n\t\t\t\tself.$element.trigger('resized.fu.repeater');\n\t\t\t\tself.render({\n\t\t\t\t\tchangeView: currentView\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\tclear: function clear (opts) {\n\t\t\tvar options = opts || {};\n\n\t\t\tif (!options.preserve) {\n\t\t\t\t// Just trash everything because preserve is false\n\t\t\t\tthis.$canvas.empty();\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\n\t\t\t\tscan(this.$canvas);\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\n\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\n\t\t\t\tviewTypeObj.cleared.call(this, {\n\t\t\t\t\toptions: options\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\n\t\t\tthis.storedDataSourceOpts = null;\n\t\t},\n\n\t\tdestroy: function destroy () {\n\t\t\tvar markup;\n\t\t\t// set input value attrbute in markup\n\t\t\tthis.$element.find('input').each(function eachInput () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\n\t\t\t// empty elements to return to original markup\n\t\t\tthis.$canvas.empty();\n\t\t\tmarkup = this.$element[0].outerHTML;\n\n\t\t\t// destroy components and remove leftover\n\t\t\tthis.$element.find('.combobox').combobox('destroy');\n\t\t\tthis.$element.find('.selectlist').selectlist('destroy');\n\t\t\tthis.$element.find('.search').search('destroy');\n\t\t\tif (this.infiniteScrollingEnabled) {\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\n\t\t\t}\n\n\t\t\tthis.$element.remove();\n\n\t\t\t// any external events\n\t\t\t$(window).off('resize.fu.repeater.' + this.stamp);\n\n\t\t\treturn markup;\n\t\t},\n\n\t\tdisable: function disable () {\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\n\n\t\t\tthis.$search.search('disable');\n\t\t\tthis.$filters.selectlist('disable');\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\n\t\t\tthis.$pageSize.selectlist('disable');\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('disable');\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\n\n\t\t\tif (viewTypeObj.enabled) {\n\t\t\t\tviewTypeObj.enabled.call(this, {\n\t\t\t\t\tstatus: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.isDisabled = true;\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$element.trigger('disabled.fu.repeater');\n\t\t},\n\n\t\tenable: function enable () {\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\n\n\t\t\tthis.$search.search('enable');\n\t\t\tthis.$filters.selectlist('enable');\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\n\t\t\tthis.$pageSize.selectlist('enable');\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('enable');\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\n\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\n\t\t\t}\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\n\t\t\t}\n\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\n\t\t\t\tthis.$primaryPaging.combobox('disable');\n\t\t\t}\n\n\t\t\t// if there are no items\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\n\t\t\t\tthis.$pageSize.selectlist('enable');\n\t\t\t} else {\n\t\t\t\tthis.$pageSize.selectlist('disable');\n\t\t\t}\n\n\t\t\tif (viewTypeObj.enabled) {\n\t\t\t\tviewTypeObj.enabled.call(this, {\n\t\t\t\t\tstatus: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.isDisabled = false;\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$element.trigger('enabled.fu.repeater');\n\t\t},\n\n\t\tgetDataOptions: function getDataOptions (opts) {\n\t\t\tvar options = opts || {};\n\t\t\tif (options.pageIncrement !== undefined) {\n\t\t\t\tif (options.pageIncrement === null) {\n\t\t\t\t\tthis.currentPage = 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dataSourceOptions = {};\n\t\t\tif (options.dataSourceOptions) {\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\n\n\t\t\t\tif (options.preserveDataSourceOptions) {\n\t\t\t\t\tif (this.storedDataSourceOpts) {\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.storedDataSourceOpts) {\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\n\t\t\t}\n\n\t\t\tvar returnOptions = {\n\t\t\t\tview: this.currentView,\n\t\t\t\tpageIndex: this.currentPage,\n\t\t\t\tfilter: {\n\t\t\t\t\ttext: 'All',\n\t\t\t\t\tvalue: 'all'\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (this.$filters.length > 0) {\n\t\t\t\treturnOptions.filter = this.$filters.selectlist('selectedItem');\n\t\t\t}\n\n\t\t\tif (!this.infiniteScrollingEnabled) {\n\t\t\t\treturnOptions.pageSize = 25;\n\n\t\t\t\tif (this.$pageSize.length > 0) {\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.selectlist('selectedItem').value, 10);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\n\t\t\tif (searchValue !== '') {\n\t\t\t\treturnOptions.search = searchValue;\n\t\t\t}\n\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\n\t\t\tvar addViewTypeData = viewType.dataOptions;\n\t\t\tif (addViewTypeData) {\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\n\t\t\t}\n\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\n\n\t\t\treturn returnOptions;\n\t\t},\n\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\n\t\t\tvar footer = this.$element.find('.repeater-footer');\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\n\t\t\tvar options = opts || {};\n\n\t\t\tif (enable) {\n\t\t\t\tthis.infiniteScrollingEnabled = true;\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\n\t\t\t\tdelete options.dataSource;\n\t\t\t\tdelete options.end;\n\t\t\t\tthis.infiniteScrollingOptions = options;\n\t\t\t\tviewport.css({\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\n\t\t\t\t});\n\t\t\t\tfooter.hide();\n\t\t\t} else {\n\t\t\t\tvar cont = this.infiniteScrollingCont;\n\t\t\t\tvar data = cont.data();\n\t\t\t\tdelete data.infinitescroll;\n\t\t\t\tcont.off('scroll');\n\t\t\t\tcont.removeClass('infinitescroll');\n\n\t\t\t\tthis.infiniteScrollingCont = null;\n\t\t\t\tthis.infiniteScrollingEnabled = false;\n\t\t\t\tthis.infiniteScrollingEnd = null;\n\t\t\t\tthis.infiniteScrollingOptions = {};\n\t\t\t\tviewport.css({\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\n\t\t\t\t});\n\t\t\t\tfooter.show();\n\t\t\t}\n\t\t},\n\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\n\t\t\tvar page = data.page;\n\t\t\tvar pages = data.pages;\n\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\n\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\n\t\t\t}\n\t\t},\n\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\n\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\n\t\t\tif (cont.data('fu.infinitescroll')) {\n\t\t\t\tcont.infinitescroll('enable');\n\t\t\t} else {\n\t\t\t\tvar self = this;\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\n\t\t\t\t\tself.render({\n\t\t\t\t\t\tpageIncrement: 1\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tcont.infinitescroll(opts);\n\t\t\t\tthis.infiniteScrollingCont = cont;\n\t\t\t}\n\t\t},\n\n\t\tinitViewTypes: function initViewTypes (callback) {\n\t\t\tvar viewTypes = [];\n\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (viewTypes.length > 0) {\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\n\t\t\t} else {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t},\n\n\t\titemization: function itemization (data) {\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\n\t\t},\n\n\t\tnext: function next () {\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\n\t\t\tthis.pageIncrement = 1;\n\t\t\tthis.$element.trigger('nextClicked.fu.repeater');\n\t\t\tthis.render({\n\t\t\t\tpageIncrement: this.pageIncrement\n\t\t\t});\n\t\t},\n\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\n\t\t\t// if no combobox is present data will be undefined\n\t\t\tvar pageInc;\n\t\t\tif (val !== this.lastPageInput) {\n\t\t\t\tthis.lastPageInput = val;\n\t\t\t\tvar value = parseInt(val, 10) - 1;\n\t\t\t\tpageInc = value - this.currentPage;\n\t\t\t\tthis.$element.trigger('pageChanged.fu.repeater', [value, dataFromCombobox]);\n\t\t\t\tthis.render({\n\t\t\t\t\tpageIncrement: pageInc\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tpagination: function pagination (data) {\n\t\t\tthis.$primaryPaging.removeClass('active');\n\t\t\tthis.$secondaryPaging.removeClass('active');\n\n\t\t\tvar totalPages = data.pages;\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\n\n\t\t\tif (totalPages <= this.viewOptions.dropPagingCap) {\n\t\t\t\tthis.$primaryPaging.addClass('active');\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\n\t\t\t\tdropMenu.empty();\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\n\t\t\t\t\tvar l = i + 1;\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\n\t\t\t\t}\n\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\n\t\t\t} else {\n\t\t\t\tthis.$secondaryPaging.addClass('active');\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\n\t\t\t}\n\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\n\n\t\t\tthis.$pages.html('' + totalPages);\n\n\t\t\t// this is not the last page\n\t\t\tif ((this.currentPage + 1) < totalPages) {\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\n\t\t\t} else {\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\n\t\t\t\tthis.$nextBtn.addClass('page-end');\n\t\t\t}\n\n\t\t\t// this is not the first page\n\t\t\tif ((this.currentPage - 1) >= 0) {\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\n\t\t\t} else {\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\n\t\t\t\tthis.$prevBtn.addClass('page-end');\n\t\t\t}\n\n\t\t\t// return focus to next/previous buttons after navigating\n\t\t\tif (this.pageIncrement !== 0) {\n\t\t\t\tif (this.pageIncrement > 0) {\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\n\t\t\t\t\t\t// if you can't focus, go the other way\n\t\t\t\t\t\tthis.$prevBtn.focus();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$nextBtn.focus();\n\t\t\t\t\t}\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\n\t\t\t\t\t// if you can't focus, go the other way\n\t\t\t\t\tthis.$nextBtn.focus();\n\t\t\t\t} else {\n\t\t\t\t\tthis.$prevBtn.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tprevious: function previous () {\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\n\t\t\tthis.pageIncrement = -1;\n\t\t\tthis.$element.trigger('previousClicked.fu.repeater');\n\t\t\tthis.render({\n\t\t\t\tpageIncrement: this.pageIncrement\n\t\t\t});\n\t\t},\n\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\n\t\trender: function render (opts) {\n\t\t\tthis.disable();\n\n\t\t\tvar viewChanged = false;\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\n\t\t\tvar options = opts || {};\n\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\n\t\t\t\tvar prevView = this.currentView;\n\t\t\t\tthis.currentView = options.changeView;\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\n\t\t\t\tthis.setViewOptions(this.currentView);\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\n\t\t\t\tviewChanged = true;\n\t\t\t\toptions.viewChanged = viewChanged;\n\n\t\t\t\tthis.$element.trigger('viewChanged.fu.repeater', this.currentView);\n\n\t\t\t\tif (this.infiniteScrollingEnabled) {\n\t\t\t\t\tthis.infiniteScrolling(false);\n\t\t\t\t}\n\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\n\t\t\t\tif (viewTypeObj.selected) {\n\t\t\t\t\tviewTypeObj.selected.call(this, {\n\t\t\t\t\t\tprevView: prevView\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.syncViewButtonState();\n\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\n\t\t\tthis.clear(options);\n\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\n\t\t\t\tthis.$loader.show().loader('play');\n\t\t\t}\n\n\t\t\tvar dataOptions = this.getDataOptions(options);\n\n\t\t\tvar beforeRender = this.viewOptions.dataSource;\n\t\t\tvar repeaterPrototypeContext = this;\n\t\t\tbeforeRender(\n\t\t\t\tdataOptions,\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\n\t\t\t\t// that does the rendering for us.\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\n\t\t\t\t\tdoRender.call(\n\t\t\t\t\t\trepeaterPrototypeContext,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\n\t\t\t\t\t\t\tdataOptions: dataOptions,\n\t\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\t\tviewChanged: viewChanged,\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\tresize: function resize () {\n\t\t\tvar staticHeight = (this.viewOptions.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.viewOptions.staticHeight;\n\t\t\tvar viewTypeObj = {};\n\t\t\tvar height;\n\t\t\tvar viewportMargins;\n\t\t\tvar scrubbedElements = [];\n\t\t\tvar previousProperties = [];\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\n\t\t\tvar currentHiddenElement;\n\t\t\tvar currentElementIndex = 0;\n\n\t\t\t// Set parents to 'display:block' until repeater is visible again\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\n\t\t\t\t}\n\t\t\t\tcurrentElementIndex++;\n\t\t\t}\n\n\t\t\tif (this.viewType) {\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\n\t\t\t}\n\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\n\t\t\t\tthis.$canvas.addClass('scrolling');\n\t\t\t\tviewportMargins = {\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\n\t\t\t\t};\n\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\n\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\n\t\t\t\tthis.$viewport.outerHeight(height);\n\t\t\t} else {\n\t\t\t\tthis.$canvas.removeClass('scrolling');\n\t\t\t}\n\n\t\t\tif (viewTypeObj.resize) {\n\t\t\t\tviewTypeObj.resize.call(this, {\n\t\t\t\t\theight: this.$element.outerHeight(),\n\t\t\t\t\twidth: this.$element.outerWidth()\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tscrubbedElements.forEach(function (element, i) {\n\t\t\t\telement.style['display'] = previousProperties[i];\n\t\t\t});\n\t\t},\n\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\n\t\t\tif (!viewTypeObj.render) {\n\t\t\t\tif (viewTypeObj.before) {\n\t\t\t\t\tvar addBefore = viewTypeObj.before.call(this, {\n\t\t\t\t\t\tcontainer: this.$canvas,\n\t\t\t\t\t\tdata: data\n\t\t\t\t\t});\n\t\t\t\t\taddItem(this.$canvas, addBefore);\n\t\t\t\t}\n\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\n\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\n\t\t\t\t// eg. `data.foo.bar.items`\n\t\t\t\tif (viewTypeObj.renderItem) {\n\t\t\t\t\tvar subset;\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\n\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\n\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsubset = [];\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem.call(this, {\n\t\t\t\t\t\t\t\tcontainer: $container,\n\t\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\t\tindex: subItemIndex,\n\t\t\t\t\t\t\t\tsubset: subset\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\taddItem($container, addSubItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (viewTypeObj.after) {\n\t\t\t\t\tvar addAfter = viewTypeObj.after.call(this, {\n\t\t\t\t\t\tcontainer: this.$canvas,\n\t\t\t\t\t\tdata: data\n\t\t\t\t\t});\n\t\t\t\t\taddItem(this.$canvas, addAfter);\n\t\t\t\t}\n\n\t\t\t\tcallback(data);\n\t\t\t} else {\n\t\t\t\tviewTypeObj.render.call(this, {\n\t\t\t\t\tcontainer: this.$canvas,\n\t\t\t\t\tdata: data\n\t\t\t\t}, callback);\n\t\t\t}\n\t\t},\n\n\t\tsetViewOptions: function setViewOptions (curView) {\n\t\t\tvar opts = {};\n\t\t\tvar viewName = curView.split('.')[1];\n\n\t\t\tif (this.options.views) {\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\n\t\t\t} else {\n\t\t\t\topts = {};\n\t\t\t}\n\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\n\t\t},\n\n\t\tviewChanged: function viewChanged (e) {\n\t\t\tvar $selected = $(e.target);\n\t\t\tvar val = $selected.val();\n\n\t\t\tif (!this.syncingViewButtonState) {\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\n\t\t\t\t\tthis.syncViewButtonState();\n\t\t\t\t} else {\n\t\t\t\t\tthis.render({\n\t\t\t\t\t\tchangeView: val,\n\t\t\t\t\t\tpageIncrement: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsyncViewButtonState: function syncViewButtonState () {\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\n\n\t\t\tthis.syncingViewButtonState = true;\n\t\t\tthis.$views.find('input').prop('checked', false);\n\t\t\tthis.$views.find('label.active').removeClass('active');\n\n\t\t\tif ($itemToCheck.length > 0) {\n\t\t\t\t$itemToCheck.prop('checked', true);\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\n\t\t\t}\n\t\t\tthis.syncingViewButtonState = false;\n\t\t}\n\t\t\n\t});\n\n\tvar logWarn = function logWarn (msg) {\n\t\tif (window.console && window.console.warn) {\n\t\t\twindow.console.warn(msg);\n\t\t}\n\t};\n\n\tvar scan = function scan (cont) {\n\t\tvar keep = [];\n\t\tcont.children().each(function eachContainerChild () {\n\t\t\tvar item = $(this);\n\t\t\tvar pres = item.attr('data-preserve');\n\t\t\tif (pres === 'deep') {\n\t\t\t\titem.detach();\n\t\t\t\tkeep.push(item);\n\t\t\t} else if (pres === 'shallow') {\n\t\t\t\tscan(item);\n\t\t\t\titem.detach();\n\t\t\t\tkeep.push(item);\n\t\t\t}\n\t\t});\n\t\tcont.empty();\n\t\tcont.append(keep);\n\t};\n\n\tvar addItem = function addItem ($parent, response) {\n\t\tvar action;\n\t\tif (response) {\n\t\t\taction = (response.action) ? response.action : 'append';\n\t\t\tif (action !== 'none' && response.item !== undefined) {\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\n\t\t\t\t$container[action](response.item);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\n\t\tvar nextViewType = currentViewType + 1;\n\t\tif (nextViewType < viewTypes.length) {\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\n\t\tif (viewTypes[currentViewtype].initialize) {\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\n\t\t\t});\n\t\t} else {\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\n\t\t}\n\t};\n\n\t// Does all of our cleanup post-render\n\tvar afterRender = function afterRender (state) {\n\t\tvar data = state.data || {};\n\n\t\tif (this.infiniteScrollingEnabled) {\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\n\t\t\t\tthis.initInfiniteScrolling();\n\t\t\t}\n\n\t\t\tthis.infiniteScrollPaging(data, state.options);\n\t\t}\n\n\t\tthis.$loader.hide().loader('pause');\n\t\tthis.enable();\n\n\t\tthis.$search.trigger('rendered.fu.repeater', {\n\t\t\tdata: data,\n\t\t\toptions: state.dataOptions,\n\t\t\trenderOptions: state.options\n\t\t});\n\t\tthis.$element.trigger('rendered.fu.repeater', {\n\t\t\tdata: data,\n\t\t\toptions: state.dataOptions,\n\t\t\trenderOptions: state.options\n\t\t});\n\n\t\t// for maintaining support of 'loaded' event\n\t\tthis.$element.trigger('loaded.fu.repeater', state.dataOptions);\n\t};\n\n\t// This does the actual rendering of the repeater\n\tvar doRender = function doRender (state) {\n\t\tvar data = state.data || {};\n\n\t\tif (this.infiniteScrollingEnabled) {\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\n\t\t\tthis.infiniteScrollingCallback({});\n\t\t} else {\n\t\t\tthis.itemization(data);\n\t\t\tthis.pagination(data);\n\t\t}\n\n\t\tvar self = this;\n\t\tthis.renderItems(\n\t\t\tstate.viewTypeObj,\n\t\t\tdata,\n\t\t\tfunction callAfterRender (d) {\n\t\t\t\tstate.data = d;\n\t\t\t\tafterRender.call(self, state);\n\t\t\t}\n\t\t);\n\t};\n\n\n\n\t// For backwards compatibility.\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\n\n\t// REPEATER PLUGIN DEFINITION\n\n\t$.fn.repeater = function fnrepeater (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function eachThis () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.repeater');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.repeater', (data = new Repeater(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.repeater.defaults = {\n\t\tdataSource: function dataSource (options, callback) {\n\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\n\t\t},\n\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\n\t\tdropPagingCap: 10,\n\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\n\t\tviews: null, // can be set to an object to configure multiple views of the same type,\n\t\tsearchOnKeyPress: false,\n\t\tallowCancel: true\n\t};\n\n\t$.fn.repeater.viewTypes = {};\n\n\t$.fn.repeater.Constructor = Repeater;\n\n\t$.fn.repeater.noConflict = function noConflict () {\n\t\t$.fn.repeater = old;\n\t\treturn this;\n\t};\n\n\n\treturn $.fn.repeater;\n\n});\n\ndefine('skylark-ui-repeater/repeater-list',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\",\n  \"./repeater\"\n],function(langx,browser,eventer,noder,geom,$){\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tif ($.fn.repeater) {\n\t\t// ADDITIONAL METHODS\n\t\t$.fn.repeater.Constructor.prototype.list_clearSelectedItems = function listClearSelectedItems () {\n\t\t\tthis.$canvas.find('.repeater-list-check').remove();\n\t\t\tthis.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_highlightColumn = function listHighlightColumn (index, force) {\n\t\t\tvar tbody = this.$canvas.find('.repeater-list-wrapper > table tbody');\n\t\t\tif (this.viewOptions.list_highlightSortedColumn || force) {\n\t\t\t\ttbody.find('td.sorted').removeClass('sorted');\n\t\t\t\ttbody.find('tr').each(function eachTR () {\n\t\t\t\t\tvar col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\n\t\t\t\t\tcol.addClass('sorted');\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_getSelectedItems = function listGetSelectedItems () {\n\t\t\tvar selected = [];\n\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\n\t\t\t\tvar $item = $(this);\n\t\t\t\tselected.push({\n\t\t\t\t\tdata: $item.data('item_data'),\n\t\t\t\t\telement: $item\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn selected;\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.getValue = $.fn.repeater.Constructor.prototype.list_getSelectedItems;\n\n\t\t$.fn.repeater.Constructor.prototype.list_positionHeadings = function listPositionHeadings () {\n\t\t\tvar $wrapper = this.$element.find('.repeater-list-wrapper');\n\t\t\tvar offsetLeft = $wrapper.offset().left;\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\n\t\t\tif (scrollLeft > 0) {\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\n\t\t\t\t\tvar $heading = $(this);\n\t\t\t\t\tvar left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\n\t\t\t\t\t$heading.addClass('shifted').css('left', left);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\n\t\t\t\t\t$(this).removeClass('shifted').css('left', '');\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_setSelectedItems = function listSetSelectedItems (itms, force) {\n\t\t\tvar selectable = this.viewOptions.list_selectable;\n\t\t\tvar self = this;\n\t\t\tvar data;\n\t\t\tvar i;\n\t\t\tvar $item;\n\t\t\tvar length;\n\n\t\t\tvar items = itms;\n\t\t\tif (!$.isArray(items)) {\n\t\t\t\titems = [items];\n\t\t\t}\n\n\t\t\t// this function is necessary because lint yells when a function is in a loop\n\t\t\tvar checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\n\t\t\t\t$item = $(this);\n\n\t\t\t\tdata = $item.data('item_data') || {};\n\t\t\t\tif (data[items[i].property] === items[i].value) {\n\t\t\t\t\tselectItem($item, items[i].selected, rowIndex);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar selectItem = function selectItem ($itm, slct, index) {\n\t\t\t\tvar $frozenCols;\n\n\t\t\t\tvar select = (slct !== undefined) ? slct : true;\n\t\t\t\tif (select) {\n\t\t\t\t\tif (!force && selectable !== 'multi') {\n\t\t\t\t\t\tself.list_clearSelectedItems();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$itm.hasClass('selected')) {\n\t\t\t\t\t\t$itm.addClass('selected');\n\n\t\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_selectable === 'multi') {\n\t\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\n\n\t\t\t\t\t\t\t$frozenCols.addClass('selected');\n\t\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').addClass('checked');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (self.viewOptions.list_actions) {\n\t\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns) {\n\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\n\n\t\t\t\t\t\t$frozenCols.addClass('selected');\n\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').removeClass('checked');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (self.viewOptions.list_actions) {\n\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\n\t\t\t\t\t}\n\n\t\t\t\t\t$itm.find('.repeater-list-check').remove();\n\t\t\t\t\t$itm.removeClass('selected');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (force === true || selectable === 'multi') {\n\t\t\t\tlength = items.length;\n\t\t\t} else if (selectable) {\n\t\t\t\tlength = (items.length > 0) ? 1 : 0;\n\t\t\t} else {\n\t\t\t\tlength = 0;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tif (items[i].index !== undefined) {\n\t\t\t\t\t$item = this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\n\t\t\t\t\tif ($item.length > 0) {\n\t\t\t\t\t\tselectItem($item, items[i].selected, items[i].index);\n\t\t\t\t\t}\n\t\t\t\t} else if (items[i].property !== undefined && items[i].value !== undefined) {\n\t\t\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_sizeHeadings = function listSizeHeadings () {\n\t\t\tvar $table = this.$element.find('.repeater-list table');\n\t\t\t$table.find('thead th').each(function eachTH () {\n\t\t\t\tvar $th = $(this);\n\t\t\t\tvar $heading = $th.find('.repeater-list-heading');\n\t\t\t\t$heading.css({ height: $th.outerHeight() });\n\t\t\t\t$heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\n\t\t\t});\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_setFrozenColumns = function listSetFrozenColumns () {\n\t\t\tvar frozenTable = this.$canvas.find('.table-frozen');\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\n\t\t\tvar repeaterWrapper = this.$element.find('.repeater-list');\n\t\t\tvar numFrozenColumns = this.viewOptions.list_frozenColumns;\n\t\t\tvar self = this;\n\n\t\t\tif (this.viewOptions.list_selectable === 'multi') {\n\t\t\t\tnumFrozenColumns = numFrozenColumns + 1;\n\t\t\t\t$wrapper.addClass('multi-select-enabled');\n\t\t\t}\n\n\t\t\tif (frozenTable.length < 1) {\n\t\t\t\t// setup frozen column markup\n\t\t\t\t// main wrapper and remove unneeded columns\n\t\t\t\tvar $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\n\t\t\t\tvar $frozenColumn = $table.clone().addClass('table-frozen');\n\t\t\t\t$frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\n\t\t\t\t$frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\n\n\t\t\t\t// need to set absolute heading for vertical scrolling\n\t\t\t\tvar $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\n\t\t\t\t$frozenThead.find('tbody').remove();\n\t\t\t\tvar $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\n\n\t\t\t\t// this gets a little messy with all the cloning. We need to make sure the ID and FOR\n\t\t\t\t// attribs are unique for the 'top most' cloned checkbox\n\t\t\t\tvar $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\n\t\t\t\t$checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\n\n\t\t\t\t$frozenColumnWrapper.append($frozenColumn);\n\t\t\t\trepeaterWrapper.append($frozenTheadWrapper);\n\t\t\t\tthis.$canvas.addClass('frozen-enabled');\n\t\t\t}\n\n\t\t\tthis.list_sizeFrozenColumns();\n\n\t\t\t$('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\n\t\t\t\tvar index = $(this).parent('th').index();\n\t\t\t\tindex = index + 1;\n\t\t\t\tself.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\n\t\t\t});\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_positionColumns = function listPositionColumns () {\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\n\t\t\tvar scrollTop = $wrapper.scrollTop();\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\n\t\t\tvar frozenEnabled = this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi';\n\t\t\tvar actionsEnabled = this.viewOptions.list_actions;\n\n\t\t\tvar canvasWidth = this.$element.find('.repeater-canvas').outerWidth();\n\t\t\tvar tableWidth = this.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\n\n\t\t\tvar actionsWidth = this.$element.find('.table-actions') ? this.$element.find('.table-actions').outerWidth() : 0;\n\n\t\t\tvar shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\n\n\n\t\t\tif (scrollTop > 0) {\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', scrollTop);\n\t\t\t} else {\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', '0');\n\t\t\t}\n\n\t\t\tif (scrollLeft > 0) {\n\t\t\t\tif (frozenEnabled) {\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\n\t\t\t\t}\n\t\t\t\tif (actionsEnabled && shouldScroll) {\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (frozenEnabled) {\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', '0');\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', '0');\n\t\t\t\t}\n\t\t\t\tif (actionsEnabled) {\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', '0');\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', '0');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_createItemActions = function listCreateItemActions () {\n\t\t\tvar actionsHtml = '';\n\t\t\tvar self = this;\n\t\t\tvar i;\n\t\t\tvar length;\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\n\t\t\tvar $actionsTable = this.$canvas.find('.table-actions');\n\n\t\t\tfor (i = 0, length = this.viewOptions.list_actions.items.length; i < length; i++) {\n\t\t\t\tvar action = this.viewOptions.list_actions.items[i];\n\t\t\t\tvar html = action.html;\n\n\t\t\t\tactionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\n\t\t\t}\n\n\t\t\tvar actionsDropdown = '<div class=\"btn-group\">' +\n\t\t\t\t'<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\n\t\t\t\t'<span class=\"caret\"></span>' +\n\t\t\t\t'</button>' +\n\t\t\t\t'<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\n\t\t\t\tactionsHtml +\n\t\t\t\t'</ul></div>';\n\n\t\t\tif ($actionsTable.length < 1) {\n\t\t\t\tvar $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.list_actions_width + 'px\"></div>').insertBefore($table);\n\t\t\t\tvar $actionsColumn = $table.clone().addClass('table-actions');\n\t\t\t\t$actionsColumn.find('th:not(:last-child)').remove();\n\t\t\t\t$actionsColumn.find('tr td:not(:last-child)').remove();\n\n\t\t\t\t// Dont show actions dropdown in header if not multi select\n\t\t\t\tif (this.viewOptions.list_selectable === 'multi' || this.viewOptions.list_selectable === 'action') {\n\t\t\t\t\t$actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\n\n\t\t\t\t\tif (this.viewOptions.list_selectable !== 'action') {\n\t\t\t\t\t\t// disable the header dropdown until an item is selected\n\t\t\t\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar label = this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>';\n\t\t\t\t\t$actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\n\t\t\t\t}\n\n\t\t\t\t// Create Actions dropdown for each cell in actions table\n\t\t\t\tvar $actionsCells = $actionsColumn.find('td');\n\n\t\t\t\t$actionsCells.each(function addActionsDropdown (rowNumber) {\n\t\t\t\t\t$(this).html(actionsDropdown);\n\t\t\t\t\t$(this).find('a').attr('data-row', rowNumber + 1);\n\t\t\t\t});\n\n\t\t\t\t$actionsColumnWrapper.append($actionsColumn);\n\n\t\t\t\tthis.$canvas.addClass('actions-enabled');\n\t\t\t}\n\n\t\t\tthis.list_sizeActionsTable();\n\n\t\t\t// row level actions click\n\t\t\tthis.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\n\t\t\t\tif (!self.isDisabled) {\n\t\t\t\t\tvar actionName = $(this).data('action');\n\t\t\t\t\tvar row = $(this).data('row');\n\t\t\t\t\tvar selected = {\n\t\t\t\t\t\tactionName: actionName,\n\t\t\t\t\t\trows: [row]\n\t\t\t\t\t};\n\t\t\t\t\tself.list_getActionItems(selected, e);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// bulk actions click\n\t\t\tthis.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\n\t\t\t\tif (!self.isDisabled) {\n\t\t\t\t\tvar actionName = $(this).data('action');\n\t\t\t\t\tvar selected = {\n\t\t\t\t\t\tactionName: actionName,\n\t\t\t\t\t\trows: []\n\t\t\t\t\t};\n\t\t\t\t\tvar selector = '.repeater-list-wrapper > table .selected';\n\n\t\t\t\t\tif ( self.viewOptions.list_selectable === 'action' ) {\n\t\t\t\t\t\tselector = '.repeater-list-wrapper > table tr';\n\t\t\t\t\t}\n\t\t\t\t\tself.$element.find(selector).each(function eachSelector (selectorIndex) {\n\t\t\t\t\t\tselected.rows.push(selectorIndex + 1);\n\t\t\t\t\t});\n\n\t\t\t\t\tself.list_getActionItems(selected, e);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_getActionItems = function listGetActionItems (selected, e) {\n\t\t\tvar selectedObj = [];\n\t\t\tvar actionObj = $.grep(this.viewOptions.list_actions.items, function matchedActions (actions) {\n\t\t\t\treturn actions.name === selected.actionName;\n\t\t\t})[0];\n\t\t\tfor (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\n\t\t\t\tvar clickedRow = this.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\n\t\t\t\tselectedObj.push({\n\t\t\t\t\titem: clickedRow,\n\t\t\t\t\trowData: clickedRow.data('item_data')\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (selectedObj.length === 1) {\n\t\t\t\tselectedObj = selectedObj[0];\n\t\t\t}\n\n\t\t\tif (actionObj.clickAction) {\n\t\t\t\tvar callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\n\t\t\t\tactionObj.clickAction(selectedObj, callback, e);\n\t\t\t}\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_sizeActionsTable = function listSizeActionsTable () {\n\t\t\tvar $actionsTable = this.$element.find('.repeater-list table.table-actions');\n\t\t\tvar $actionsTableHeader = $actionsTable.find('thead tr th');\n\t\t\tvar $table = this.$element.find('.repeater-list-wrapper > table');\n\n\t\t\t$actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\n\t\t\t$actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\n\t\t\t$actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\n\t\t\t\t$(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\n\t\t\t});\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_sizeFrozenColumns = function listSizeFrozenColumns () {\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\n\n\t\t\tthis.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\n\t\t\t\t$(this).height($table.find('tr:eq(' + i + ')').height());\n\t\t\t});\n\n\t\t\tvar columnWidth = $table.find('td:eq(0)').outerWidth();\n\t\t\tthis.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\n\t\t};\n\n\t\t$.fn.repeater.Constructor.prototype.list_frozenOptionsInitialize = function listFrozenOptionsInitialize () {\n\t\t\tvar $checkboxes = this.$element.find('.frozen-column-wrapper .checkbox-inline');\n\t\t\tvar $headerCheckbox = this.$element.find('.header-checkbox .checkbox-custom');\n\t\t\tvar $everyTable = this.$element.find('.repeater-list table');\n\t\t\tvar self = this;\n\n\t\t\t// Make sure if row is hovered that it is shown in frozen column as well\n\t\t\tthis.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\n\t\t\t\tvar index = $(this).index();\n\t\t\t\tindex = index + 1;\n\t\t\t\tif (e.type === 'mouseover') {\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\n\t\t\t\t} else {\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$headerCheckbox.checkbox();\n\t\t\t$checkboxes.checkbox();\n\n\t\t\t// Row checkboxes\n\t\t\tvar $rowCheckboxes = this.$element.find('.table-frozen tbody .checkbox-inline');\n\t\t\tvar $checkAll = this.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\n\t\t\t$rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (!self.list_revertingCheckbox) {\n\t\t\t\t\tif (self.isDisabled) {\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar row = $(this).attr('data-row');\n\t\t\t\t\t\trow = parseInt(row, 10) + 1;\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\n\n\t\t\t\t\t\tvar numSelected = self.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\n\t\t\t\t\t\tif (numSelected === 0) {\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\n\t\t\t\t\t\t} else if (numSelected === $rowCheckboxes.length) {\n\t\t\t\t\t\t\t$checkAll.prop('checked', true);\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// \"Check All\" checkbox\n\t\t\t$checkAll.on('change', function onChangeCheckAll (e) {\n\t\t\t\tif (!self.list_revertingCheckbox) {\n\t\t\t\t\tif (self.isDisabled) {\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\n\t\t\t\t\t} else if ($(this).is(':checked')) {\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\n\t\t\t\t\t\tself.$element.trigger('selected.fu.repeaterList', $checkboxes);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\n\t\t\t\t\t\tself.$element.trigger('deselected.fu.repeaterList', $checkboxes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction revertCheckbox ($checkbox) {\n\t\t\t\tself.list_revertingCheckbox = true;\n\t\t\t\t$checkbox.checkbox('toggle');\n\t\t\t\tdelete self.list_revertingCheckbox;\n\t\t\t}\n\t\t};\n\n\t\t// ADDITIONAL DEFAULT OPTIONS\n\t\t$.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\n\t\t\tlist_columnRendered: null,\n\t\t\tlist_columnSizing: true,\n\t\t\tlist_columnSyncing: true,\n\t\t\tlist_highlightSortedColumn: true,\n\t\t\tlist_infiniteScroll: false,\n\t\t\tlist_noItemsHTML: 'no items found',\n\t\t\tlist_selectable: false,\n\t\t\tlist_sortClearing: false,\n\t\t\tlist_rowRendered: null,\n\t\t\tlist_frozenColumns: 0,\n\t\t\tlist_actions: false\n\t\t});\n\n\t\t// EXTENSION DEFINITION\n\t\t$.fn.repeater.viewTypes.list = {\n\t\t\tcleared: function cleared () {\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\n\t\t\t\t\tthis.list_sizeHeadings();\n\t\t\t\t}\n\t\t\t},\n\t\t\tdataOptions: function dataOptions (options) {\n\t\t\t\tif (this.list_sortDirection) {\n\t\t\t\t\toptions.sortDirection = this.list_sortDirection;\n\t\t\t\t}\n\t\t\t\tif (this.list_sortProperty) {\n\t\t\t\t\toptions.sortProperty = this.list_sortProperty;\n\t\t\t\t}\n\t\t\t\treturn options;\n\t\t\t},\n\t\t\tenabled: function enabled (helpers) {\n\t\t\t\tif (this.viewOptions.list_actions) {\n\t\t\t\t\tif (!helpers.status) {\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').removeAttr('disabled');\n\t\t\t\t\t\ttoggleActionsHeaderButton.call(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tinitialize: function initialize (helpers, callback) {\n\t\t\t\tthis.list_sortDirection = null;\n\t\t\t\tthis.list_sortProperty = null;\n\t\t\t\tthis.list_specialBrowserClass = specialBrowserClass();\n\t\t\t\tthis.list_actions_width = (this.viewOptions.list_actions.width !== undefined) ? this.viewOptions.list_actions.width : 37;\n\t\t\t\tthis.list_noItems = false;\n\t\t\t\tcallback();\n\t\t\t},\n\t\t\tresize: function resize () {\n\t\t\t\tsizeColumns.call(this, this.$element.find('.repeater-list-wrapper > table thead tr'));\n\t\t\t\tif (this.viewOptions.list_actions) {\n\t\t\t\t\tthis.list_sizeActionsTable();\n\t\t\t\t}\n\t\t\t\tif (this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') {\n\t\t\t\t\tthis.list_sizeFrozenColumns();\n\t\t\t\t}\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\n\t\t\t\t\tthis.list_sizeHeadings();\n\t\t\t\t}\n\t\t\t},\n\t\t\tselected: function selected () {\n\t\t\t\tvar infScroll = this.viewOptions.list_infiniteScroll;\n\t\t\t\tvar opts;\n\n\t\t\t\tthis.list_firstRender = true;\n\t\t\t\tthis.$loader.addClass('noHeader');\n\n\t\t\t\tif (infScroll) {\n\t\t\t\t\topts = (typeof infScroll === 'object') ? infScroll : {};\n\t\t\t\t\tthis.infiniteScrolling(true, opts);\n\t\t\t\t}\n\t\t\t},\n\t\t\tbefore: function before (helpers) {\n\t\t\t\tvar $listContainer = helpers.container.find('.repeater-list');\n\t\t\t\tvar self = this;\n\t\t\t\tvar $table;\n\n\t\t\t\t// this is a patch, it was pulled out of `renderThead`\n\t\t\t\tif (helpers.data.count > 0) {\n\t\t\t\t\tthis.list_noItems = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.list_noItems = true;\n\t\t\t\t}\n\n\t\t\t\tif ($listContainer.length < 1) {\n\t\t\t\t\t$listContainer = $('<div class=\"repeater-list ' + this.list_specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\n\t\t\t\t\t$listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\n\t\t\t\t\t\tif (self.viewOptions.list_columnSyncing) {\n\t\t\t\t\t\t\tself.list_positionHeadings();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_actions || self.viewOptions.list_selectable === 'multi') {\n\t\t\t\t\t\thelpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\n\t\t\t\t\t\t\tself.list_positionColumns();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers.container.append($listContainer);\n\t\t\t\t}\n\t\t\t\thelpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\n\n\t\t\t\t$table = $listContainer.find('table');\n\t\t\t\trenderThead.call(this, $table, helpers.data);\n\t\t\t\trenderTbody.call(this, $table, helpers.data);\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\trenderItem: function renderItem (helpers) {\n\t\t\t\trenderRow.call(this, helpers.container, helpers.subset, helpers.index);\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tafter: function after () {\n\t\t\t\tvar $sorted;\n\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\n\t\t\t\t\tthis.list_setFrozenColumns();\n\t\t\t\t}\n\n\t\t\t\tif (this.viewOptions.list_actions && !this.list_noItems) {\n\t\t\t\t\tthis.list_createItemActions();\n\t\t\t\t\tthis.list_sizeActionsTable();\n\t\t\t\t}\n\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_actions || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\n\t\t\t\t\tthis.list_positionColumns();\n\t\t\t\t\tthis.list_frozenOptionsInitialize();\n\t\t\t\t}\n\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\n\t\t\t\t\tthis.list_sizeHeadings();\n\t\t\t\t\tthis.list_positionHeadings();\n\t\t\t\t}\n\n\t\t\t\t$sorted = this.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\n\t\t\t\tif ($sorted.length > 0) {\n\t\t\t\t\tthis.list_highlightColumn($sorted.data('fu_item_index'));\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t}\n\n\t// ADDITIONAL METHODS\n\tvar areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\n\t\tif (!newCols) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!oldCols || (newCols.length !== oldCols.length)) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\n\t\t\tif (!oldCols[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfor (var j in newCols[i]) {\n\t\t\t\tif (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\n\t\tvar className = columns[columnIndex].className;\n\t\tvar content = rows[rowIndex][columns[columnIndex].property];\n\t\tvar $col = $('<td></td>');\n\t\tvar width = columns[columnIndex]._auto_width;\n\n\t\tvar property = columns[columnIndex].property;\n\t\tif (this.viewOptions.list_actions !== false && property === '@_ACTIONS_@') {\n\t\t\tcontent = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.list_actions_width  + 'px\"></div>';\n\t\t}\n\n\t\tcontent = (content !== undefined) ? content : '';\n\n\t\t$col.addClass(((className !== undefined) ? className : '')).append(content);\n\t\tif (width !== undefined) {\n\t\t\t$col.outerWidth(width);\n\t\t}\n\n\t\t$row.append($col);\n\n\t\tif (this.viewOptions.list_selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\n\t\t\tvar checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\n\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\"></label>';\n\n\t\t\t$col.html(checkBoxMarkup);\n\t\t}\n\n\t\treturn $col;\n\t};\n\n\tvar renderHeader = function renderHeader ($tr, columns, index) {\n\t\tvar chevDown = 'glyphicon-chevron-down';\n\t\tvar chevron = '.glyphicon.rlc:first';\n\t\tvar chevUp = 'glyphicon-chevron-up';\n\t\tvar $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\n\t\tvar checkAllID = (this.$element.attr('id') + '_' || '') + 'checkall';\n\n\t\tvar checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\n\t\t\t\t'<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\n\t\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\n\t\t\t\t\t'<span class=\"checkbox-label\">&nbsp;</span>' +\n\t\t\t\t'</label>' +\n\t\t\t'</div>';\n\n\t\tvar $header = $('<th></th>');\n\t\tvar self = this;\n\t\tvar $both;\n\t\tvar className;\n\t\tvar sortable;\n\t\tvar $span;\n\t\tvar $spans;\n\n\t\t$div.data('fu_item_index', index);\n\t\t$div.prepend(columns[index].label);\n\t\t$header.html($div.html()).find('[id]').removeAttr('id');\n\n\t\tif (columns[index].property !== '@_CHECKBOX_@') {\n\t\t\t$header.append($div);\n\t\t} else {\n\t\t\t$header.append(checkBoxMarkup);\n\t\t}\n\n\t\t$both = $header.add($div);\n\t\t$span = $div.find(chevron);\n\t\t$spans = $span.add($header.find(chevron));\n\n\t\tif (this.viewOptions.list_actions && columns[index].property === '@_ACTIONS_@') {\n\t\t\tvar width = this.list_actions_width;\n\t\t\t$header.css('width', width);\n\t\t\t$div.css('width', width);\n\t\t}\n\n\t\tclassName = columns[index].className;\n\t\tif (className !== undefined) {\n\t\t\t$both.addClass(className);\n\t\t}\n\n\t\tsortable = columns[index].sortable;\n\t\tif (sortable) {\n\t\t\t$both.addClass('sortable');\n\t\t\t$div.on('click.fu.repeaterList', function onClickRepeaterList () {\n\t\t\t\tif (!self.isDisabled) {\n\t\t\t\t\tself.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\n\t\t\t\t\tif ($div.hasClass('sorted')) {\n\t\t\t\t\t\tif ($span.hasClass(chevUp)) {\n\t\t\t\t\t\t\t$spans.removeClass(chevUp).addClass(chevDown);\n\t\t\t\t\t\t\tself.list_sortDirection = 'desc';\n\t\t\t\t\t\t} else if (!self.viewOptions.list_sortClearing) {\n\t\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\n\t\t\t\t\t\t\tself.list_sortDirection = 'asc';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$both.removeClass('sorted');\n\t\t\t\t\t\t\t$spans.removeClass(chevDown);\n\t\t\t\t\t\t\tself.list_sortDirection = null;\n\t\t\t\t\t\t\tself.list_sortProperty = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\n\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\n\t\t\t\t\t\tself.list_sortDirection = 'asc';\n\t\t\t\t\t\t$both.addClass('sorted');\n\t\t\t\t\t}\n\n\t\t\t\t\tself.render({\n\t\t\t\t\t\tclearInfinite: true,\n\t\t\t\t\t\tpageIncrement: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\n\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\n\t\t\t$both.addClass('sortable sorted');\n\t\t\tif (columns[index].sortDirection === 'asc') {\n\t\t\t\t$spans.addClass(chevUp);\n\t\t\t\tthis.list_sortDirection = 'asc';\n\t\t\t} else {\n\t\t\t\t$spans.addClass(chevDown);\n\t\t\t\tthis.list_sortDirection = 'desc';\n\t\t\t}\n\n\t\t\tthis.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\n\t\t}\n\n\t\t$tr.append($header);\n\t};\n\n\tvar onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\n\t\tvar isMulti = repeater.viewOptions.list_selectable === 'multi';\n\t\tvar isActions = repeater.viewOptions.list_actions;\n\t\tvar $repeater = repeater.$element;\n\n\t\tif (!repeater.isDisabled) {\n\t\t\tvar $item = $(this);\n\t\t\tvar index = $(this).index() + 1;\n\t\t\tvar $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\n\t\t\tvar $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\n\t\t\tvar $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\n\n\t\t\tif ($item.is('.selected')) {\n\t\t\t\t$item.removeClass('selected');\n\t\t\t\tif (isMulti) {\n\t\t\t\t\t$checkBox.click();\n\t\t\t\t\t$frozenRow.removeClass('selected');\n\t\t\t\t\tif (isActions) {\n\t\t\t\t\t\t$actionsRow.removeClass('selected');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$item.find('.repeater-list-check').remove();\n\t\t\t\t}\n\n\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $item);\n\t\t\t} else {\n\t\t\t\tif (!isMulti) {\n\t\t\t\t\trepeater.$canvas.find('.repeater-list-check').remove();\n\t\t\t\t\trepeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\n\t\t\t\t\t\t$(this).removeClass('selected');\n\t\t\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $(this));\n\t\t\t\t\t});\n\t\t\t\t\t$item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\n\t\t\t\t\t$item.addClass('selected');\n\t\t\t\t\t$frozenRow.addClass('selected');\n\t\t\t\t} else {\n\t\t\t\t\t$checkBox.click();\n\t\t\t\t\t$item.addClass('selected');\n\t\t\t\t\t$frozenRow.addClass('selected');\n\t\t\t\t\tif (isActions) {\n\t\t\t\t\t\t$actionsRow.addClass('selected');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$repeater.trigger('selected.fu.repeaterList', $item);\n\t\t\t}\n\n\t\t\ttoggleActionsHeaderButton.call(repeater);\n\t\t}\n\t};\n\n\tvar renderRow = function renderRow ($tbody, rows, index) {\n\t\tvar $row = $('<tr></tr>');\n\n\t\tif (this.viewOptions.list_selectable) {\n\t\t\t$row.data('item_data', rows[index]);\n\n\t\t\tif (this.viewOptions.list_selectable !== 'action') {\n\t\t\t\t$row.addClass('selectable');\n\t\t\t\t$row.attr('tabindex', 0);\t// allow items to be tabbed to / focused on\n\n\t\t\t\tvar repeater = this;\n\t\t\t\t$row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\n\t\t\t\t\tonClickRowRepeaterList.call(this, repeater);\n\t\t\t\t});\n\n\t\t\t\t// allow selection via enter key\n\t\t\t\t$row.keyup(function onRowKeyup (e) {\n\t\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\t\t// triggering a standard click event to be caught by the row click handler above\n\t\t\t\t\t\t$row.trigger('click.fu.repeaterList');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.viewOptions.list_actions && !this.viewOptions.list_selectable) {\n\t\t\t$row.data('item_data', rows[index]);\n\t\t}\n\n\t\tvar columns = [];\n\t\tfor (var i = 0, length = this.list_columns.length; i < length; i++) {\n\t\t\tcolumns.push(renderColumn.call(this, $row, rows, index, this.list_columns, i));\n\t\t}\n\n\t\t$tbody.append($row);\n\n\t\tif (this.viewOptions.list_columnRendered) {\n\t\t\tfor (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\n\t\t\t\tif (!(this.list_columns[columnIndex].property === '@_CHECKBOX_@' || this.list_columns[columnIndex].property === '@_ACTIONS_@')) {\n\t\t\t\t\tthis.viewOptions.list_columnRendered({\n\t\t\t\t\t\tcontainer: $row,\n\t\t\t\t\t\tcolumnAttr: this.list_columns[columnIndex].property,\n\t\t\t\t\t\titem: columns[columnIndex],\n\t\t\t\t\t\trowData: rows[index]\n\t\t\t\t\t}, function noop () {});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.viewOptions.list_rowRendered) {\n\t\t\tthis.viewOptions.list_rowRendered({\n\t\t\t\tcontainer: $tbody,\n\t\t\t\titem: $row,\n\t\t\t\trowData: rows[index]\n\t\t\t}, function noop () {});\n\t\t}\n\t};\n\n\tvar renderTbody = function renderTbody ($table, data) {\n\t\tvar $tbody = $table.find('tbody');\n\t\tvar $empty;\n\n\t\tif ($tbody.length < 1) {\n\t\t\t$tbody = $('<tbody data-container=\"true\"></tbody>');\n\t\t\t$table.append($tbody);\n\t\t}\n\n\t\tif (typeof data.error === 'string' && data.error.length > 0) {\n\t\t\t$empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\n\t\t\t$empty.find('td').append(data.error);\n\t\t\t$tbody.append($empty);\n\t\t} else if (data.items && data.items.length < 1) {\n\t\t\t$empty = $('<tr class=\"empty\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\n\t\t\t$empty.find('td').append(this.viewOptions.list_noItemsHTML);\n\t\t\t$tbody.append($empty);\n\t\t}\n\t};\n\n\tvar renderThead = function renderThead ($table, data) {\n\t\tvar columns = data.columns || [];\n\t\tvar $thead = $table.find('thead');\n\t\tvar i;\n\t\tvar length;\n\t\tvar $tr;\n\n\t\tif (this.list_firstRender || areDifferentColumns(this.list_columns, columns) || $thead.length === 0) {\n\t\t\t$thead.remove();\n\n\t\t\t// list_noItems is set in `before` method\n\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\n\t\t\t\tvar checkboxColumn = {\n\t\t\t\t\tlabel: 'c',\n\t\t\t\t\tproperty: '@_CHECKBOX_@',\n\t\t\t\t\tsortable: false\n\t\t\t\t};\n\t\t\t\tcolumns.splice(0, 0, checkboxColumn);\n\t\t\t}\n\n\t\t\tthis.list_columns = columns;\n\t\t\tthis.list_firstRender = false;\n\t\t\tthis.$loader.removeClass('noHeader');\n\n\t\t\t// keep action column header even when empty, you'll need it later....\n\t\t\tif (this.viewOptions.list_actions) {\n\t\t\t\tvar actionsColumn = {\n\t\t\t\t\tlabel: this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>',\n\t\t\t\t\tproperty: '@_ACTIONS_@',\n\t\t\t\t\tsortable: false,\n\t\t\t\t\twidth: this.list_actions_width\n\t\t\t\t};\n\t\t\t\tcolumns.push(actionsColumn);\n\t\t\t}\n\n\n\t\t\t$thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\n\t\t\t$tr = $thead.find('tr');\n\t\t\tfor (i = 0, length = columns.length; i < length; i++) {\n\t\t\t\trenderHeader.call(this, $tr, columns, i);\n\t\t\t}\n\t\t\t$table.prepend($thead);\n\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\n\t\t\t\t// after checkbox column is created need to get width of checkbox column from\n\t\t\t\t// its css class\n\t\t\t\tvar checkboxWidth = this.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\n\t\t\t\tvar selectColumn = $.grep(columns, function grepColumn (column) {\n\t\t\t\t\treturn column.property === '@_CHECKBOX_@';\n\t\t\t\t})[0];\n\t\t\t\tselectColumn.width = checkboxWidth;\n\t\t\t}\n\t\t\tsizeColumns.call(this, $tr);\n\t\t}\n\t};\n\n\tvar sizeColumns = function sizeColumns ($tr) {\n\t\tvar automaticallyGeneratedWidths = [];\n\t\tvar self = this;\n\t\tvar i;\n\t\tvar length;\n\t\tvar newWidth;\n\t\tvar widthTaken;\n\n\t\tif (this.viewOptions.list_columnSizing) {\n\t\t\ti = 0;\n\t\t\twidthTaken = 0;\n\t\t\t$tr.find('th').each(function eachTH () {\n\t\t\t\tvar $th = $(this);\n\t\t\t\tvar width;\n\t\t\t\tif (self.list_columns[i].width !== undefined) {\n\t\t\t\t\twidth = self.list_columns[i].width;\n\t\t\t\t\t$th.outerWidth(width);\n\t\t\t\t\twidthTaken += $th.outerWidth();\n\t\t\t\t\tself.list_columns[i]._auto_width = width;\n\t\t\t\t} else {\n\t\t\t\t\tvar outerWidth = $th.find('.repeater-list-heading').outerWidth();\n\t\t\t\t\tautomaticallyGeneratedWidths.push({\n\t\t\t\t\t\tcol: $th,\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tminWidth: outerWidth\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t});\n\n\t\t\tlength = automaticallyGeneratedWidths.length;\n\t\t\tif (length > 0) {\n\t\t\t\tvar canvasWidth = this.$canvas.find('.repeater-list-wrapper').outerWidth();\n\t\t\t\tnewWidth = Math.floor((canvasWidth - widthTaken) / length);\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tif (automaticallyGeneratedWidths[i].minWidth > newWidth) {\n\t\t\t\t\t\tnewWidth = automaticallyGeneratedWidths[i].minWidth;\n\t\t\t\t\t}\n\t\t\t\t\tautomaticallyGeneratedWidths[i].col.outerWidth(newWidth);\n\t\t\t\t\tthis.list_columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar specialBrowserClass = function specialBrowserClass () {\n\t\tvar ua = window.navigator.userAgent;\n\t\tvar msie = ua.indexOf('MSIE ');\n\t\tvar firefox = ua.indexOf('Firefox');\n\n\t\tif (msie > 0 ) {\n\t\t\treturn 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t\t} else if (firefox > 0) {\n\t\t\treturn 'firefox';\n\t\t}\n\n\t\treturn '';\n\t};\n\n\tvar toggleActionsHeaderButton = function toggleActionsHeaderButton () {\n\t\tvar selectedSelector = '.repeater-list-wrapper > table .selected';\n\t\tvar $actionsColumn = this.$element.find('.table-actions');\n\t\tvar $selected;\n\n\t\tif (this.viewOptions.list_selectable === 'action') {\n\t\t\tselectedSelector = '.repeater-list-wrapper > table tr';\n\t\t}\n\n\t\t$selected = this.$canvas.find( selectedSelector );\n\n\t\tif ($selected.length > 0) {\n\t\t\t$actionsColumn.find('thead .btn').removeAttr('disabled');\n\t\t} else {\n\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\n\t\t}\n\t};\n\n});\n\ndefine('skylark-ui-repeater/repeater-thumbnail',[\n    \"skylark-utils/langx\",\n    \"skylark-utils/browser\",\n    \"skylark-utils/eventer\",\n    \"skylark-utils/noder\",\n    \"skylark-utils/geom\",\n    \"skylark-utils/query\",\n    \"./repeater\"\n], function(langx, browser, eventer, noder, geom, $) {\n\n    /*\n     * Fuel UX Checkbox\n     * https://github.com/ExactTarget/fuelux\n     *\n     * Copyright (c) 2014 ExactTarget\n     * Licensed under the BSD New license.\n     */\n\n    if ($.fn.repeater) {\n        //ADDITIONAL METHODS\n        $.fn.repeater.Constructor.prototype.thumbnail_clearSelectedItems = function() {\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\n        };\n\n        $.fn.repeater.Constructor.prototype.thumbnail_getSelectedItems = function() {\n            var selected = [];\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\n                selected.push($(this));\n            });\n            return selected;\n        };\n\n        $.fn.repeater.Constructor.prototype.thumbnail_setSelectedItems = function(items, force) {\n            var selectable = this.viewOptions.thumbnail_selectable;\n            var self = this;\n            var i, $item, l, n;\n\n            //this function is necessary because lint yells when a function is in a loop\n            function compareItemIndex() {\n                if (n === items[i].index) {\n                    $item = $(this);\n                    return false;\n                } else {\n                    n++;\n                }\n            }\n\n            //this function is necessary because lint yells when a function is in a loop\n            function compareItemSelector() {\n                $item = $(this);\n                if ($item.is(items[i].selector)) {\n                    selectItem($item, items[i].selected);\n                }\n            }\n\n            function selectItem($itm, select) {\n                select = (select !== undefined) ? select : true;\n                if (select) {\n                    if (!force && selectable !== 'multi') {\n                        self.thumbnail_clearSelectedItems();\n                    }\n\n                    $itm.addClass('selected');\n                } else {\n                    $itm.removeClass('selected');\n                }\n            }\n\n            if (!$.isArray(items)) {\n                items = [items];\n            }\n\n            if (force === true || selectable === 'multi') {\n                l = items.length;\n            } else if (selectable) {\n                l = (items.length > 0) ? 1 : 0;\n            } else {\n                l = 0;\n            }\n\n            for (i = 0; i < l; i++) {\n                if (items[i].index !== undefined) {\n                    $item = $();\n                    n = 0;\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\n                    if ($item.length > 0) {\n                        selectItem($item, items[i].selected);\n                    }\n\n                } else if (items[i].selector) {\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\n                }\n            }\n        };\n\n        //ADDITIONAL DEFAULT OPTIONS\n        $.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\n            thumbnail_alignment: 'left',\n            thumbnail_infiniteScroll: false,\n            thumbnail_itemRendered: null,\n            thumbnail_noItemsHTML: 'no items found',\n            thumbnail_selectable: false,\n            thumbnail_template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\n        });\n\n        //EXTENSION DEFINITION\n        $.fn.repeater.viewTypes.thumbnail = {\n            selected: function() {\n                var infScroll = this.viewOptions.thumbnail_infiniteScroll;\n                var opts;\n                if (infScroll) {\n                    opts = (typeof infScroll === 'object') ? infScroll : {};\n                    this.infiniteScrolling(true, opts);\n                }\n            },\n            before: function(helpers) {\n                var alignment = this.viewOptions.thumbnail_alignment;\n                var $cont = this.$canvas.find('.repeater-thumbnail-cont');\n                var data = helpers.data;\n                var response = {};\n                var $empty, validAlignments;\n\n                if ($cont.length < 1) {\n                    $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\n                    if (alignment && alignment !== 'none') {\n                        validAlignments = {\n                            'center': 1,\n                            'justify': 1,\n                            'left': 1,\n                            'right': 1\n                        };\n                        alignment = (validAlignments[alignment]) ? alignment : 'justify';\n                        $cont.addClass('align-' + alignment);\n                        this.thumbnail_injectSpacers = true;\n                    } else {\n                        this.thumbnail_injectSpacers = false;\n                    }\n                    response.item = $cont;\n                } else {\n                    response.action = 'none';\n                }\n\n                if (data.items && data.items.length < 1) {\n                    $empty = $('<div class=\"empty\"></div>');\n                    $empty.append(this.viewOptions.thumbnail_noItemsHTML);\n                    $cont.append($empty);\n                } else {\n                    $cont.find('.empty:first').remove();\n                }\n\n                return response;\n            },\n            renderItem: function(helpers) {\n                var selectable = this.viewOptions.thumbnail_selectable;\n                var selected = 'selected';\n                var self = this;\n                var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.viewOptions.thumbnail_template));\n\n                $thumbnail.data('item_data', helpers.data.items[helpers.index]);\n\n                if (selectable) {\n                    $thumbnail.addClass('selectable');\n                    $thumbnail.on('click', function() {\n                        if (self.isDisabled) return;\n\n                        if (!$thumbnail.hasClass(selected)) {\n                            if (selectable !== 'multi') {\n                                self.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\n                                    var $itm = $(this);\n                                    $itm.removeClass(selected);\n                                    self.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\n                                });\n                            }\n\n                            $thumbnail.addClass(selected);\n                            self.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\n                        } else {\n                            $thumbnail.removeClass(selected);\n                            self.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\n                        }\n                    });\n                }\n\n                helpers.container.append($thumbnail);\n                if (this.thumbnail_injectSpacers) {\n                    $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\n                }\n\n                if (this.viewOptions.thumbnail_itemRendered) {\n                    this.viewOptions.thumbnail_itemRendered({\n                        container: helpers.container,\n                        item: $thumbnail,\n                        itemData: helpers.subset[helpers.index]\n                    }, function() {});\n                }\n\n                return false;\n            }\n        };\n    }\n\n    //ADDITIONAL METHODS\n    function fillTemplate(itemData, template) {\n        var invalid = false;\n\n        function replace() {\n            var end, start, val;\n\n            start = template.indexOf('{{');\n            end = template.indexOf('}}', start + 2);\n\n            if (start > -1 && end > -1) {\n                val = langx.trim(template.substring(start + 2, end));\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\n                template = template.substring(0, start) + val + template.substring(end + 2);\n            } else {\n                invalid = true;\n            }\n        }\n\n        while (!invalid && template.search('{{') >= 0) {\n            replace(template);\n        }\n\n        return template;\n    }\n\n});\ndefine('skylark-ui-repeater/main',[\n    \"skylark-utils/query\",\n    \"./repeater\",\n    \"./repeater-list\",\n    \"./repeater-thumbnail\"\n], function($) {\n    return $;\n});\ndefine('skylark-ui-repeater', ['skylark-ui-repeater/main'], function (main) { return main; });\n\n"]}