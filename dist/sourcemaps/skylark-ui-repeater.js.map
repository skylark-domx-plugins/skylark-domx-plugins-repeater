{"version":3,"sources":["skylark-ui-repeater.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","resolved","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","browser","eventer","noder","geom","$","widgets","ui","sbswt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isShiftHeld","e","shiftKey","isKey","keyCode","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","test","html","text","mixin","WidgetBase","Widget","inherit","klassName","velm","old","fn","loader","Loader","init","element","options","this","$element","defaults","destroy","remove","outerHTML","ieRepaint","msieVersion","next","pause","play","previous","reset","option","methodReturn","Array","prototype","slice","call","arguments","$set","each","$this","data","undefined","Constructor","noConflict","selectlist","Selectlist","$button","find","$hiddenField","$label","$dropdownMenu","dropdown","on","proxy","itemClicked","setDefaultSelection","resize","attr","items","children","disable","doSelect","emptyLabelHTML","document","key","String","fromCharCode","which","idx","item","charAt","toLowerCase","focus","off","$item","$selectedItem","val","is","removeData","removeAttr","trigger","preventDefault","currentTarget","parent","target","itemChanged","closest","selectedItem","width","newWidth","sizer","addClass","Boolean","hasClass","body","append","clone","outerWidth","css","txt","selectByText","textContent","innerText","selectByValue","value","selector","selectBySelector","selectByIndex","index","eq","has","enable","removeClass","getValue","combobox","Combobox","$dropMenu","$input","$inputGroupBtn","itemclicked","inputchanged","menuShown","keypress","filterOnKeypress","filter","trim","clearSelection","autoResizeMenu","resizeMenu","notFound","synthetic","ENTER","ESC","LEFT","UP","RIGHT","DOWN","IS_NAVIGATIONAL","showOptionsOnKeypress","selected","$selected","prev","previousKeyPress","extra","list","predicate","self","visible","$li","substr","repeater","Repeater","$btn","currentView","$canvas","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewOptions","viewType","search","searchOnKeyPress","allowCancel","render","clearInfinite","evt","pageInputChange","viewChanged","clearTimeout","setTimeout","defaultView","setViewOptions","initViewTypes","changeView","clear","opts","preserve","scan","empty","viewTypeObj","viewTypes","cleared","clearPreservedDataSourceOptions","markup","infinitescroll","enabled","status","parseInt","getDataOptions","dataSourceOptions","preserveDataSourceOptions","returnOptions","view","pageIndex","pageSize","searchValue","addViewTypeData","dataOptions","infiniteScrolling","footer","viewport","end","dataSource","height","outerHeight","hide","cont","show","infiniteScrollPaging","page","pages","NaN","initInfiniteScrolling","helpers","callback","initViewType","itemization","count","start","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropPagingCap","dropMenu","l","prevView","syncViewButtonState","beforeRender","repeaterPrototypeContext","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","staticHeight","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","prop","logWarn","subItemIndex","addSubItem","after","addAfter","curView","viewName","views","parents","$itemToCheck","msg","console","warn","keep","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","afterRender","state","renderOptions","d","runRenderer","list_clearSelectedItems","list_highlightColumn","force","tbody","list_highlightSortedColumn","col","list_getSelectedItems","list_positionHeadings","$wrapper","offsetLeft","offset","left","scrollLeft","$heading","list_setSelectedItems","itms","selectable","list_selectable","isArray","checkIfItemMatchesValue","rowIndex","property","selectItem","$itm","slct","$frozenCols","select","list_frozenColumns","list_actions","prepend","list_sizeHeadings","$table","$th","list_setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","$frozenThead","$frozenTheadWrapper","$checkboxLabel","list_sizeFrozenColumns","click","list_positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","list_createItemActions","actionsHtml","$actionsTable","name","actionsDropdown","$actionsColumnWrapper","list_actions_width","$actionsColumn","label","$actionsCells","rowNumber","list_sizeActionsTable","actionName","row","rows","list_getActionItems","selectorIndex","selectedObj","actionObj","grep","actions","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","list_frozenOptionsInitialize","revertCheckbox","$checkbox","list_revertingCheckbox","checkbox","$checkboxes","$headerCheckbox","$everyTable","type","$rowCheckboxes","$checkAll","numSelected","list_columnRendered","list_columnSizing","list_columnSyncing","list_infiniteScroll","list_noItemsHTML","list_sortClearing","list_rowRendered","list_sortDirection","sortDirection","list_sortProperty","sortProperty","toggleActionsHeaderButton","list_specialBrowserClass","specialBrowserClass","list_noItems","sizeColumns","infScroll","list_firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","areDifferentColumns","oldCols","newCols","newColsL","j","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevron","chevUp","$div","checkAllID","$header","add","onClickRowRepeaterList","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","$tbody","keyup","list_columns","colLength","columnAttr","$empty","error","$thead","checkboxColumn","splice","actionsColumn","checkboxWidth","selectColumn","column","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","fillTemplate","itemData","template","replace","invalid","thumbnail_clearSelectedItems","thumbnail_getSelectedItems","thumbnail_setSelectedItems","compareItemIndex","n","compareItemSelector","thumbnail_selectable","thumbnail_alignment","thumbnail_infiniteScroll","thumbnail_itemRendered","thumbnail_noItemsHTML","thumbnail_template","thumbnail","validAlignments","alignment","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","main"],"mappings":";;;;;;;CAAA,SAAUA,EAAQC,GAQd,QAASC,GAASC,EAAUC,GACxB,GAAkB,MAAdD,EAAS,GACX,MAAOA,EAET,IAAIE,GAAQD,EAAKE,MAAM,KACnBC,EAAQJ,EAASG,MAAM,IAC3BD,GAAMG,KACN,KAAK,GAAIC,GAAE,EAAGA,EAAEF,EAAMG,OAAQD,IACV,KAAZF,EAAME,KAEM,MAAZF,EAAME,GACNJ,EAAMG,MAENH,EAAMM,KAAKJ,EAAME,IAEzB,OAAOJ,GAAMO,KAAK,KAtBxB,GAAIC,GAASZ,EAAQY,OAClBC,EAAUb,EAAQa,QAClBC,EAA2B,kBAAXF,IAAyBA,EAAOG,IAChDC,GAAUF,GAA4B,mBAAZG,QAE7B,KAAKH,IAAUF,EAAQ,CACrB,GAAIM,KAkBJN,GAASZ,EAAQY,OAAS,SAASO,EAAIC,EAAMrB,GACnB,kBAAXA,IACPmB,EAAIC,IACApB,QAASA,EACTqB,KAAMA,EAAKF,IAAI,SAASG,GACtB,MAAOpB,GAASoB,EAAIF,KAEtBF,QAAS,MAEbJ,EAAQM,IAERG,SAASH,GAAMpB,GAGvBc,EAAUb,EAAQa,QAAU,SAASM,GACjC,IAAKD,EAAIK,eAAeJ,GACpB,KAAM,IAAIK,OAAM,UAAYL,EAAK,wBAErC,IAAIM,GAASP,EAAIC,EACjB,KAAKM,EAAOR,QAAS,CACjB,GAAIS,KAEJD,GAAOL,KAAKO,QAAQ,SAASN,GACzBK,EAAKhB,KAAKG,EAAQQ,MAGtBI,EAAOR,QAAUQ,EAAO1B,QAAQ6B,MAAMC,OAAQH,GAElD,MAAOD,GAAOR,SAIpBlB,EAAQa,EAAOC,GAEVC,IACCE,EACFC,QAAUJ,EAAQ,yBAEbb,EAAQ8B,YACV9B,EAAQ8B,UAAYjB,EAAQ,4BAMlC,SAASD,EAAOC,GA/DnBD,EAAA,wBACA,wBACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,yBACA,SAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAR,EAAAQ,GAAAR,EAAAQ,OACAC,EAAAD,EAAAC,SAUAC,GACAC,kBAAA,EACAC,cAAA,IACAC,eAAA,GACAC,mBAAA,GACAC,cAAA,GACAC,YAAA,EACAC,iBAAA,IAGAC,EAAA,SAAAC,GAAA,MAAAA,GAAAC,YAAA,GAEAC,EAAA,SAAAC,GACA,MAAA,UAAAH,GACA,MAAAA,GAAAG,UAAAA,IAIAC,EAAAF,EAAAX,EAAAC,mBACAa,EAAAH,EAAAX,EAAAG,gBACAY,EAAAJ,EAAAX,EAAAM,aACAU,EAAAL,EAAAX,EAAAO,kBACAU,EAAAN,EAAAX,EAAAI,oBAEAc,EAAA,WAIAC,EAAA,SAAAC,GAEA,KAAAF,EAAAG,KAAAD,IACAA,EAAAxB,EAAA,OAAA0B,KAAAF,GAAAG,MAIA,OAAA3B,GAAA,OAAA2B,KAAAH,GAAAE,OAMA/B,GAAAiC,MAAAzB,GACAC,MAAAA,EACAmB,WAAAA,EACAN,eAAAA,EACAC,YAAAA,EACAN,YAAAA,EACAO,SAAAA,EACAC,UAAAA,EACAC,YAAAA,GAKA,IAAAQ,GAAA5B,EAAA6B,OAAAC,SACAC,UAAA,cAQA,OAJArC,GAAAiC,MAAAzB,GACA0B,WAAAA,IAGA1B,IAUA5B,EAAA,yBACA,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,WACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkC,EAAAjC,EAAAG,GAYA,GAAA+B,GAAAlC,EAAAmC,GAAAC,OAIAC,EAAAlC,EAAAkC,OAAAlC,EAAA0B,WAAAE,SACAC,UAAA,SAEAM,KAAA,SAAAC,EAAAC,GACAC,KAAAC,SAAA1C,EAAAuC,GACAE,KAAAD,QAAA7C,EAAAiC,SAAA5B,EAAAmC,GAAAC,OAAAO,SAAAH,IAEAI,QAAA,WAOA,MANAH,MAAAC,SAAAG,SAMAJ,KAAAC,SAAA,GAAAI,WAGAC,UAAA,aAEAC,YAAA,aAEAC,KAAA,aAEAC,MAAA,aAEAC,KAAA,aAEAC,SAAA,aAEAC,MAAA,cA+CA,OA1CArD,GAAAmC,GAAAC,OAAA,SAAAkB,GACA,GACAC,GADAlE,EAAAmE,MAAAC,UAAAC,MAAAC,KAAAC,UAAA,GAGAC,EAAApB,KAAAqB,KAAA,WACA,GAAAC,GAAA/D,EAAAyC,MACAuB,EAAAD,EAAAC,KAAA,aACAxB,EAAA,gBAAAc,IAAAA,CAEAU,IACAD,EAAAC,KAAA,YAAAA,EAAA,GAAA3B,GAAAI,KAAAD,IAGA,gBAAAc,KACAC,EAAAS,EAAAV,GAAA/D,MAAAyE,EAAA3E,KAIA,OAAA4E,UAAAV,EAAAM,EAAAN,GAGAvD,EAAAmC,GAAAC,OAAAO,YAEA3C,EAAAmC,GAAAC,OAAA8B,YAAA7B,EAEArC,EAAAmC,GAAAC,OAAA+B,WAAA,WAEA,MADAnE,GAAAmC,GAAAC,OAAAF,EACAO,MAeAzC,EAAAmC,GAAAC,SAUA7D,EAAA,6BACA,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,WACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkC,EAAAjC,EAAAG,GAWA,GAAA+B,GAAAlC,EAAAmC,GAAAiC,WAGAC,EAAAlE,EAAAkE,WAAAlE,EAAA0B,WAAAE,SACAC,UAAA,aAEAM,KAAA,SAAAC,EAAAC,GACAC,KAAAC,SAAA1C,EAAAuC,GACAE,KAAAD,QAAA7C,EAAAiC,SAAA5B,EAAAmC,GAAAiC,WAAAzB,SAAAH,GAGAC,KAAA6B,QAAA7B,KAAAC,SAAA6B,KAAA,wBACA9B,KAAA+B,aAAA/B,KAAAC,SAAA6B,KAAA,iBACA9B,KAAAgC,OAAAhC,KAAAC,SAAA6B,KAAA,mBACA9B,KAAAiC,cAAAjC,KAAAC,SAAA6B,KAAA,kBAEA9B,KAAA6B,QAAAK,WAEAlC,KAAAC,SAAAkC,GAAA,sBAAA,mBAAAjF,EAAAkF,MAAApC,KAAAqC,YAAArC,OACAA,KAAAsC,sBAEA,SAAAvC,EAAAwC,QAAA,SAAAvC,KAAAC,SAAAuC,KAAA,gBACAxC,KAAAuC,QAIA,IAAAE,GAAAzC,KAAAiC,cAAAS,SAAA,KACA,KAAAD,EAAA9G,SACAqE,KAAA2C,UACA3C,KAAA4C,SAAArF,EAAAyC,KAAAD,QAAA8C,kBAIA7C,KAAAC,SAAAkC,GAAA,oBAAA,WACA,GAAAb,GAAA/D,EAAAyC,KAEAzC,GAAAuF,UAAAX,GAAA,yBAAA,SAAA/D,GAGA,GAAA2E,GAAAC,OAAAC,aAAA7E,EAAA8E,MAEA5B,GAAAQ,KAAA,MAAAT,KAAA,SAAA8B,EAAAC,GACA,GAAA7F,EAAA6F,GAAAlE,OAAAmE,OAAA,GAAAC,gBAAAP,EAEA,MADAxF,GAAA6F,GAAAV,SAAA,KAAAa,SACA,QAQAvD,KAAAC,SAAAkC,GAAA,mBAAA,WACA5E,EAAAuF,UAAAU,IAAA,6BAIArD,QAAA,WAOA,MANAH,MAAAC,SAAAG,SAMAJ,KAAAC,SAAA,GAAAI,WAGAuC,SAAA,SAAAa,GACA,GAAAC,EACA1D,MAAA0D,cAAAA,EAAAD,EAEAzD,KAAA+B,aAAA4B,IAAA3D,KAAA0D,cAAAlB,KAAA,eACAxC,KAAAgC,OAAA/C,KAAA1B,EAAAyC,KAAA0D,cAAAhB,WAAA,IAAAzD,QAIAe,KAAAC,SAAA6B,KAAA,MAAAT,KAAA,WACAqC,EAAAE,GAAArG,EAAAyC,OACAzC,EAAAyC,MAAAwC,KAAA,iBAAA,GAEAjF,EAAAyC,MAAA6D,WAAA,YAAAC,WAAA,oBAKAzB,YAAA,SAAAjE,GACA4B,KAAAC,SAAA8D,QAAA,wBAAA/D,KAAA0D,eAEAtF,EAAA4F,iBAEAzG,EAAAa,EAAA6F,eAAAC,OAAA,MAAAN,GAAA,0BAGArG,EAAAa,EAAA+F,QAAAD,SAAAN,GAAA5D,KAAA0D,gBACA1D,KAAAoE,YAAAhG,GAIA4B,KAAAC,SAAA6B,KAAA,oBAAAyB,UAGAa,YAAA,SAAAhG,GAEA4B,KAAA4C,SAAArF,EAAAa,EAAA+F,QAAAE,QAAA,MAIA,IAAA9C,GAAAvB,KAAAsE,cAEAtE,MAAAC,SAAA8D,QAAA,wBAAAxC,IAGAgB,OAAA,WACA,GAAAgC,GAAA,EACAC,EAAA,EACAC,EAAAlH,EAAA,UAAAmH,SAAA,mBAGAC,SAAApH,EAAAuF,UAAAhB,KAAA,QAAA8C,SAAA,WAEArH,EAAAuF,SAAA+B,MAAAC,OAAAL,GAGAlH,EAAA,iBAAAuH,OAAAL,GAGAA,EAAAK,OAAA9E,KAAAC,SAAA8E,SAEA/E,KAAAC,SAAA6B,KAAA,KAAAT,KAAA,WACAoD,EAAA3C,KAAA,mBAAA5C,KAAA3B,EAAAyC,MAAAd,QACAsF,EAAAC,EAAA3C,KAAA,eAAAkD,aACAR,GAAAC,EAAA3C,KAAA,YAAAkD,aACAR,EAAAD,IACAA,EAAAC,KAIAD,GAAA,IAIAvE,KAAA6B,QAAAoD,IAAA,QAAAV,GACAvE,KAAAiC,cAAAgD,IAAA,QAAAV,GAEAE,EAAArE,WAGAkE,aAAA,WACA,GAAAY,GAAAlF,KAAA0D,cAAAxE,MACA,OAAAhC,GAAAiC,OACAD,KAAAgG,GACAlF,KAAA0D,cAAAnC,SAGA4D,aAAA,SAAAjG,GACA,GAAAuE,GAAAlG,KACAyC,MAAAC,SAAA6B,KAAA,MAAAT,KAAA,WACA,IAAArB,KAAAoF,aAAApF,KAAAqF,WAAA9H,EAAAyC,MAAAd,QAAA,IAAAoE,iBAAApE,GAAA,IAAAoE,cAEA,MADAG,GAAAlG,EAAAyC,OACA,IAGAA,KAAA4C,SAAAa,IAGA6B,cAAA,SAAAC,GACA,GAAAC,GAAA,kBAAAD,EAAA,IACAvF,MAAAyF,iBAAAD,IAGAE,cAAA,SAAAC,GAEA,GAAAH,GAAA,SAAAG,EAAA,GACA3F,MAAAyF,iBAAAD,IAGAC,iBAAA,SAAAD,GACA,GAAA/B,GAAAzD,KAAAC,SAAA6B,KAAA0D,EACAxF,MAAA4C,SAAAa,IAGAnB,oBAAA,WACA,GAAAmB,GAAAzD,KAAAC,SAAA6B,KAAA,0BAAA8D,GAAA,EAEA,KAAAnC,EAAA9H,SACA8H,EAAAzD,KAAAC,SAAA6B,KAAA,MAAA+D,IAAA,KAAAD,GAAA,IAGA5F,KAAA4C,SAAAa,IAGAqC,OAAA,WACA9F,KAAAC,SAAA8F,YAAA,YACA/F,KAAA6B,QAAAkE,YAAA,aAGApD,QAAA,WACA3C,KAAAC,SAAAyE,SAAA,YACA1E,KAAA6B,QAAA6C,SAAA,cAkEA,OA5DA9C,GAAAZ,UAAAgF,SAAApE,EAAAZ,UAAAsD,aAKA/G,EAAAmC,GAAAiC,WAAA,SAAAd,GACA,GACAC,GADAlE,EAAAmE,MAAAC,UAAAC,MAAAC,KAAAC,UAAA,GAGAC,EAAApB,KAAAqB,KAAA,WACA,GAAAC,GAAA/D,EAAAyC,MACAuB,EAAAD,EAAAC,KAAA,iBACAxB,EAAA,gBAAAc,IAAAA,CAEAU,IACAD,EAAAC,KAAA,gBAAAA,EAAA,GAAAK,GAAA5B,KAAAD,IAGA,gBAAAc,KACAC,EAAAS,EAAAV,GAAA/D,MAAAyE,EAAA3E,KAIA,OAAA4E,UAAAV,EAAAM,EAAAN,GAGAvD,EAAAmC,GAAAiC,WAAAzB,UACA2C,eAAA,mDAGAtF,EAAAmC,GAAAiC,WAAAF,YAAAG,EAEArE,EAAAmC,GAAAiC,WAAAD,WAAA,WAEA,MADAnE,GAAAmC,GAAAiC,WAAAlC,EACAO,MA0BAzC,EAAAmC,GAAAiC,aAUA7F,EAAA,2BACA,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,WACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkC,EAAAjC,EAAAG,GAWA,GAAA+B,GAAAlC,EAAAmC,GAAAuG,SAKAC,EAAAxI,EAAAwI,SAAAxI,EAAA0B,WAAAE,SACAC,UAAA,WAEAM,KAAA,SAAAC,EAAAC,GACAC,KAAAC,SAAA1C,EAAAuC,GACAE,KAAAD,QAAA7C,EAAAiC,SAAA5B,EAAAmC,GAAAuG,SAAA/F,SAAAH,GAEAC,KAAAmG,UAAAnG,KAAAC,SAAA6B,KAAA,kBACA9B,KAAAoG,OAAApG,KAAAC,SAAA6B,KAAA,SACA9B,KAAA6B,QAAA7B,KAAAC,SAAA6B,KAAA,QACA9B,KAAA6B,QAAAK,WACAlC,KAAAqG,eAAArG,KAAAC,SAAA6B,KAAA,oBAEA9B,KAAAC,SAAAkC,GAAA,oBAAA,IAAAjF,EAAAkF,MAAApC,KAAAsG,YAAAtG,OACAA,KAAAC,SAAAkC,GAAA,qBAAA,QAAAjF,EAAAkF,MAAApC,KAAAuG,aAAAvG,OACAA,KAAAC,SAAAkC,GAAA,oBAAAjF,EAAAkF,MAAApC,KAAAwG,UAAAxG,OACAA,KAAAoG,OAAAjE,GAAA,oBAAAjF,EAAAkF,MAAApC,KAAAyG,SAAAzG,OAGAA,KAAAsC,qBAGA,IAAAG,GAAAzC,KAAAmG,UAAAzD,SAAA,KACA,KAAAD,EAAA9G,QACAqE,KAAA6B,QAAA6C,SAAA,YAIA1E,KAAAD,QAAA2G,kBACA1G,KAAAD,QAAA4G,OAAA3G,KAAAmG,UAAArE,KAAA,MAAA9B,KAAAoG,OAAAzC,MAAA3D,OAIAG,QAAA,WAaA,MAZAH,MAAAC,SAAAG,SAKAJ,KAAAC,SAAA6B,KAAA,SAAAT,KAAA,WACA9D,EAAAyC,MAAAwC,KAAA,QAAAjF,EAAAyC,MAAA2D,SAMA3D,KAAAC,SAAA,GAAAI,WAGAuC,SAAA,SAAAa,GAEA,mBAAAA,GAAA,IAGAzD,KAAAC,SAAA6B,KAAA,qBAAAiE,YAAA,YAGA/F,KAAA0D,cAAAD,EACAzD,KAAA0D,cAAAgB,SAAA,YAGA1E,KAAAoG,OAAAzC,IAAA3D,KAAA0D,cAAAxE,OAAA0H,UAGA5G,KAAA0D,cAAA,KACA1D,KAAAC,SAAA6B,KAAA,qBAAAiE,YAAA,cAIAc,eAAA,WACA7G,KAAA0D,cAAA,KACA1D,KAAAoG,OAAAzC,IAAA,IACA3D,KAAAmG,UAAArE,KAAA,MAAAiE,YAAA,aAGAS,UAAA,WACAxG,KAAAD,QAAA+G,gBACA9G,KAAA+G,cAIAA,WAAA,WACA,GAAAxC,GAAAvE,KAAAC,SAAA+E,YACAhF,MAAAmG,UAAAnB,WAAAT,IAGAD,aAAA,WACA,GAAAlB,GAAApD,KAAA0D,cACAnC,IAEA,IAAA6B,EAAA,CACA,GAAA8B,GAAAlF,KAAA0D,cAAAxE,OAAA0H,MACArF,GAAArE,EAAAiC,OACAD,KAAAgG,GACAlF,KAAA0D,cAAAnC,YAEAA,IACArC,KAAAc,KAAAoG,OAAAzC,MAAAiD,OACAI,UAAA,EAIA,OAAAzF,IAGA4D,aAAA,SAAAjG,GACA,GAAAuE,GAAAlG,KACAyC,MAAAC,SAAA6B,KAAA,MAAAT,KAAA,WACA,IAAArB,KAAAoF,aAAApF,KAAAqF,WAAA9H,EAAAyC,MAAAd,QAAA,IAAA0H,OAAAtD,iBAAApE,GAAA,IAAA0H,OAAAtD,cAEA,MADAG,GAAAlG,EAAAyC,OACA,IAIAA,KAAA4C,SAAAa,IAGA6B,cAAA,SAAAC,GACA,GAAAC,GAAA,kBAAAD,EAAA,IACAvF,MAAAyF,iBAAAD,IAGAE,cAAA,SAAAC,GAEA,GAAAH,GAAA,SAAAG,EAAA,GACA3F,MAAAyF,iBAAAD,IAGAC,iBAAA,SAAAD,GACA,GAAA/B,GAAAzD,KAAAC,SAAA6B,KAAA0D,EACAxF,MAAA4C,SAAAa,IAGAnB,oBAAA,WACA,GAAAkD,GAAA,+BACApC,EAAApD,KAAAC,SAAA6B,KAAA0D,EAEApC,GAAAzH,OAAA,IAEAqE,KAAAyF,iBAAAD,GACApC,EAAAS,WAAA,YACAT,EAAAU,WAAA,mBAIAgC,OAAA,WACA9F,KAAAC,SAAA8F,YAAA,YACA/F,KAAAoG,OAAAtC,WAAA,YACA9D,KAAA6B,QAAAkE,YAAA,aAGApD,QAAA,WACA3C,KAAAC,SAAAyE,SAAA,YACA1E,KAAAoG,OAAA5D,KAAA,YAAA,GACAxC,KAAA6B,QAAA6C,SAAA,aAGA4B,YAAA,SAAAlI,GACA4B,KAAA0D,cAAAnG,EAAAa,EAAA+F,QAAAD,SAGAlE,KAAAoG,OAAAzC,IAAA3D,KAAA0D,cAAAxE,OAAA0H,QAAA7C,QAAA,UACAkD,WAAA,GAKA,IAAA1F,GAAAvB,KAAAsE,cAGAtE,MAAAC,SAAA8D,QAAA,sBAAAxC,GAEAnD,EAAA4F,iBAGAhE,KAAAC,SAAA6B,KAAA,oBAAAyB,SAGAkD,SAAA,SAAArI,GACA,GAAA8I,GAAA,GAEAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAC,EACApJ,EAAA8E,QAAAmE,GACAjJ,EAAA8E,QAAAqE,GACAnJ,EAAA8E,QAAAkE,GACAhJ,EAAA8E,QAAAoE,CAQA,IALAtH,KAAAD,QAAA0H,wBAAAzH,KAAAqG,eAAAzB,SAAA,UACA5E,KAAA6B,QAAAK,SAAA,UACAlC,KAAAoG,OAAA7C,SAGAnF,EAAA8E,QAAAgE,EAAA,CACA9I,EAAA4F,gBAEA,IAAA0D,GAAA1H,KAAAmG,UAAArE,KAAA,eAAA5C,OAAA0H,MACAc,GAAA/L,OAAA,EACAqE,KAAAmF,aAAAuC,GAEA1H,KAAAmF,aAAAnF,KAAAoG,OAAAzC,OAGA3D,KAAAqG,eAAAN,YAAA,YACA,IAAA3H,EAAA8E,QAAAiE,EACA/I,EAAA4F,iBACAhE,KAAA6G,iBACA7G,KAAAqG,eAAAN,YAAA,YACA,IAAA/F,KAAAD,QAAA0H,wBACArJ,EAAA8E,QAAAqE,GAAAnJ,EAAA8E,QAAAmE,GAAA,CACAjJ,EAAA4F,gBACA,IAAA2D,GAAA3H,KAAAmG,UAAArE,KAAA,cACA6F,GAAAhM,OAAA,IAEAgM,EADAvJ,EAAA8E,QAAAqE,EACAI,EAAAnH,KAAA,iBAEAmH,EAAAC,KAAA,kBAIA,IAAAD,EAAAhM,SAEAgM,EADAvJ,EAAA8E,QAAAqE,EACAvH,KAAAmG,UAAArE,KAAA,yBAEA9B,KAAAmG,UAAArE,KAAA,yBAGA9B,KAAA4C,SAAA+E,GAKA3H,KAAAD,QAAA2G,mBAAAc,GACAxH,KAAAD,QAAA4G,OAAA3G,KAAAmG,UAAArE,KAAA,MAAA9B,KAAAoG,OAAAzC,MAAA3D,MAGAA,KAAA6H,iBAAAzJ,EAAA8E,OAGAqD,aAAA,SAAAnI,EAAA0J,GACA,GAAAnE,GAAApG,EAAAa,EAAA+F,QAAAR,KAGA,IAAAmE,GAAAA,EAAAb,UAEA,WADAjH,MAAAmF,aAAAxB,EAGA3D,MAAAmF,aAAAxB,EAIA,IAAApC,GAAAvB,KAAAsE,cACA,KAAA/C,EAAArC,KAAAvD,SACA4F,GACArC,KAAAyE,IAKA3D,KAAAC,SAAA8D,QAAA,sBAAAxC,KA6FA,OAtFA2E,GAAAlF,UAAAgF,SAAAE,EAAAlF,UAAAsD,aAIA/G,EAAAmC,GAAAuG,SAAA,SAAApF,GACA,GACAC,GADAlE,EAAAmE,MAAAC,UAAAC,MAAAC,KAAAC,UAAA,GAGAC,EAAApB,KAAAqB,KAAA,WACA,GAAAC,GAAA/D,EAAAyC,MACAuB,EAAAD,EAAAC,KAAA,eACAxB,EAAA,gBAAAc,IAAAA,CAEAU,IACAD,EAAAC,KAAA,cAAAA,EAAA,GAAA2E,GAAAlG,KAAAD,IAGA,gBAAAc,KACAC,EAAAS,EAAAV,GAAA/D,MAAAyE,EAAA3E,KAIA,OAAA4E,UAAAV,EAAAM,EAAAN,GAGAvD,EAAAmC,GAAAuG,SAAA/F,UAEA4G,gBAAA,EACAJ,kBAAA,EACAe,uBAAA,EACAd,OAAA,SAAAoB,EAAAC,EAAAC,GACA,GAAAC,GAAA,CACAD,GAAA9B,UAAArE,KAAA,oBAAA1B,SAEA2H,EAAA1G,KAAA,SAAA3F,GACA,GAAAyM,GAAA5K,EAAAyC,MACAd,EAAA3B,EAAAyC,MAAAd,OAAA0H,MAEAuB,GAAApC,cAEA7G,IAAA8I,GACAG,EAAAzD,SAAA,gBACAwD,KACAhJ,EAAAkJ,OAAA,EAAAJ,EAAArM,UAAAqM,GACAG,EAAAzD,SAAA,aACAwD,KAEAC,EAAAzD,SAAA,YAIA,IAAAwD,GACAD,EAAA9B,UAAArB,OAAA,qEAKAvH,EAAAmC,GAAAuG,SAAAxE,YAAAyE,EAEA3I,EAAAmC,GAAAuG,SAAAvE,WAAA,WAEA,MADAnE,GAAAmC,GAAAuG,SAAAxG,EACAO,MAyBAzC,EAAAmC,GAAAuG,WAGAnK,EAAA,gCACA,wBACA,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,wBACA,wBACA,4BACA,2BACA,SAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkC,EAAAjC,EAAAC,GAEA,GAAAC,GAAAR,EAAAQ,GAAAR,EAAAQ,OAUAgC,EAAAlC,EAAAmC,GAAA2I,SAIAC,EAAA7K,EAAA6K,SAAA9K,EAAA6B,OAAAC,SACAC,UAAA,WAEAM,KAAA,SAAAC,EAAAC,GACA,GACAwI,GACAC,EAFAP,EAAAjI,IAIAA,MAAAC,SAAA1C,EAAAuC,GAEAE,KAAAyI,QAAAzI,KAAAC,SAAA6B,KAAA,oBACA9B,KAAA0I,OAAA1I,KAAAC,SAAA6B,KAAA,mBACA9B,KAAA2I,KAAA3I,KAAAC,SAAA6B,KAAA,iBACA9B,KAAA4I,SAAA5I,KAAAC,SAAA6B,KAAA,qBACA9B,KAAA6I,QAAA7I,KAAAC,SAAA6B,KAAA,oBACA9B,KAAA8I,UAAA9I,KAAAC,SAAA6B,KAAA,qCACA9B,KAAA+I,SAAA/I,KAAAC,SAAA6B,KAAA,kBACA9B,KAAAgJ,OAAAhJ,KAAAC,SAAA6B,KAAA,mBACA9B,KAAAiJ,SAAAjJ,KAAAC,SAAA6B,KAAA,kBACA9B,KAAAkJ,eAAAlJ,KAAAC,SAAA6B,KAAA,2BACA9B,KAAAmJ,QAAAnJ,KAAAC,SAAA6B,KAAA,oBAAAA,KAAA,WACA9B,KAAAoJ,iBAAApJ,KAAAC,SAAA6B,KAAA,6BACA9B,KAAAqJ,OAAArJ,KAAAC,SAAA6B,KAAA,mBACA9B,KAAAsJ,UAAAtJ,KAAAC,SAAA6B,KAAA,sBACA9B,KAAAuJ,OAAAvJ,KAAAC,SAAA6B,KAAA,mBAEA9B,KAAAC,SAAAkC,GAAA,iCAAA,2BAAA,SAAA/D,GACAb,EAAAyC,MAAAkC,aAGAlC,KAAAwJ,YAAA,EACAxJ,KAAAwI,YAAA,KACAxI,KAAAyJ,YAAA,EACAzJ,KAAA0J,0BAAA,aACA1J,KAAA2J,sBAAA,KACA3J,KAAA4J,0BAAA,EACA5J,KAAA6J,qBAAA,KACA7J,KAAA8J,4BACA9J,KAAA+J,cAAA,EACA/J,KAAAD,QAAA7C,EAAAiC,SAAA5B,EAAAmC,GAAA2I,SAAAnI,SAAAH,GACAC,KAAAgK,cAAA,EACAhK,KAAAiK,iBACAjK,KAAAkK,OAAA,GAAAC,OAAAC,WAAAC,KAAAC,MAAA,IAAAD,KAAAE,UAAA,GACAvK,KAAAwK,qBAAA,KACAxK,KAAAyK,wBAAA,EACAzK,KAAA0K,eACA1K,KAAA2K,SAAA,KAEA3K,KAAA4I,SAAAjH,aACA3B,KAAA8I,UAAAnH,aACA3B,KAAAkJ,eAAApH,KAAA,aAAAmE,WACAjG,KAAAmJ,QAAAyB,QACAC,iBAAA7K,KAAAD,QAAA8K,iBACAC,YAAA9K,KAAAD,QAAA+K,cAGA9K,KAAA4I,SAAAzG,GAAA,wBAAA,SAAA/D,EAAAmH,GACA0C,EAAAhI,SAAA8D,QAAA,uBAAAwB,GACA0C,EAAA8C,QACAC,eAAA,EACAhB,cAAA,SAGAhK,KAAA+I,SAAA5G,GAAA,oBAAAjF,EAAAkF,MAAApC,KAAAQ,KAAAR,OACAA,KAAA8I,UAAA3G,GAAA,wBAAA,SAAA/D,EAAAmH,GACA0C,EAAAhI,SAAA8D,QAAA,8BAAAwB,GACA0C,EAAA8C,QACAf,cAAA,SAGAhK,KAAAiJ,SAAA9G,GAAA,oBAAAjF,EAAAkF,MAAApC,KAAAW,SAAAX,OACAA,KAAAkJ,eAAApH,KAAA,aAAAK,GAAA,sBAAA,SAAA8I,EAAA1J,GACA0G,EAAAiD,gBAAA3J,EAAArC,KAAAqC,KAEAvB,KAAAmJ,QAAAhH,GAAA,uCAAA,SAAA/D,EAAAmH,GACA0C,EAAAhI,SAAA8D,QAAA,4BAAAwB,GACA0C,EAAA8C,QACAC,eAAA,EACAhB,cAAA,SAGAhK,KAAAmJ,QAAAhH,GAAA,qBAAA,SAAA/D,EAAAmH,GACA0C,EAAAhI,SAAA8D,QAAA,uBAAAwB,GACA0C,EAAA8C,QACAC,eAAA,EACAhB,cAAA,SAIAhK,KAAAoJ,iBAAAjH,GAAA,mBAAA,WACA8F,EAAAiD,gBAAAjD,EAAAmB,iBAAAzF,SAEA3D,KAAAoJ,iBAAAjH,GAAA,QAAA,SAAA/D,GACA,KAAAA,EAAAG,SACA0J,EAAAiD,gBAAAjD,EAAAmB,iBAAAzF,SAGA3D,KAAAuJ,OAAAzH,KAAA,SAAAK,GAAA,qBAAAjF,EAAAkF,MAAApC,KAAAmL,YAAAnL,OAEAzC,EAAAR,QAAAoF,GAAA,sBAAAnC,KAAAkK,MAAA,WACAkB,aAAAnD,EAAAgC,eACAhC,EAAAgC,cAAAoB,WAAA,WACApD,EAAA1F,SACA0F,EAAAhI,SAAA8D,QAAA,wBACA,MAGA/D,KAAA6I,QAAAlJ,SACAK,KAAA6I,QAAAlJ,OAAA,SACAK,KAAAD,QAAAuL,iBACA9C,EAAAxI,KAAAD,QAAAuL,aAEA/C,EAAAvI,KAAAuJ,OAAAzH,KAAA,sBACA0G,EAAAD,EAAA5M,OAAA,EAAA4M,EAAA5E,MAAA,QAGA3D,KAAAuL,eAAA/C,GAEAxI,KAAAwL,cAAA,WACAvD,EAAA1F,SACA0F,EAAAhI,SAAA8D,QAAA,uBACAkE,EAAA8C,QACAU,WAAAjD,OAKAkD,MAAA,SAAAC,GACA,GAAA5L,GAAA4L,KAEA5L,GAAA6L,SAGA5L,KAAA4J,2BAAA7J,EAAAiL,eAEAa,EAAA7L,KAAAyI,SAHAzI,KAAAyI,QAAAqD,OAOA,IAAAX,GAAA3J,SAAAzB,EAAAoL,aAAApL,EAAAoL,YACAY,EAAAxO,EAAAmC,GAAA2I,SAAA2D,UAAAhM,KAAA2K,eACAQ,GAAAY,EAAAE,SACAF,EAAAE,QAAA/K,KAAAlB,MACAD,QAAAA,KAKAmM,gCAAA,WACAlM,KAAAwK,qBAAA,MAGArK,QAAA,WACA,GAAAgM,EAuBA,OArBAnM,MAAAC,SAAA6B,KAAA,SAAAT,KAAA,WACA9D,EAAAyC,MAAAwC,KAAA,QAAAjF,EAAAyC,MAAA2D,SAIA3D,KAAAyI,QAAAqD,QACAK,EAAAnM,KAAAC,SAAA,GAAAI,UAGAL,KAAAC,SAAA6B,KAAA,aAAAmE,SAAA,WACAjG,KAAAC,SAAA6B,KAAA,eAAAH,WAAA,WACA3B,KAAAC,SAAA6B,KAAA,WAAA8I,OAAA,WACA5K,KAAA4J,0BACArM,EAAAyC,KAAA2J,uBAAAyC,eAAA,WAGApM,KAAAC,SAAAG,SAGA7C,EAAAR,QAAAyG,IAAA,sBAAAxD,KAAAkK,OAEAiC,GAGAxJ,QAAA,WACA,GAAAoJ,GAAAxO,EAAAmC,GAAA2I,SAAA2D,UAAAhM,KAAA2K,aAEA3K,MAAAmJ,QAAAyB,OAAA,WACA5K,KAAA4I,SAAAjH,WAAA,WACA3B,KAAAuJ,OAAAzH,KAAA,gBAAA4C,SAAA,YAAAlC,KAAA,WAAA,YACAxC,KAAA8I,UAAAnH,WAAA,WACA3B,KAAAkJ,eAAApH,KAAA,aAAAmE,SAAA,WACAjG,KAAAoJ,iBAAA5G,KAAA,WAAA,YACAxC,KAAAiJ,SAAAzG,KAAA,WAAA,YACAxC,KAAA+I,SAAAvG,KAAA,WAAA,YAEAuJ,EAAAM,SACAN,EAAAM,QAAAnL,KAAAlB,MACAsM,QAAA,IAIAtM,KAAAyJ,YAAA,EACAzJ,KAAAC,SAAAyE,SAAA,YACA1E,KAAAC,SAAA8D,QAAA,yBAGA+B,OAAA,WACA,GAAAiG,GAAAxO,EAAAmC,GAAA2I,SAAA2D,UAAAhM,KAAA2K,aAEA3K,MAAAmJ,QAAAyB,OAAA,UACA5K,KAAA4I,SAAAjH,WAAA,UACA3B,KAAAuJ,OAAAzH,KAAA,gBAAAiE,YAAA,YAAAjC,WAAA,YACA9D,KAAA8I,UAAAnH,WAAA,UACA3B,KAAAkJ,eAAApH,KAAA,aAAAmE,SAAA,UACAjG,KAAAoJ,iBAAAtF,WAAA,YAEA9D,KAAAiJ,SAAArE,SAAA,aACA5E,KAAAiJ,SAAAnF,WAAA,YAEA9D,KAAA+I,SAAAnE,SAAA,aACA5E,KAAA+I,SAAAjF,WAAA,YAKA9D,KAAAiJ,SAAArE,SAAA,aAAA5E,KAAA+I,SAAAnE,SAAA,aACA5E,KAAAkJ,eAAAjD,SAAA,WAIA,IAAAsG,SAAAvM,KAAA0I,OAAAzJ,OAAA,IACAe,KAAA8I,UAAAnH,WAAA,UAEA3B,KAAA8I,UAAAnH,WAAA,WAGAoK,EAAAM,SACAN,EAAAM,QAAAnL,KAAAlB,MACAsM,QAAA,IAIAtM,KAAAyJ,YAAA,EACAzJ,KAAAC,SAAA8F,YAAA,YACA/F,KAAAC,SAAA8D,QAAA,wBAGAyI,eAAA,SAAAb,GACA,GAAA5L,GAAA4L,KACAnK,UAAAzB,EAAAiK,gBACA,OAAAjK,EAAAiK,cACAhK,KAAAwJ,YAAA,EAEAxJ,KAAAwJ,aAAAzJ,EAAAiK,cAIA,IAAAyC,KACA1M,GAAA0M,oBACAA,EAAA1M,EAAA0M,kBAEA1M,EAAA2M,4BACA1M,KAAAwK,qBACAxK,KAAAwK,qBAAAtN,EAAAiC,MAAAa,KAAAwK,qBAAAiC,GAEAzM,KAAAwK,qBAAAiC,IAKAzM,KAAAwK,uBACAiC,EAAAvP,EAAAiC,MAAAa,KAAAwK,qBAAAiC,GAGA,IAAAE,IACAC,KAAA5M,KAAAwI,YACAqE,UAAA7M,KAAAwJ,YACA7C,QACAzH,KAAA,MACAqG,MAAA,OAGAvF,MAAA4I,SAAAjN,OAAA,IACAgR,EAAAhG,OAAA3G,KAAA4I,SAAAjH,WAAA,iBAGA3B,KAAA4J,2BACA+C,EAAAG,SAAA,GAEA9M,KAAA8I,UAAAnN,OAAA,IACAgR,EAAAG,SAAAP,SAAAvM,KAAA8I,UAAAnH,WAAA,gBAAA4D,MAAA,KAIA,IAAAwH,GAAA/M,KAAAmJ,SAAAnJ,KAAAmJ,QAAArH,KAAA,UAAA9B,KAAAmJ,QAAArH,KAAA,SAAA6B,KACA,MAAAoJ,IACAJ,EAAA/B,OAAAmC,EAGA,IAAApC,GAAApN,EAAAmC,GAAA2I,SAAA2D,UAAAhM,KAAA2K,cACAqC,EAAArC,EAAAsC,WAOA,OANAD,KACAL,EAAAK,EAAA9L,KAAAlB,KAAA2M,IAGAA,EAAAzP,EAAAiC,MAAAwN,EAAAF,IAKAS,kBAAA,SAAApH,EAAA6F,GACA,GAAAwB,GAAAnN,KAAAC,SAAA6B,KAAA,oBACAsL,EAAApN,KAAAC,SAAA6B,KAAA,sBACA/B,EAAA4L,KAEA,IAAA7F,EACA9F,KAAA4J,0BAAA,EACA5J,KAAA6J,qBAAA9J,EAAAsN,UACAtN,GAAAuN,iBACAvN,GAAAsN,IACArN,KAAA8J,yBAAA/J,EACAqN,EAAAnI,KACAsI,OAAAH,EAAAG,SAAAJ,EAAAK,gBAEAL,EAAAM,WACA,CACA,GAAAC,GAAA1N,KAAA2J,sBACApI,EAAAmM,EAAAnM,aACAA,GAAA6K,eACAsB,EAAAlK,IAAA,UACAkK,EAAA3H,YAAA,kBAEA/F,KAAA2J,sBAAA,KACA3J,KAAA4J,0BAAA,EACA5J,KAAA6J,qBAAA,KACA7J,KAAA8J,4BACAsD,EAAAnI,KACAsI,OAAAH,EAAAG,SAAAJ,EAAAK,gBAEAL,EAAAQ,SAIAC,qBAAA,SAAArM,GACA,GAAA8L,GAAArN,KAAA6J,wBAAA,EAAA7J,KAAA6J,qBAAArI,OACAqM,EAAAtM,EAAAsM,KACAC,EAAAvM,EAAAuM,KAEA9N,MAAAwJ,YAAAhI,SAAAqM,EAAAA,EAAAE,KAEAxM,EAAA8L,OAAA,GAAArN,KAAAwJ,YAAA,GAAAsE,IACA9N,KAAA2J,sBAAAyC,eAAA,MAAAiB,IAIAW,sBAAA,WACA,GAAAN,GAAA1N,KAAAyI,QAAA3G,KAAA,+BAGA,IADA4L,EAAAA,EAAA/R,OAAA,EAAAqE,KAAAyI,QAAAiF,EACAA,EAAAnM,KAAA,qBACAmM,EAAAtB,eAAA,cACA,CACA,GAAAnE,GAAAjI,KACA2L,EAAAzO,EAAAiC,SAAAa,KAAA8J,yBACA6B,GAAA2B,WAAA,SAAAW,EAAAC,GACAjG,EAAAyB,0BAAAwE,EACAjG,EAAA8C,QACAf,cAAA,KAGA0D,EAAAtB,eAAAT,GACA3L,KAAA2J,sBAAA+D,IAIAlC,cAAA,SAAA0C,GACA,GAAAlC,KAEA,KAAA,GAAAjJ,KAAAxF,GAAAmC,GAAA2I,SAAA2D,eACAvP,eAAAyE,KAAA3D,EAAAmC,GAAA2I,SAAA2D,UAAAjJ,IACAiJ,EAAApQ,KAAA2B,EAAAmC,GAAA2I,SAAA2D,UAAAjJ,GAIAiJ,GAAArQ,OAAA,EACAwS,EAAAjN,KAAAlB,KAAA,EAAAgM,EAAAkC,GAEAA,KAIAE,YAAA,SAAA7M,GACAvB,KAAA0I,OAAAzJ,KAAAuC,SAAAD,EAAA8M,MAAA9M,EAAA8M,MAAA,KACArO,KAAA2I,KAAA1J,KAAAuC,SAAAD,EAAA8L,IAAA9L,EAAA8L,IAAA,KACArN,KAAAqJ,OAAApK,KAAAuC,SAAAD,EAAA+M,MAAA/M,EAAA+M,MAAA,MAGA9N,KAAA,WACAR,KAAA+I,SAAAvG,KAAA,WAAA,YACAxC,KAAAiJ,SAAAzG,KAAA,WAAA,YACAxC,KAAAgK,cAAA,EACAhK,KAAAC,SAAA8D,QAAA,2BACA/D,KAAA+K,QACAf,cAAAhK,KAAAgK,iBAIAkB,gBAAA,SAAAvH,EAAA4K,GAGA,GAAAC,EACA,IAAA7K,IAAA3D,KAAA+J,cAAA,CACA/J,KAAA+J,cAAApG,CACA,IAAA4B,GAAAgH,SAAA5I,EAAA,IAAA,CACA6K,GAAAjJ,EAAAvF,KAAAwJ,YACAxJ,KAAAC,SAAA8D,QAAA,2BAAAwB,EAAAgJ,IACAvO,KAAA+K,QACAf,cAAAwE,MAKAC,WAAA,SAAAlN,GACAvB,KAAAkJ,eAAAnD,YAAA,UACA/F,KAAAoJ,iBAAArD,YAAA,SAEA,IAAA2I,GAAAnN,EAAAuM,KACA9N,MAAAwJ,YAAAhI,SAAAD,EAAAsM,KAAAtM,EAAAsM,KAAAE,GAEA,IAAAY,GAAA,IAAAD,EAAA,EAAA1O,KAAAwJ,YAAA,CAEA,IAAAkF,GAAA1O,KAAA0K,YAAAkE,cAAA,CACA5O,KAAAkJ,eAAAxE,SAAA,SACA,IAAAmK,GAAA7O,KAAAkJ,eAAApH,KAAA,iBACA+M,GAAA/C,OACA,KAAA,GAAApQ,GAAA,EAAAA,EAAAgT,EAAAhT,IAAA,CACA,GAAAoT,GAAApT,EAAA,CACAmT,GAAA/J,OAAA,mBAAAgK,EAAA,iBAAAA,EAAA,aAGA9O,KAAAkJ,eAAApH,KAAA,sBAAA6B,IAAAgL,OAEA3O,MAAAoJ,iBAAA1E,SAAA,UACA1E,KAAAoJ,iBAAAzF,IAAAgL,EAGA3O,MAAA+J,cAAA/J,KAAAwJ,YAAA,EAAA,GAEAxJ,KAAAgJ,OAAA/J,KAAA,GAAAyP,GAGA1O,KAAAwJ,YAAA,EAAAkF,GACA1O,KAAA+I,SAAAjF,WAAA,YACA9D,KAAA+I,SAAAhD,YAAA,cAEA/F,KAAA+I,SAAAvG,KAAA,WAAA,YACAxC,KAAA+I,SAAArE,SAAA,aAIA1E,KAAAwJ,YAAA,GAAA,GACAxJ,KAAAiJ,SAAAnF,WAAA,YACA9D,KAAAiJ,SAAAlD,YAAA,cAEA/F,KAAAiJ,SAAAzG,KAAA,WAAA,YACAxC,KAAAiJ,SAAAvE,SAAA,aAIA,IAAA1E,KAAAgK,gBACAhK,KAAAgK,cAAA,EACAhK,KAAA+I,SAAAnF,GAAA,aAEA5D,KAAAiJ,SAAA1F,QAEAvD,KAAA+I,SAAAxF,QAEAvD,KAAAiJ,SAAArF,GAAA,aAEA5D,KAAA+I,SAAAxF,QAEAvD,KAAAiJ,SAAA1F,UAKA5C,SAAA,WACAX,KAAA+I,SAAAvG,KAAA,WAAA,YACAxC,KAAAiJ,SAAAzG,KAAA,WAAA,YACAxC,KAAAgK,iBACAhK,KAAAC,SAAA8D,QAAA,+BACA/D,KAAA+K,QACAf,cAAAhK,KAAAgK,iBAKAe,OAAA,SAAAY,GACA3L,KAAA2C,SAEA,IAAAwI,IAAA,EACAY,EAAAxO,EAAAmC,GAAA2I,SAAA2D,UAAAhM,KAAA2K,cACA5K,EAAA4L,KAEA,IAAA5L,EAAA0L,YAAAzL,KAAAwI,cAAAzI,EAAA0L,WAAA,CACA,GAAAsD,GAAA/O,KAAAwI,WACAxI,MAAAwI,YAAAzI,EAAA0L,WACAzL,KAAA2K,SAAA3K,KAAAwI,YAAAjN,MAAA,KAAA,GACAyE,KAAAuL,eAAAvL,KAAAwI,aACAxI,KAAAC,SAAAuC,KAAA,mBAAAxC,KAAAwI,aACAxI,KAAAC,SAAAuC,KAAA,gBAAAxC,KAAA2K,UACAQ,GAAA,EACApL,EAAAoL,YAAAA,EAEAnL,KAAAC,SAAA8D,QAAA,0BAAA/D,KAAAwI,aAEAxI,KAAA4J,0BACA5J,KAAAkN,mBAAA,GAGAnB,EAAAxO,EAAAmC,GAAA2I,SAAA2D,UAAAhM,KAAA2K,cACAoB,EAAArE,UACAqE,EAAArE,SAAAxG,KAAAlB,MACA+O,SAAAA,IAKA/O,KAAAgP,sBAEAjP,EAAA6L,SAAApK,SAAAzB,EAAA6L,SAAA7L,EAAA6L,UAAAT,EACAnL,KAAA0L,MAAA3L,KAEAC,KAAA4J,0BAAA5J,KAAA4J,0BAAAuB,IACAnL,KAAA6I,QAAA8E,OAAAhO,OAAA,OAGA,IAAAsN,GAAAjN,KAAAwM,eAAAzM,GAEAkP,EAAAjP,KAAA0K,YAAA4C,WACA4B,EAAAlP,IACAiP,GACAhC,EAGA,SAAAkC,GACAC,EAAAlO,KACAgO,GAEA3N,KAAA4N,EACAlC,YAAAA,EACAlN,QAAAA,EACAoL,YAAAA,EACAY,YAAAA,OAOAxJ,OAAA,WAaA,IAZA,GAEAgL,GACA8B,EAKAC,EARAC,EAAAvP,KAAA0K,YAAA6E,kBAAAvP,KAAAC,SAAAuC,KAAA,qBAAAxC,KAAA0K,YAAA6E,aACAxD,KAGAyD,KACAC,KAEAC,EAAA1P,KAAAC,SAAA0P,aAAA,YAEAC,EAAA,EAGAA,EAAAF,EAAA/T,QAAAqE,KAAAC,SAAA2D,GAAA,YACA0L,EAAAI,EAAAE,GAEArS,EAAA+R,GAAA1L,GAAA,aACA6L,EAAA7T,KAAA0T,EAAAO,MAAA,SACAP,EAAAO,MAAA,QAAA,QACAL,EAAA5T,KAAA0T,IAEAM,GAOA,IAJA5P,KAAA2K,WACAoB,EAAAxO,EAAAmC,GAAA2I,SAAA2D,UAAAhM,KAAA2K,eAGAnJ,SAAA+N,GAAAA,KAAA,GAAA,UAAAA,EAAA,CACAvP,KAAAyI,QAAA/D,SAAA,aACA2K,GACAS,OAAA9P,KAAAsJ,UAAArE,IAAA,iBACA8K,IAAA/P,KAAAsJ,UAAArE,IAAA,cAGA,IAAA+K,GAAA,SAAAT,GAAAA,KAAA,EAAAvP,KAAAC,SAAAsN,SAAAhB,SAAAgD,EAAA,IACAU,EAAAjQ,KAAAC,SAAA6B,KAAA,oBAAA0L,cACA0C,EAAAlQ,KAAAC,SAAA6B,KAAA,oBAAA0L,cACA2C,EAAA,SAAAd,EAAAS,OAAA,EAAAvD,SAAA8C,EAAAS,OAAA,IACAM,EAAA,SAAAf,EAAAU,IAAA,EAAAxD,SAAA8C,EAAAU,IAAA,GAEAxC,GAAAyC,EAAAC,EAAAC,EAAAC,EAAAC,EACApQ,KAAAsJ,UAAAkE,YAAAD,OAEAvN,MAAAyI,QAAA1C,YAAA,YAGAgG,GAAAxJ,QACAwJ,EAAAxJ,OAAArB,KAAAlB,MACAuN,OAAAvN,KAAAC,SAAAuN,cACAjJ,MAAAvE,KAAAC,SAAA+E,eAIAwK,EAAA3S,QAAA,SAAAiD,EAAApE,GACAoE,EAAA+P,MAAA,QAAAJ,EAAA/T,MAKA2U,YAAA,SAAAtE,EAAAxK,EAAA2M,GACA,GAAAnC,EAAAhB,OA4DAgB,EAAAhB,OAAA7J,KAAAlB,MACAsQ,UAAAtQ,KAAAyI,QACAlH,KAAAA,GACA2M,OA/DA,CACA,GAAAnC,EAAAwE,OAAA,CACA,GAAAC,GAAAzE,EAAAwE,OAAArP,KAAAlB,MACAsQ,UAAAtQ,KAAAyI,QACAlH,KAAAA,GAEAkP,GAAAzQ,KAAAyI,QAAA+H,GAGA,GAAAE,GAAA1Q,KAAAyI,QAAA3G,KAAA,gCACA6O,EAAAD,EAAA/U,OAAA,EAAA+U,EAAA1Q,KAAAyI,OAKA,IAAAsD,EAAA6E,WAAA,CACA,GAAAC,GACAC,EAAA/E,EAAAgF,QAAA,aACAC,EAAAF,EAAAvV,MAAA,KACA0V,EAAAD,EAAA,EAEA,IAAA,SAAAC,GAAA,SAAAA,EAAA,CACAJ,EAAA,SAAAI,EAAAjR,KAAAuB,CAIA,KAAA,GADA2P,GAAAF,EAAA/P,MAAA,GACAkQ,EAAA,EAAAA,EAAAD,EAAAvV,OAAAwV,IAAA,CACA,GAAA3P,SAAAqP,EAAAK,EAAAC,IAEA,CACAN,KACAO,EAAA,sEACA,OAJAP,EAAAA,EAAAK,EAAAC,IAQA,IAAA,GAAAE,GAAA,EAAAA,EAAAR,EAAAlV,OAAA0V,IAAA,CACA,GAAAC,GAAAvF,EAAA6E,WAAA1P,KAAAlB,MACAsQ,UAAAK,EACApP,KAAAA,EACAoE,MAAA0L,EACAR,OAAAA,GAEAJ,GAAAE,EAAAW,QAGAF,GAAA,mFAIA,GAAArF,EAAAwF,MAAA,CACA,GAAAC,GAAAzF,EAAAwF,MAAArQ,KAAAlB,MACAsQ,UAAAtQ,KAAAyI,QACAlH,KAAAA,GAEAkP,GAAAzQ,KAAAyI,QAAA+I,GAGAtD,EAAA3M,KASAgK,eAAA,SAAAkG,GACA,GAAA9F,MACA+F,EAAAD,EAAAlW,MAAA,KAAA,EAGAoQ,GADA3L,KAAAD,QAAA4R,MACA3R,KAAAD,QAAA4R,MAAAD,IAAA1R,KAAAD,QAAA4R,MAAAF,UAKAzR,KAAA0K,YAAAxN,EAAAiC,SAAAa,KAAAD,QAAA4L,IAGAR,YAAA,SAAA/M,GACA,GAAAuJ,GAAApK,EAAAa,EAAA+F,QACAR,EAAAgE,EAAAhE,KAEA3D,MAAAyK,yBACAzK,KAAAyJ,YAAA9B,EAAAiK,QAAA,eAAAhN,SAAA,YACA5E,KAAAgP,sBAEAhP,KAAA+K,QACAU,WAAA9H,EACAqG,cAAA,SAMAgF,oBAAA,WACA,GAAA6C,GAAA7R,KAAAuJ,OAAAzH,KAAA,gBAAA9B,KAAAwI,YAAA,KAEAxI,MAAAyK,wBAAA,EACAzK,KAAAuJ,OAAAzH,KAAA,SAAAqP,KAAA,WAAA,GACAnR,KAAAuJ,OAAAzH,KAAA,gBAAAiE,YAAA,UAEA8L,EAAAlW,OAAA,IACAkW,EAAAV,KAAA,WAAA,GACAU,EAAAD,QAAA,eAAAlN,SAAA,WAEA1E,KAAAyK,wBAAA,KAKA2G,EAAA,SAAAU,GACA/U,OAAAgV,SAAAhV,OAAAgV,QAAAC,MACAjV,OAAAgV,QAAAC,KAAAF,IAIAjG,EAAA,QAAAA,GAAA6B,GACA,GAAAuE,KACAvE,GAAAhL,WAAArB,KAAA,WACA,GAAA+B,GAAA7F,EAAAyC,MACAkS,EAAA9O,EAAAZ,KAAA,gBACA,UAAA0P,GACA9O,EAAA+O,SACAF,EAAArW,KAAAwH,IACA,YAAA8O,IACArG,EAAAzI,GACAA,EAAA+O,SACAF,EAAArW,KAAAwH,MAGAsK,EAAA5B,QACA4B,EAAA5I,OAAAmN,IAGAxB,EAAA,SAAA2B,EAAAC,GACA,GAAAC,EACA,IAAAD,IACAC,EAAAD,EAAA,OAAAA,EAAAC,OAAA,SACA,SAAAA,GAAA9Q,SAAA6Q,EAAAjP,MAAA,CACA,GAAAuN,GAAAnP,SAAA6Q,EAAA/B,UAAA/S,EAAA8U,EAAA/B,WAAA8B,CACAzB,GAAA2B,GAAAD,EAAAjP,QAKAmP,EAAA,SAAAC,EAAAxG,EAAAkC,GACA,GAAAuE,GAAAD,EAAA,CACAC,GAAAzG,EAAArQ,OACAwS,EAAAjN,KAAAlB,KAAAyS,EAAAzG,EAAAkC,GAEAA,KAIAC,EAAA,SAAAuE,EAAA1G,EAAAkC,GACAlC,EAAA0G,GAAAC,WACA3G,EAAA0G,GAAAC,WAAAzR,KAAAlB,QAAA,WACAuS,EAAArR,KAAAlB,KAAA0S,EAAA1G,EAAAkC,KAGAqE,EAAArR,KAAAlB,KAAA0S,EAAA1G,EAAAkC,IAKA0E,EAAA,SAAAC,GACA,GAAAtR,GAAAsR,EAAAtR,QAEAvB,MAAA4J,4BACAiJ,EAAA1H,aAAA0H,EAAA9S,QAAAiL,gBACAhL,KAAAgO,wBAGAhO,KAAA4N,qBAAArM,EAAAsR,EAAA9S,UAGAC,KAAA6I,QAAA4E,OAAA9N,OAAA,SACAK,KAAA8F,SAEA9F,KAAAmJ,QAAApF,QAAA,wBACAxC,KAAAA,EACAxB,QAAA8S,EAAA5F,YACA6F,cAAAD,EAAA9S,UAEAC,KAAAC,SAAA8D,QAAA,wBACAxC,KAAAA,EACAxB,QAAA8S,EAAA5F,YACA6F,cAAAD,EAAA9S,UAIAC,KAAAC,SAAA8D,QAAA,qBAAA8O,EAAA5F,cAIAmC,EAAA,SAAAyD,GACA,GAAAtR,GAAAsR,EAAAtR,QAEAvB,MAAA4J,yBAEA5J,KAAA0J,+BAEA1J,KAAAoO,YAAA7M,GACAvB,KAAAyO,WAAAlN,GAGA,IAAA0G,GAAAjI,IACAA,MAAAqQ,YACAwC,EAAA9G,YACAxK,EACA,SAAAwR,GACAF,EAAAtR,KAAAwR,EACAH,EAAA1R,KAAA+G,EAAA4K,KAuDA,OA/CAvK,GAAAtH,UAAAgS,YAAA1K,EAAAtH,UAAAqP,YAIA9S,EAAAmC,GAAA2I,SAAA,SAAAxH,GACA,GACAC,GADAlE,EAAAmE,MAAAC,UAAAC,MAAAC,KAAAC,UAAA,GAGAC,EAAApB,KAAAqB,KAAA,WACA,GAAAC,GAAA/D,EAAAyC,MACAuB,EAAAD,EAAAC,KAAA,eACAxB,EAAA,gBAAAc,IAAAA,CAEAU,IACAD,EAAAC,KAAA,cAAAA,EAAA,GAAA+G,GAAAtI,KAAAD,IAGA,gBAAAc,KACAC,EAAAS,EAAAV,GAAA/D,MAAAyE,EAAA3E,KAIA,OAAA4E,UAAAV,EAAAM,EAAAN,GAGAvD,EAAAmC,GAAA2I,SAAAnI,UACAoN,WAAA,SAAAvN,EAAAmO,GACAA,GAAAG,MAAA,EAAAhB,IAAA,EAAA5K,SAAAoL,KAAA,EAAAC,MAAA,EAAAQ,MAAA,KAEAhD,eACAsD,cAAA,GACAW,gBACAoC,MAAA,KACA9G,kBAAA,EACAC,aAAA,GAGAvN,EAAAmC,GAAA2I,SAAA2D,aAEAzO,EAAAmC,GAAA2I,SAAA5G,YAAA6G,EAEA/K,EAAAmC,GAAA2I,SAAA3G,WAAA,WAEA,MADAnE,GAAAmC,GAAA2I,SAAA5I,EACAO,MAIAzC,EAAAmC,GAAA2I,WAIAvM,EAAA,qCACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,cACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAUAA,EAAAmC,GAAA2I,WAEA9K,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAiS,wBAAA,WACAjT,KAAAyI,QAAA3G,KAAA,wBAAA1B,SACAJ,KAAAyI,QAAA3G,KAAA,0CAAAiE,YAAA,aAGAxI,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAkS,qBAAA,SAAAvN,EAAAwN,GACA,GAAAC,GAAApT,KAAAyI,QAAA3G,KAAA,yCACA9B,KAAA0K,YAAA2I,4BAAAF,KACAC,EAAAtR,KAAA,aAAAiE,YAAA,UACAqN,EAAAtR,KAAA,MAAAT,KAAA,WACA,GAAAiS,GAAA/V,EAAAyC,MAAA8B,KAAA,iBAAA6D,EAAA,GAAA,KAAAgB,OAAA,WAAA,OAAApJ,EAAAyC,MAAAkE,SAAAU,SAAA,UACA0O,GAAA5O,SAAA,cAKAnH,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAuS,sBAAA,WACA,GAAA7L,KAQA,OAPA1H,MAAAyI,QAAA3G,KAAA,mEAAAT,KAAA,WACA,GAAAoC,GAAAlG,EAAAyC,KACA0H,GAAA9L,MACA2F,KAAAkC,EAAAlC,KAAA,aACAzB,QAAA2D,MAGAiE,GAGAnK,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAgF,SAAAzI,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAuS,sBAEAhW,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAwS,sBAAA,WACA,GAAAC,GAAAzT,KAAAC,SAAA6B,KAAA,0BACA4R,EAAAD,EAAAE,SAAAC,KACAC,EAAAJ,EAAAI,YACAA,GAAA,EACAJ,EAAA3R,KAAA,0BAAAT,KAAA,WACA,GAAAyS,GAAAvW,EAAAyC,MACA4T,EAAAE,EAAAlC,QAAA,YAAA+B,SAAAC,KAAAF,EAAA,IACAI,GAAApP,SAAA,WAAAO,IAAA,OAAA2O,KAGAH,EAAA3R,KAAA,0BAAAT,KAAA,WACA9D,EAAAyC,MAAA+F,YAAA,WAAAd,IAAA,OAAA,OAKA1H,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAA+S,sBAAA,SAAAC,EAAAb,GACA,GAEA5R,GACA7F,EACA+H,EACA9H,EALAsY,EAAAjU,KAAA0K,YAAAwJ,gBACAjM,EAAAjI,KAMAyC,EAAAuR,CACAzW,GAAA4W,QAAA1R,KACAA,GAAAA,GAIA,IAAA2R,GAAA,SAAAC,GACA5Q,EAAAlG,EAAAyC,MAEAuB,EAAAkC,EAAAlC,KAAA,iBACAA,EAAAkB,EAAA/G,GAAA4Y,YAAA7R,EAAA/G,GAAA6J,OACAgP,EAAA9Q,EAAAhB,EAAA/G,GAAAgM,SAAA2M,IAIAE,EAAA,SAAAC,EAAAC,EAAA9O,GACA,GAAA+O,GAEAC,EAAAnT,SAAAiT,GAAAA,CACAE,IACAxB,GAAA,UAAAc,GACAhM,EAAAgL,0BAGAuB,EAAA5P,SAAA,cACA4P,EAAA9P,SAAA,aAEAuD,EAAAyC,YAAAkK,oBAAA,UAAA3M,EAAAyC,YAAAwJ,mBACAQ,EAAAzM,EAAAhI,SAAA6B,KAAA,wCAAA6D,EAAA,GAAA,KAEA+O,EAAAhQ,SAAA,YACAgQ,EAAA5S,KAAA,6BAAA4C,SAAA,YAGAuD,EAAAyC,YAAAmK,cACA5M,EAAAhI,SAAA6B,KAAA,yCAAA6D,EAAA,GAAA,KAAAjB,SAAA,YAGA8P,EAAA1S,KAAA,YAAAgT,QAAA,0FAGA7M,EAAAyC,YAAAkK,qBACAF,EAAAzM,EAAAhI,SAAA6B,KAAA,wCAAA6D,EAAA,GAAA,KAEA+O,EAAAhQ,SAAA,YACAgQ,EAAA5S,KAAA,6BAAAiE,YAAA,YAGAkC,EAAAyC,YAAAmK,cACA5M,EAAAhI,SAAA6B,KAAA,yCAAA6D,EAAA,GAAA,KAAAI,YAAA,YAGAyO,EAAA1S,KAAA,wBAAA1B,SACAoU,EAAAzO,YAAA,aAYA,KAPApK,EADAwX,KAAA,GAAA,UAAAc,EACAxR,EAAA9G,OACAsY,GACAxR,EAAA9G,OAAA,EAAA,EAEA,EAGAD,EAAA,EAAAA,EAAAC,EAAAD,IACA8F,SAAAiB,EAAA/G,GAAAiK,OACAlC,EAAAzD,KAAAyI,QAAA3G,KAAA,qEAAAW,EAAA/G,GAAAiK,MAAA,GAAA,KACAlC,EAAA9H,OAAA,GACA4Y,EAAA9Q,EAAAhB,EAAA/G,GAAAgM,SAAAjF,EAAA/G,GAAAiK,QAEAnE,SAAAiB,EAAA/G,GAAA4Y,UAAA9S,SAAAiB,EAAA/G,GAAA6J,OACAvF,KAAAyI,QAAA3G,KAAA,0DAAAT,KAAA+S,IAKA7W,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAA+T,kBAAA,WACA,GAAAC,GAAAhV,KAAAC,SAAA6B,KAAA,uBACAkT,GAAAlT,KAAA,YAAAT,KAAA,WACA,GAAA4T,GAAA1X,EAAAyC,MACA8T,EAAAmB,EAAAnT,KAAA,yBACAgS,GAAA7O,KAAAsI,OAAA0H,EAAAzH,gBACAsG,EAAA9O,WAAA8O,EAAAvS,KAAA,iBAAA0T,EAAAjQ,iBAIAzH,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAkU,sBAAA,WACA,GAAAC,GAAAnV,KAAAyI,QAAA3G,KAAA,iBACA2R,EAAAzT,KAAAC,SAAA6B,KAAA,oBACAkT,EAAAhV,KAAAC,SAAA6B,KAAA,iDACAsT,EAAApV,KAAAC,SAAA6B,KAAA,kBACAuT,EAAArV,KAAA0K,YAAAkK,mBACA3M,EAAAjI,IAOA,IALA,UAAAA,KAAA0K,YAAAwJ,kBACAmB,GAAA,EACA5B,EAAA/O,SAAA,yBAGAyQ,EAAAxZ,OAAA,EAAA,CAGA,GAAA2Z,GAAA/X,EAAA,6CAAAgY,aAAAP,GACAQ,EAAAR,EAAAjQ,QAAAL,SAAA,eACA8Q,GAAA1T,KAAA,cAAAuT,EAAA,MAAAjV;AACAoV,EAAA1T,KAAA,uCAAAuT,EAAA,MAAAjV,QAGA,IAAAqV,GAAAD,EAAAzQ,QAAAgB,YAAA,eACA0P,GAAA3T,KAAA,SAAA1B,QACA,IAAAsV,GAAAnY,EAAA,4CAAAuH,OAAA2Q,GAIAE,EAAAD,EAAA5T,KAAA,2CACA6T,GAAAnT,KAAA,KAAAmT,EAAAnT,KAAA,MAAA,WAEA8S,EAAAxQ,OAAA0Q,GACAJ,EAAAtQ,OAAA4Q,GACA1V,KAAAyI,QAAA/D,SAAA,kBAGA1E,KAAA4V,yBAEArY,EAAA,gDAAA4E,GAAA,QAAA,WACA,GAAAwD,GAAApI,EAAAyC,MAAAkE,OAAA,MAAAyB,OACAA,IAAA,EACAsC,EAAAhI,SAAA6B,KAAA,qDAAA6D,EAAA,4BAAA,GAAAkQ,WAIAtY,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAA8U,qBAAA,WACA,GAAArC,GAAAzT,KAAAC,SAAA6B,KAAA,oBACAiU,EAAAtC,EAAAsC,YACAlC,EAAAJ,EAAAI,aACAmC,EAAAhW,KAAA0K,YAAAkK,oBAAA,UAAA5U,KAAA0K,YAAAwJ,gBACA+B,EAAAjW,KAAA0K,YAAAmK,aAEAqB,EAAAlW,KAAAC,SAAA6B,KAAA,oBAAAkD,aACAmR,EAAAnW,KAAAC,SAAA6B,KAAA,iDAAAkD,aAEAoR,EAAApW,KAAAC,SAAA6B,KAAA,kBAAA9B,KAAAC,SAAA6B,KAAA,kBAAAkD,aAAA,EAEAqR,EAAAF,GAAAD,EAAAE,IAAAvC,CAGAkC,GAAA,EACAtC,EAAA3R,KAAA,0BAAAmD,IAAA,MAAA8Q,GAEAtC,EAAA3R,KAAA,0BAAAmD,IAAA,MAAA,KAGA4O,EAAA,GACAmC,IACAvC,EAAA3R,KAAA,yBAAAmD,IAAA,OAAA4O,GACAJ,EAAA3R,KAAA,0BAAAmD,IAAA,OAAA4O,IAEAoC,GAAAI,IACA5C,EAAA3R,KAAA,0BAAAmD,IAAA,SAAA4O,GACAJ,EAAA3R,KAAA,2BAAAmD,IAAA,SAAA4O,MAGAmC,IACAvC,EAAA3R,KAAA,yBAAAmD,IAAA,OAAA,KACAwO,EAAA3R,KAAA,0BAAAmD,IAAA,OAAA,MAEAgR,IACAxC,EAAA3R,KAAA,0BAAAmD,IAAA,QAAA,KACAwO,EAAA3R,KAAA,2BAAAmD,IAAA,QAAA,QAKA1H,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAsV,uBAAA,WACA,GAEA5a,GACAC,EAHA4a,EAAA,GACAtO,EAAAjI,KAGAgV,EAAAhV,KAAAC,SAAA6B,KAAA,iDACA0U,EAAAxW,KAAAyI,QAAA3G,KAAA,iBAEA,KAAApG,EAAA,EAAAC,EAAAqE,KAAA0K,YAAAmK,aAAApS,MAAA9G,OAAAD,EAAAC,EAAAD,IAAA,CACA,GAAA4W,GAAAtS,KAAA0K,YAAAmK,aAAApS,MAAA/G,GACAuD,EAAAqT,EAAArT,IAEAsX,IAAA,gCAAAjE,EAAAmE,KAAA,0BAAAxX,EAAA,YAGA,GAAAyX,GAAA,mRAKAH,EACA,aAEA,IAAAC,EAAA7a,OAAA,EAAA,CACA,GAAAgb,GAAApZ,EAAA,qDAAAyC,KAAA4W,mBAAA,cAAArB,aAAAP,GACA6B,EAAA7B,EAAAjQ,QAAAL,SAAA,gBAKA,IAJAmS,EAAA/U,KAAA,uBAAA1B,SACAyW,EAAA/U,KAAA,0BAAA1B,SAGA,UAAAJ,KAAA0K,YAAAwJ,iBAAA,WAAAlU,KAAA0K,YAAAwJ,gBACA2C,EAAA/U,KAAA,YAAA7C,KAAA,0CAAAyX,EAAA,eAEA,WAAA1W,KAAA0K,YAAAwJ,iBAEA2C,EAAA/U,KAAA,cAAAU,KAAA,WAAA,gBAEA,CACA,GAAAsU,GAAA9W,KAAA0K,YAAAmK,aAAAiC,OAAA,uCACAD,GAAA/U,KAAA,YAAA4C,SAAA,iBAAAzF,KAAA,OAAA6X,EAAA,sCAAAA,EAAA,eAIA,GAAAC,GAAAF,EAAA/U,KAAA,KAEAiV,GAAA1V,KAAA,SAAA2V,GACAzZ,EAAAyC,MAAAf,KAAAyX,GACAnZ,EAAAyC,MAAA8B,KAAA,KAAAU,KAAA,WAAAwU,EAAA,KAGAL,EAAA7R,OAAA+R,GAEA7W,KAAAyI,QAAA/D,SAAA,mBAGA1E,KAAAiX,wBAGAjX,KAAAC,SAAA6B,KAAA,qCAAAK,GAAA,QAAA,SAAA/D,GACA,IAAA6J,EAAAwB,WAAA,CACA,GAAAyN,GAAA3Z,EAAAyC,MAAAuB,KAAA,UACA4V,EAAA5Z,EAAAyC,MAAAuB,KAAA,OACAmG,GACAwP,WAAAA,EACAE,MAAAD,GAEAlP,GAAAoP,oBAAA3P,EAAAtJ,MAIA4B,KAAAC,SAAA6B,KAAA,qCAAAK,GAAA,QAAA,SAAA/D,GACA,IAAA6J,EAAAwB,WAAA,CACA,GAAAyN,GAAA3Z,EAAAyC,MAAAuB,KAAA,UACAmG,GACAwP,WAAAA,EACAE,SAEA5R,EAAA,0CAEA,YAAAyC,EAAAyC,YAAAwJ,kBACA1O,EAAA,qCAEAyC,EAAAhI,SAAA6B,KAAA0D,GAAAnE,KAAA,SAAAiW,GACA5P,EAAA0P,KAAAxb,KAAA0b,EAAA,KAGArP,EAAAoP,oBAAA3P,EAAAtJ,OAKAb,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAqW,oBAAA,SAAA3P,EAAAtJ,GAKA,IAAA,GAJAmZ,MACAC,EAAAja,EAAAka,KAAAzX,KAAA0K,YAAAmK,aAAApS,MAAA,SAAAiV,GACA,MAAAA,GAAAjB,OAAA/O,EAAAwP,aACA,GACAxb,EAAA,EAAAic,EAAAjQ,EAAA0P,KAAAzb,OAAAD,EAAAic,EAAAjc,IAAA,CACA,GAAAkc,GAAA5X,KAAAyI,QAAA3G,KAAA,qDAAA4F,EAAA0P,KAAA1b,GAAA,IACA6b,GAAA3b,MACAwH,KAAAwU,EACAC,QAAAD,EAAArW,KAAA,eAOA,GAJA,IAAAgW,EAAA5b,SACA4b,EAAAA,EAAA,IAGAC,EAAAM,YAAA,CACA,GAAA5J,GAAA,YACAsJ,GAAAM,YAAAP,EAAArJ,EAAA9P,KAIAb,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAiW,sBAAA,WACA,GAAAT,GAAAxW,KAAAC,SAAA6B,KAAA,sCACAiW,EAAAvB,EAAA1U,KAAA,eACAkT,EAAAhV,KAAAC,SAAA6B,KAAA,iCAEAiW,GAAAvK,YAAAwH,EAAAlT,KAAA,eAAA0L,eACAuK,EAAAjW,KAAA,0BAAA0L,YAAAuK,EAAAvK,eACAgJ,EAAA1U,KAAA,2BAAAT,KAAA,SAAA3F,GACA6B,EAAAyC,MAAAwN,YAAAwH,EAAAlT,KAAA,eAAApG,EAAA,QAAA8R,kBAIAjQ,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAA4U,uBAAA,WACA,GAAAZ,GAAAhV,KAAAC,SAAA6B,KAAA,gDAEA9B,MAAAC,SAAA6B,KAAA,wCAAAT,KAAA,SAAA3F,GACA6B,EAAAyC,MAAAuN,OAAAyH,EAAAlT,KAAA,SAAApG,EAAA,KAAA6R,WAGA,IAAAyK,GAAAhD,EAAAlT,KAAA,YAAAkD,YACAhF,MAAAC,SAAA6B,KAAA,iDAAAyC,MAAAyT,IAGAza,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAiX,6BAAA,WAgEA,QAAAC,GAAAC,GACAlQ,EAAAmQ,wBAAA,EACAD,EAAAE,SAAA,gBACApQ,GAAAmQ,uBAlEA,GAAAE,GAAAtY,KAAAC,SAAA6B,KAAA,2CACAyW,EAAAvY,KAAAC,SAAA6B,KAAA,qCACA0W,EAAAxY,KAAAC,SAAA6B,KAAA,wBACAmG,EAAAjI,IAGAA,MAAAC,SAAA6B,KAAA,iBAAAK,GAAA,uBAAA,SAAA/D,GACA,GAAAuH,GAAApI,EAAAyC,MAAA2F,OACAA,IAAA,EACA,cAAAvH,EAAAqa,KACAD,EAAA1W,KAAA,sBAAA6D,EAAA,KAAAjB,SAAA,WAEA8T,EAAA1W,KAAA,sBAAA6D,EAAA,KAAAI,YAAA,aAIAwS,EAAAF,WACAC,EAAAD,UAGA,IAAAK,GAAA1Y,KAAAC,SAAA6B,KAAA,wCACA6W,EAAA3Y,KAAAC,SAAA6B,KAAA,qDACA4W,GAAAvW,GAAA,SAAA,SAAA/D,GAGA,GAFAA,EAAA4F,kBAEAiE,EAAAmQ,uBACA,GAAAnQ,EAAAwB,WACAyO,EAAA3a,EAAAa,EAAA6F,oBACA,CACA,GAAAkT,GAAA5Z,EAAAyC,MAAAwC,KAAA,WACA2U,GAAA5K,SAAA4K,EAAA,IAAA,EACAlP,EAAAhI,SAAA6B,KAAA,qDAAAqV,EAAA,KAAAtB,OAEA,IAAA+C,GAAA3Q,EAAAhI,SAAA6B,KAAA,gDAAAnG,MACA,KAAAid,GACAD,EAAAxH,KAAA,WAAA,GACAwH,EAAAxH,KAAA,iBAAA,IACAyH,IAAAF,EAAA/c,QACAgd,EAAAxH,KAAA,WAAA,GACAwH,EAAAxH,KAAA,iBAAA,KAEAwH,EAAAxH,KAAA,WAAA,GACAwH,EAAAxH,KAAA,iBAAA,OAOAwH,EAAAxW,GAAA,SAAA,SAAA/D,GACA6J,EAAAmQ,yBACAnQ,EAAAwB,WACAyO,EAAA3a,EAAAa,EAAA6F,gBACA1G,EAAAyC,MAAA4D,GAAA,aACAqE,EAAAhI,SAAA6B,KAAA,0DAAA+T,QACA5N,EAAAhI,SAAA8D,QAAA,2BAAAuU,KAEArQ,EAAAhI,SAAA6B,KAAA,oDAAA+T,QACA5N,EAAAhI,SAAA8D,QAAA,6BAAAuU,QAaA/a,EAAAmC,GAAA2I,SAAAnI,SAAAhD,EAAAiC,SAAA5B,EAAAmC,GAAA2I,SAAAnI,UACA2Y,oBAAA,KACAC,mBAAA,EACAC,oBAAA,EACA1F,4BAAA,EACA2F,qBAAA,EACAC,iBAAA,iBACA/E,iBAAA,EACAgF,mBAAA,EACAC,iBAAA,KACAvE,mBAAA,EACAC,cAAA,IAIAtX,EAAAmC,GAAA2I,SAAA2D,UAAAjE,MACAkE,QAAA,WACAjM,KAAA0K,YAAAqO,oBACA/Y,KAAA+U,qBAGA9H,YAAA,SAAAlN,GAOA,MANAC,MAAAoZ,qBACArZ,EAAAsZ,cAAArZ,KAAAoZ,oBAEApZ,KAAAsZ,oBACAvZ,EAAAwZ,aAAAvZ,KAAAsZ,mBAEAvZ,GAEAsM,QAAA,SAAA4B,GACAjO,KAAA0K,YAAAmK,eACA5G,EAAA3B,QAGAtM,KAAAyI,QAAA3G,KAAA,4BAAAgC,WAAA,YACA0V,EAAAtY,KAAAlB,OAHAA,KAAAyI,QAAA3G,KAAA,4BAAAU,KAAA,WAAA,cAOAmQ,WAAA,SAAA1E,EAAAC,GACAlO,KAAAoZ,mBAAA,KACApZ,KAAAsZ,kBAAA,KACAtZ,KAAAyZ,yBAAAC,IACA1Z,KAAA4W,mBAAApV,SAAAxB,KAAA0K,YAAAmK,aAAAtQ,MAAAvE,KAAA0K,YAAAmK,aAAAtQ,MAAA,GACAvE,KAAA2Z,cAAA,EACAzL,KAEA3L,OAAA,WACAqX,EAAA1Y,KAAAlB,KAAAA,KAAAC,SAAA6B,KAAA,4CACA9B,KAAA0K,YAAAmK,cACA7U,KAAAiX,yBAEAjX,KAAA0K,YAAAkK,oBAAA,UAAA5U,KAAA0K,YAAAwJ,kBACAlU,KAAA4V,yBAEA5V,KAAA0K,YAAAqO,oBACA/Y,KAAA+U,qBAGArN,SAAA,WACA,GACAiE,GADAkO,EAAA7Z,KAAA0K,YAAAsO,mBAGAhZ,MAAA8Z,kBAAA,EACA9Z,KAAA6I,QAAAnE,SAAA,YAEAmV,IACAlO,EAAA,gBAAAkO,GAAAA,KACA7Z,KAAAkN,mBAAA,EAAAvB,KAGA4E,OAAA,SAAAtC,GACA,GAEA+G,GAFA+E,EAAA9L,EAAAqC,UAAAxO,KAAA,kBACAmG,EAAAjI,IA+BA,OA3BAiO,GAAA1M,KAAA8M,MAAA,EACArO,KAAA2Z,cAAA,EAEA3Z,KAAA2Z,cAAA,EAGAI,EAAApe,OAAA,IACAoe,EAAAxc,EAAA,6BAAAyC,KAAAyZ,yBAAA,gNACAM,EAAAjY,KAAA,0BAAAK,GAAA,yBAAA,WACA8F,EAAAyC,YAAAqO,oBACA9Q,EAAAuL,2BAGAvL,EAAAyC,YAAAkK,oBAAA3M,EAAAyC,YAAAmK,cAAA,UAAA5M,EAAAyC,YAAAwJ,kBACAjG,EAAAqC,UAAAnO,GAAA,yBAAA,WACA8F,EAAA6N,yBAIA7H,EAAAqC,UAAAxL,OAAAiV,IAEA9L,EAAAqC,UAAAvK,YAAA,wDAEAiP,EAAA+E,EAAAjY,KAAA,SACAkY,EAAA9Y,KAAAlB,KAAAgV,EAAA/G,EAAA1M,MACA0Y,EAAA/Y,KAAAlB,KAAAgV,EAAA/G,EAAA1M,OAEA,GAEAqP,WAAA,SAAA3C,GAEA,MADAiM,GAAAhZ,KAAAlB,KAAAiO,EAAAqC,UAAArC,EAAA4C,OAAA5C,EAAAtI,QACA,GAEA4L,MAAA,WACA,GAAA4I,EA0BA,QAxBAna,KAAA0K,YAAAkK,oBAAA,UAAA5U,KAAA0K,YAAAwJ,iBAAAlU,KAAA2Z,cACA3Z,KAAAkV,wBAGAlV,KAAA0K,YAAAmK,eAAA7U,KAAA2Z,eACA3Z,KAAAsW,yBACAtW,KAAAiX,0BAGAjX,KAAA0K,YAAAkK,qBAAA5U,KAAA0K,YAAAmK,cAAA,UAAA7U,KAAA0K,YAAAwJ,iBAAAlU,KAAA2Z,eACA3Z,KAAA8V,uBACA9V,KAAAiY,gCAGAjY,KAAA0K,YAAAqO,qBACA/Y,KAAA+U,oBACA/U,KAAAwT,yBAGA2G,EAAAna,KAAAyI,QAAA3G,KAAA,gEACAqY,EAAAxe,OAAA,GACAqE,KAAAkT,qBAAAiH,EAAA5Y,KAAA,mBAGA,IAMA,IAAA6Y,GAAA,SAAAC,EAAAC,GACA,IAAAA,EACA,OAAA,CAEA,KAAAD,GAAAC,EAAA3e,SAAA0e,EAAA1e,OACA,OAAA,CAEA,KAAA,GAAAD,GAAA,EAAA6e,EAAAD,EAAA3e,OAAAD,EAAA6e,EAAA7e,IAAA,CACA,IAAA2e,EAAA3e,GACA,OAAA,CAGA,KAAA,GAAA8e,KAAAF,GAAA5e,GACA,GAAA4e,EAAA5e,GAAAe,eAAA+d,IAAAH,EAAA3e,GAAA8e,KAAAF,EAAA5e,GAAA8e,GACA,OAAA,EAIA,OAAA,GAGAC,EAAA,SAAAC,EAAAtD,EAAA/C,EAAAsG,EAAAC,GACA,GAAAC,GAAAF,EAAAC,GAAAC,UACAC,EAAA1D,EAAA/C,GAAAsG,EAAAC,GAAAtG,UACAyG,EAAAxd,EAAA,aACAgH,EAAAoW,EAAAC,GAAAI,YAEA1G,EAAAqG,EAAAC,GAAAtG,QAcA,IAbAtU,KAAA0K,YAAAmK,gBAAA,GAAA,gBAAAP,IACAwG,EAAA,gEAAA9a,KAAA4W,mBAAA,cAGAkE,EAAAtZ,SAAAsZ,EAAAA,EAAA,GAEAC,EAAArW,SAAAlD,SAAAqZ,EAAAA,EAAA,IAAA/V,OAAAgW,GACAtZ,SAAA+C,GACAwW,EAAA/V,WAAAT,GAGAmW,EAAA5V,OAAAiW,GAEA,UAAA/a,KAAA0K,YAAAwJ,iBAAA,iBAAAyG,EAAAC,GAAAtG,SAAA,CACA,GAAA2G,GAAA,oBAAA5G,EAAA,kIAGA0G,GAAA9b,KAAAgc,GAGA,MAAAF,IAGAG,EAAA,SAAAC,EAAAR,EAAAhV,GACA,GAeAyV,GACAP,EACAQ,EACAC,EACAC,EAnBAC,EAAA,yBACAC,EAAA,uBACAC,EAAA,uBACAC,EAAApe,EAAA,gFACAqe,GAAA5b,KAAAC,SAAAuC,KAAA,MAAA,KAAA,IAAA,WAEAyY,EAAA,iEACAW,EAAA,qJAMAC,EAAAte,EAAA,aACA0K,EAAAjI,IAqBA,IAdA2b,EAAApa,KAAA,gBAAAoE,GACAgW,EAAA7G,QAAA6F,EAAAhV,GAAAmR,OACA+E,EAAA5c,KAAA0c,EAAA1c,QAAA6C,KAAA,QAAAgC,WAAA,MAEA,iBAAA6W,EAAAhV,GAAA2O,SACAuH,EAAA/W,OAAA6W,GAEAE,EAAA/W,OAAAmW,GAGAG,EAAAS,EAAAC,IAAAH,GACAL,EAAAK,EAAA7Z,KAAA2Z,GACAF,EAAAD,EAAAQ,IAAAD,EAAA/Z,KAAA2Z,IAEAzb,KAAA0K,YAAAmK,cAAA,gBAAA8F,EAAAhV,GAAA2O,SAAA,CACA,GAAA/P,GAAAvE,KAAA4W,kBACAiF,GAAA5W,IAAA,QAAAV,GACAoX,EAAA1W,IAAA,QAAAV,GAGAsW,EAAAF,EAAAhV,GAAAkV,UACArZ,SAAAqZ,GACAO,EAAA1W,SAAAmW,GAGAQ,EAAAV,EAAAhV,GAAA0V,SACAA,IACAD,EAAA1W,SAAA,YACAiX,EAAAxZ,GAAA,wBAAA,WACA8F,EAAAwB,aACAxB,EAAAqR,kBAAA,gBAAA+B,GAAAA,EAAAV,EAAAhV,GAAA2O,SACAqH,EAAA/W,SAAA,UACA0W,EAAA1W,SAAA8W,IACAH,EAAAxV,YAAA2V,GAAAhX,SAAA8W,GACAvT,EAAAmR,mBAAA,QACAnR,EAAAyC,YAAAwO,mBAIAkC,EAAArV,YAAA,UACAwV,EAAAxV,YAAAyV,GACAvT,EAAAmR,mBAAA,KACAnR,EAAAqR,kBAAA,OANAiC,EAAAxV,YAAAyV,GAAA9W,SAAAgX,GACAzT,EAAAmR,mBAAA,QAQA+B,EAAArZ,KAAA,8BAAAiE,YAAA,UACAwV,EAAAxV,YAAAyV,GAAA9W,SAAAgX,GACAzT,EAAAmR,mBAAA,MACAgC,EAAA1W,SAAA,WAGAuD,EAAA8C,QACAC,eAAA,EACAhB,cAAA,WAMA,QAAA2Q,EAAAhV,GAAA0T,eAAA,SAAAsB,EAAAhV,GAAA0T,gBACA8B,EAAArZ,KAAA,8BAAAiE,YAAA,UACAqV,EAAA1W,SAAA,mBACA,QAAAiW,EAAAhV,GAAA0T,eACAkC,EAAA7W,SAAAgX,GACA1b,KAAAoZ,mBAAA,QAEAmC,EAAA7W,SAAA8W,GACAxb,KAAAoZ,mBAAA,QAGApZ,KAAAsZ,kBAAA,gBAAA+B,GAAAA,EAAAV,EAAAhV,GAAA2O,UAGA6G,EAAArW,OAAA+W,IAGAE,EAAA,SAAA1T,GACA,GAAA2T,GAAA,UAAA3T,EAAAqC,YAAAwJ,gBACA+H,EAAA5T,EAAAqC,YAAAmK,aACAqH,EAAA7T,EAAApI,QAEA,KAAAoI,EAAAoB,WAAA,CACA,GAAAhG,GAAAlG,EAAAyC,MACA2F,EAAApI,EAAAyC,MAAA2F,QAAA,EACAwW,EAAAD,EAAApa,KAAA,uCAAA6D,EAAA,KACAyW,EAAAF,EAAApa,KAAA,wCAAA6D,EAAA,KACA0W,EAAAH,EAAApa,KAAA,uCAAA6D,EAAA,qBAEAlC,GAAAG,GAAA,cACAH,EAAAsC,YAAA,YACAiW,GACAK,EAAAxG,QACAsG,EAAApW,YAAA,YACAkW,GACAG,EAAArW,YAAA,aAGAtC,EAAA3B,KAAA,wBAAA1B,SAGA8b,EAAAnY,QAAA,6BAAAN,KAEAuY,GAUAK,EAAAxG,QACApS,EAAAiB,SAAA,YACAyX,EAAAzX,SAAA,YACAuX,GACAG,EAAA1X,SAAA,cAbA2D,EAAAI,QAAA3G,KAAA,wBAAA1B,SACAiI,EAAAI,QAAA3G,KAAA,oCAAAT,KAAA,WACA9D,EAAAyC,MAAA+F,YAAA,YACAmW,EAAAnY,QAAA,6BAAAxG,EAAAyC,SAEAyD,EAAA3B,KAAA,YAAAgT,QAAA,uFACArR,EAAAiB,SAAA,YACAyX,EAAAzX,SAAA,aASAwX,EAAAnY,QAAA,2BAAAN,IAGA+V,EAAAtY,KAAAmH,KAIA6R,EAAA,SAAAoC,EAAAlF,EAAAzR,GACA,GAAA+U,GAAAnd,EAAA,YAEA,IAAAyC,KAAA0K,YAAAwJ,kBACAwG,EAAAnZ,KAAA,YAAA6V,EAAAzR,IAEA,WAAA3F,KAAA0K,YAAAwJ,iBAAA,CACAwG,EAAAhW,SAAA,cACAgW,EAAAlY,KAAA,WAAA,EAEA,IAAA6F,GAAArI,IACA0a,GAAAvY,GAAA,wBAAA,WACA4Z,EAAA7a,KAAAlB,KAAAqI,KAIAqS,EAAA6B,MAAA,SAAAne,GACA,KAAAA,EAAAG,SAEAmc,EAAA3W,QAAA,2BAMA/D,KAAA0K,YAAAmK,eAAA7U,KAAA0K,YAAAwJ,iBACAwG,EAAAnZ,KAAA,YAAA6V,EAAAzR,GAIA,KAAA,GADAgV,MACAjf,EAAA,EAAAC,EAAAqE,KAAAwc,aAAA7gB,OAAAD,EAAAC,EAAAD,IACAif,EAAA/e,KAAA6e,EAAAvZ,KAAAlB,KAAA0a,EAAAtD,EAAAzR,EAAA3F,KAAAwc,aAAA9gB,GAKA,IAFA4gB,EAAAxX,OAAA4V,GAEA1a,KAAA0K,YAAAmO,oBACA,IAAA,GAAA+B,GAAA,EAAA6B,EAAA9B,EAAAhf,OAAAif,EAAA6B,EAAA7B,IACA,iBAAA5a,KAAAwc,aAAA5B,GAAAtG,UAAA,gBAAAtU,KAAAwc,aAAA5B,GAAAtG,UACAtU,KAAA0K,YAAAmO,qBACAvI,UAAAoK,EACAgC,WAAA1c,KAAAwc,aAAA5B,GAAAtG,SACAlR,KAAAuX,EAAAC,GACA/C,QAAAT,EAAAzR,IACA,aAKA3F,MAAA0K,YAAAyO,kBACAnZ,KAAA0K,YAAAyO,kBACA7I,UAAAgM,EACAlZ,KAAAsX,EACA7C,QAAAT,EAAAzR,IACA,eAIAsU,EAAA,SAAAjF,EAAAzT,GACA,GACAob,GADAL,EAAAtH,EAAAlT,KAAA,QAGAwa,GAAA3gB,OAAA,IACA2gB,EAAA/e,EAAA,yCACAyX,EAAAlQ,OAAAwX,IAGA,gBAAA/a,GAAAqb,OAAArb,EAAAqb,MAAAjhB,OAAA,GACAghB,EAAApf,EAAA,8CAAAyC,KAAAwc,aAAA7gB,OAAA,gBACAghB,EAAA7a,KAAA,MAAAgD,OAAAvD,EAAAqb,OACAN,EAAAxX,OAAA6X,IACApb,EAAAkB,OAAAlB,EAAAkB,MAAA9G,OAAA,IACAghB,EAAApf,EAAA,kCAAAyC,KAAAwc,aAAA7gB,OAAA,gBACAghB,EAAA7a,KAAA,MAAAgD,OAAA9E,KAAA0K,YAAAuO,kBACAqD,EAAAxX,OAAA6X,KAIA3C,EAAA,SAAAhF,EAAAzT,GACA,GAEA7F,GACAC,EACAwf,EAJAR,EAAApZ,EAAAoZ,YACAkC,EAAA7H,EAAAlT,KAAA,QAKA,IAAA9B,KAAA8Z,kBAAAM,EAAApa,KAAAwc,aAAA7B,IAAA,IAAAkC,EAAAlhB,OAAA,CAKA,GAJAkhB,EAAAzc,SAIA,UAAAJ,KAAA0K,YAAAwJ,kBAAAlU,KAAA2Z,aAAA,CACA,GAAAmD,IACAhG,MAAA,IACAxC,SAAA,eACA+G,UAAA,EAEAV,GAAAoC,OAAA,EAAA,EAAAD,GAQA,GALA9c,KAAAwc,aAAA7B,EACA3a,KAAA8Z,kBAAA,EACA9Z,KAAA6I,QAAA9C,YAAA,YAGA/F,KAAA0K,YAAAmK,aAAA,CACA,GAAAmI,IACAlG,MAAA9W,KAAA0K,YAAAmK,aAAAiC,OAAA,wCACAxC,SAAA,cACA+G,UAAA,EACA9W,MAAAvE,KAAA4W,mBAEA+D,GAAA/e,KAAAohB,GAMA,IAFAH,EAAAtf,EAAA,iDACA4d,EAAA0B,EAAA/a,KAAA,MACApG,EAAA,EAAAC,EAAAgf,EAAAhf,OAAAD,EAAAC,EAAAD,IACAwf,EAAAha,KAAAlB,KAAAmb,EAAAR,EAAAjf,EAIA,IAFAsZ,EAAAF,QAAA+H,GAEA,UAAA7c,KAAA0K,YAAAwJ,kBAAAlU,KAAA2Z,aAAA,CAGA,GAAAsD,GAAAjd,KAAAC,SAAA6B,KAAA,2CAAAkD,aACAkY,EAAA3f,EAAAka,KAAAkD,EAAA,SAAAwC,GACA,MAAA,iBAAAA,EAAA7I,WACA,EACA4I,GAAA3Y,MAAA0Y,EAEArD,EAAA1Y,KAAAlB,KAAAmb,KAIAvB,EAAA,SAAAuB,GACA,GAEAzf,GACAC,EACA6I,EACA4Y,EALAC,KACApV,EAAAjI,IAMA,IAAAA,KAAA0K,YAAAoO,oBACApd,EAAA,EACA0hB,EAAA,EACAjC,EAAArZ,KAAA,MAAAT,KAAA,WACA,GACAkD,GADA0Q,EAAA1X,EAAAyC,KAEA,IAAAwB,SAAAyG,EAAAuU,aAAA9gB,GAAA6I,MACAA,EAAA0D,EAAAuU,aAAA9gB,GAAA6I,MACA0Q,EAAAjQ,WAAAT,GACA6Y,GAAAnI,EAAAjQ,aACAiD,EAAAuU,aAAA9gB,GAAAsf,YAAAzW,MACA,CACA,GAAAS,GAAAiQ,EAAAnT,KAAA,0BAAAkD,YACAqY,GAAAzhB,MACA0X,IAAA2B,EACAtP,MAAAjK,EACA4hB,SAAAtY,IAIAtJ,MAGAC,EAAA0hB,EAAA1hB,OACAA,EAAA,GAAA,CACA,GAAAua,GAAAlW,KAAAyI,QAAA3G,KAAA,0BAAAkD,YAEA,KADAR,EAAA6F,KAAAC,OAAA4L,EAAAkH,GAAAzhB,GACAD,EAAA,EAAAA,EAAAC,EAAAD,IACA2hB,EAAA3hB,GAAA4hB,SAAA9Y,IACAA,EAAA6Y,EAAA3hB,GAAA4hB,UAEAD,EAAA3hB,GAAA4X,IAAAtO,WAAAR,GACAxE,KAAAwc,aAAAa,EAAA3hB,GAAAiK,OAAAqV,YAAAxW,IAMAkV,EAAA,WACA,GAAA6D,GAAAxgB,OAAAygB,UAAAC,UACAC,EAAAH,EAAAI,QAAA,SACAC,EAAAL,EAAAI,QAAA,UAEA,OAAAD,GAAA,EACA,MAAAnR,SAAAgR,EAAAM,UAAAH,EAAA,EAAAH,EAAAI,QAAA,IAAAD,IAAA,IACAE,EAAA,EACA,UAGA,IAGApE,EAAA,WACA,GAEA7R,GAFAmW,EAAA,2CACAjH,EAAA7W,KAAAC,SAAA6B,KAAA,iBAGA,YAAA9B,KAAA0K,YAAAwJ,kBACA4J,EAAA,qCAGAnW,EAAA3H,KAAAyI,QAAA3G,KAAAgc,GAEAnW,EAAAhM,OAAA,EACAkb,EAAA/U,KAAA,cAAAgC,WAAA,YAEA+S,EAAA/U,KAAA,cAAAU,KAAA,WAAA,eAMA1G,EAAA,0CACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,cACA,SAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAkMA,QAAAwgB,GAAAC,EAAAC,GAGA,QAAAC,KACA,GAAA7Q,GAAAiB,EAAA3K,CAEA2K,GAAA2P,EAAAN,QAAA,MACAtQ,EAAA4Q,EAAAN,QAAA,KAAArP,EAAA,GAEAA,MAAAjB,MACA1J,EAAAzG,EAAA0J,KAAAqX,EAAAJ,UAAAvP,EAAA,EAAAjB,IACA1J,EAAAnC,SAAAwc,EAAAra,GAAAqa,EAAAra,GAAA,GACAsa,EAAAA,EAAAJ,UAAA,EAAAvP,GAAA3K,EAAAsa,EAAAJ,UAAAxQ,EAAA,IAEA8Q,GAAA,EAIA,IAjBA,GAAAA,IAAA,GAiBAA,GAAAF,EAAArT,OAAA,OAAA,GACAsT,EAAAD,EAGA,OAAAA,GA9MA1gB,EAAAmC,GAAA2I,WAEA9K,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAod,6BAAA,WACApe,KAAAyI,QAAA3G,KAAA,iDAAAiE,YAAA,aAGAxI,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAqd,2BAAA,WACA,GAAA3W,KAIA,OAHA1H,MAAAyI,QAAA3G,KAAA,iDAAAT,KAAA,WACAqG,EAAA9L,KAAA2B,EAAAyC,SAEA0H,GAGAnK,EAAAmC,GAAA2I,SAAA5G,YAAAT,UAAAsd,2BAAA,SAAA7b,EAAA0Q,GAMA,QAAAoL,KACA,MAAAC,KAAA/b,EAAA/G,GAAAiK,OACAlC,EAAAlG,EAAAyC,OACA,OAEAwe,KAKA,QAAAC,KACAhb,EAAAlG,EAAAyC,MACAyD,EAAAG,GAAAnB,EAAA/G,GAAA8J,WACA+O,EAAA9Q,EAAAhB,EAAA/G,GAAAgM,UAIA,QAAA6M,GAAAC,EAAAG,GACAA,EAAAnT,SAAAmT,GAAAA,EACAA,GACAxB,GAAA,UAAAc,GACAhM,EAAAmW,+BAGA5J,EAAA9P,SAAA,aAEA8P,EAAAzO,YAAA,YA/BA,GAEArK,GAAA+H,EAAAqL,EAAA0P,EAFAvK,EAAAjU,KAAA0K,YAAAgU,qBACAzW,EAAAjI,IA8CA,KAZAzC,EAAA4W,QAAA1R,KACAA,GAAAA,IAIAqM,EADAqE,KAAA,GAAA,UAAAc,EACAxR,EAAA9G,OACAsY,GACAxR,EAAA9G,OAAA,EAAA,EAEA,EAGAD,EAAA,EAAAA,EAAAoT,EAAApT,IACA8F,SAAAiB,EAAA/G,GAAAiK,OACAlC,EAAAlG,IACAihB,EAAA,EACAxe,KAAAyI,QAAA3G,KAAA,wCAAAT,KAAAkd,GACA9a,EAAA9H,OAAA,GACA4Y,EAAA9Q,EAAAhB,EAAA/G,GAAAgM,WAGAjF,EAAA/G,GAAA8J,UACAxF,KAAAyI,QAAA3G,KAAA,wCAAAT,KAAAod,IAMAlhB,EAAAmC,GAAA2I,SAAAnI,SAAAhD,EAAAiC,SAAA5B,EAAAmC,GAAA2I,SAAAnI,UACAye,oBAAA,OACAC,0BAAA,EACAC,uBAAA,KACAC,sBAAA,iBACAJ,sBAAA,EACAK,mBAAA,oHAIAxhB,EAAAmC,GAAA2I,SAAA2D,UAAAgT,WACAtX,SAAA,WACA,GACAiE,GADAkO,EAAA7Z,KAAA0K,YAAAkU,wBAEA/E,KACAlO,EAAA,gBAAAkO,GAAAA,KACA7Z,KAAAkN,mBAAA,EAAAvB,KAGA4E,OAAA,SAAAtC,GACA,GAIA0O,GAAAsC,EAJAC,EAAAlf,KAAA0K,YAAAiU,oBACAQ,EAAAnf,KAAAyI,QAAA3G,KAAA,4BACAP,EAAA0M,EAAA1M,KACA8Q,IA+BA,OA5BA8M,GAAAxjB,OAAA,GACAwjB,EAAA5hB,EAAA,2HACA2hB,GAAA,SAAAA,GACAD,GACAG,OAAA,EACAC,QAAA,EACAzL,KAAA,EACA0L,MAAA,GAEAJ,EAAAD,EAAAC,GAAAA,EAAA,UACAC,EAAAza,SAAA,SAAAwa,GACAlf,KAAAuf,yBAAA,GAEAvf,KAAAuf,yBAAA,EAEAlN,EAAAjP,KAAA+b,GAEA9M,EAAAC,OAAA,OAGA/Q,EAAAkB,OAAAlB,EAAAkB,MAAA9G,OAAA,GACAghB,EAAApf,EAAA,6BACAof,EAAA7X,OAAA9E,KAAA0K,YAAAoU,uBACAK,EAAAra,OAAA6X,IAEAwC,EAAArd,KAAA,gBAAA1B,SAGAiS,GAEAzB,WAAA,SAAA3C,GACA,GAAAgG,GAAAjU,KAAA0K,YAAAgU,qBACAhX,EAAA,WACAO,EAAAjI,KACAwf,EAAAjiB,EAAAwgB,EAAA9P,EAAA4C,OAAA5C,EAAAtI,OAAA3F,KAAA0K,YAAAqU,oBAwCA,OAtCAS,GAAAje,KAAA,YAAA0M,EAAA1M,KAAAkB,MAAAwL,EAAAtI,QAEAsO,IACAuL,EAAA9a,SAAA,cACA8a,EAAArd,GAAA,QAAA,WACA8F,EAAAwB,aAEA+V,EAAA5a,SAAA8C,IAYA8X,EAAAzZ,YAAA2B,GACAO,EAAAhI,SAAA8D,QAAA,kCAAAyb,KAZA,UAAAvL,GACAhM,EAAAQ,QAAA3G,KAAA,iDAAAT,KAAA,WACA,GAAAmT,GAAAjX,EAAAyC,KACAwU,GAAAzO,YAAA2B,GACAO,EAAAhI,SAAA8D,QAAA,kCAAAyQ,KAIAgL,EAAA9a,SAAAgD,GACAO,EAAAhI,SAAA8D,QAAA,gCAAAyb,QAQAvR,EAAAqC,UAAAxL,OAAA0a,GACAxf,KAAAuf,yBACAC,EAAAjO,MAAA,sCAGAvR,KAAA0K,YAAAmU,wBACA7e,KAAA0K,YAAAmU,wBACAvO,UAAArC,EAAAqC,UACAlN,KAAAoc,EACAxB,SAAA/P,EAAA4C,OAAA5C,EAAAtI,QACA,eAGA,OAgCA7J,EAAA,4BACA,sBACA,aACA,kBACA,wBACA,SAAAyB,GACA,MAAAA,KAEAzB,EAAA,uBAAA,4BAAA,SAAA2jB,GAAA,MAAAA,MA2EEzf","file":"../skylark-ui-repeater.js","sourcesContent":["/**\n * skylark-fuelux - A version of fuelux that ported to running on skylarkjs\n * @author Hudaokeji, Inc.\n * @version v0.9.2\n * @link https://github.com/skylarkui/skylark-fuelux/\n * @license MIT\n */\ndefine('skylark-fuelux/sbswt',[\n  \"skylark-utils/skylark\",\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/query\",\n  \"skylark-utils/widgets\"\n],function(skylark,langx,browser,eventer,noder,geom,$,widgets){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tsbswt = ui.sbswt = {};\n\n/*---------------------------------------------------------------------------------*/\n\t/*\n\t * Fuel UX utilities.js\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\n\n\n\tlangx.mixin(sbswt, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n/*---------------------------------------------------------------------------------*/\n\n\tvar WidgetBase = widgets.Widget.inherit({\n        klassName: \"WidgetBase\",\n    });\n\n\n\tlangx.mixin(sbswt, {\n\t\tWidgetBase : WidgetBase\n\t});\n\n\treturn sbswt;\n});\n\n/**\n * skylark-fuelux - A version of fuelux that ported to running on skylarkjs\n * @author Hudaokeji, Inc.\n * @version v0.9.2\n * @link https://github.com/skylarkui/skylark-fuelux/\n * @license MIT\n */\ndefine('skylark-fuelux/loader',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\n\tvar old = $.fn.loader;\n\n\t// LOADER CONSTRUCTOR AND PROTOTYPE\n\n\tvar Loader = sbswt.Loader = sbswt.WidgetBase.inherit({\n\t\tklassName: \"Loader\",\n\n\t\tinit : function(element,options) {\n\t\t\tthis.$element = $(element);\n\t\t\tthis.options = langx.mixin({}, $.fn.loader.defaults, options);\n\t\t},\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tieRepaint: function () {},\n\n\t\tmsieVersion: function () {},\n\n\t\tnext: function () {},\n\n\t\tpause: function () {},\n\n\t\tplay: function () {},\n\n\t\tprevious: function () {},\n\n\t\treset: function () {}\n\t});\n\n\t// LOADER PLUGIN DEFINITION\n\n\t$.fn.loader = function (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.loader');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.loader', (data = new Loader(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.loader.defaults = {};\n\n\t$.fn.loader.Constructor = Loader;\n\n\t$.fn.loader.noConflict = function () {\n\t\t$.fn.loader = old;\n\t\treturn this;\n\t};\n\n\t// INIT LOADER ON DOMCONTENTLOADED\n\t/*\n\t$(function () {\n\t\t$('[data-initialize=loader]').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tif (!$this.data('fu.loader')) {\n\t\t\t\t$this.loader($this.data());\n\t\t\t}\n\t\t});\n\t});\n\t*/\n\n\treturn $.fn.loader;\n});\n\n/**\n * skylark-fuelux - A version of fuelux that ported to running on skylarkjs\n * @author Hudaokeji, Inc.\n * @version v0.9.2\n * @link https://github.com/skylarkui/skylark-fuelux/\n * @license MIT\n */\ndefine('skylark-fuelux/selectlist',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tvar old = $.fn.selectlist;\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar Selectlist = sbswt.Selectlist = sbswt.WidgetBase.inherit({\n\t\tklassName: \"Selectlist\",\n\n\t\tinit : function(element,options) {\n\t\t\tthis.$element = $(element);\n\t\t\tthis.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectlist.prototype.getValue = Selectlist.prototype.selectedItem;\n\n\n\t// SELECT PLUGIN DEFINITION\n\n\t$.fn.selectlist = function (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.selectlist');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.selectlist', (data = new Selectlist(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.selectlist.defaults = {\n\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\t};\n\n\t$.fn.selectlist.Constructor = Selectlist;\n\n\t$.fn.selectlist.noConflict = function () {\n\t\t$.fn.selectlist = old;\n\t\treturn this;\n\t};\n\n\n\t// DATA-API\n\n\t/*\n\t$(document).on('mousedown.fu.selectlist.data-api', '[data-initialize=selectlist]', function (e) {\n\t\tvar $control = $(e.target).closest('.selectlist');\n\t\tif (!$control.data('fu.selectlist')) {\n\t\t\t$control.selectlist($control.data());\n\t\t}\n\t});\n\n\t// Must be domReady for AMD compatibility\n\t$(function () {\n\t\t$('[data-initialize=selectlist]').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tif (!$this.data('fu.selectlist')) {\n\t\t\t\t$this.selectlist($this.data());\n\t\t\t}\n\t\t});\n\t});\n\n\t*/\n\n\treturn $.fn.selectlist;\n});\n\n/**\n * skylark-fuelux - A version of fuelux that ported to running on skylarkjs\n * @author Hudaokeji, Inc.\n * @version v0.9.2\n * @link https://github.com/skylarkui/skylark-fuelux/\n * @license MIT\n */\ndefine('skylark-fuelux/combobox',[\n  \"skylark-utils/langx\",\n  \"skylark-utils/browser\",\n  \"skylark-utils/eventer\",\n  \"skylark-utils/noder\",\n  \"skylark-utils/geom\",\n  \"skylark-utils/velm\",\n  \"skylark-utils/query\",\n  \"./sbswt\"\n],function(langx,browser,eventer,noder,geom,velm,$,sbswt){\n\n\n\t/*\n\t * Fuel UX Checkbox\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\n\tvar old = $.fn.combobox;\n\n\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\n\n\tvar Combobox = sbswt.Combobox = sbswt.WidgetBase.inherit({\n\t\tklassName: \"Combobox\",\n\n\t\tinit : function(element,options) {\n\t\t\tthis.$element = $(element);\n\t\t\tthis.options = langx.mixin({}, $.fn.combobox.defaults, options);\n\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$button = this.$element.find('.btn');\n\t\t\tthis.$button.dropdown();\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\n\n\t\t\tthis.$element.on('click.fu.combobox', 'a', langx.proxy(this.itemclicked, this));\n\t\t\tthis.$element.on('change.fu.combobox', 'input', langx.proxy(this.inputchanged, this));\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\n\t\t\tthis.$input.on('keyup.fu.combobox', langx.proxy(this.keypress, this));\n\n\t\t\t// set default selection\n\t\t\tthis.setDefaultSelection();\n\n\t\t\t// if dropdown is empty, disable it\n\t\t\tvar items = this.$dropMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\n\t\t\tif (this.options.filterOnKeypress) {\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// remove any external bindings\n\t\t\t// [none]\n\n\t\t\t// set input value attrbute in markup\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\n\t\t\tif (typeof $item[0] !== 'undefined') {\n\t\t\t\t// remove selection from old item, may result in remove and\n\t\t\t\t// re-addition of class if item is the same\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\n\n\t\t\t\t// add selection to new item\n\t\t\t\tthis.$selectedItem = $item;\n\t\t\t\tthis.$selectedItem.addClass('selected');\n\n\t\t\t\t// update input\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\n\t\t\t} else {\n\t\t\t\t// this is a custom input, not in the menu\n\t\t\t\tthis.$selectedItem = null;\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\n\t\t\t}\n\t\t},\n\n\t\tclearSelection: function () {\n\t\t\tthis.$selectedItem = null;\n\t\t\tthis.$input.val('');\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\n\t\t},\n\n\t\tmenuShown: function () {\n\t\t\tif (this.options.autoResizeMenu) {\n\t\t\t\tthis.resizeMenu();\n\t\t\t}\n\t\t},\n\n\t\tresizeMenu: function () {\n\t\t\tvar width = this.$element.outerWidth();\n\t\t\tthis.$dropMenu.outerWidth(width);\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar item = this.$selectedItem;\n\t\t\tvar data = {};\n\n\t\t\tif (item) {\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\n\t\t\t\tdata = langx.mixin({\n\t\t\t\t\ttext: txt\n\t\t\t\t}, this.$selectedItem.data());\n\t\t\t} else {\n\t\t\t\tdata = {\n\t\t\t\t\ttext: this.$input.val().trim(),\n\t\t\t\t\tnotFound: true\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar selector = 'li[data-selected=true]:first';\n\t\t\tvar item = this.$element.find(selector);\n\n\t\t\tif (item.length > 0) {\n\t\t\t\t// select by data-attribute\n\t\t\t\tthis.selectBySelector(selector);\n\t\t\t\titem.removeData('selected');\n\t\t\t\titem.removeAttr('data-selected');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', true);\n\t\t\tthis.$button.addClass('disabled');\n\t\t},\n\n\t\titemclicked: function (e) {\n\t\t\tthis.$selectedItem = $(e.target).parent();\n\n\t\t\t// set input text and trigger input change event marked as synthetic\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\n\t\t\t\tsynthetic: true\n\t\t\t});\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.combobox', data);\n\n\t\t\te.preventDefault();\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER = 13;\n\t\t\t//var TAB = 9;\n\t\t\tvar ESC = 27;\n\t\t\tvar LEFT = 37;\n\t\t\tvar UP = 38;\n\t\t\tvar RIGHT = 39;\n\t\t\tvar DOWN = 40;\n\n\t\t\tvar IS_NAVIGATIONAL = (\n\t\t\t\te.which === UP ||\n\t\t\t\te.which === DOWN ||\n\t\t\t\te.which === LEFT ||\n\t\t\t\te.which === RIGHT\n\t\t\t);\n\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\n\t\t\t\tthis.$button.dropdown('toggle');\n\t\t\t\tthis.$input.focus();\n\t\t\t}\n\n\t\t\tif (e.which === ENTER) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\n\t\t\t\tif(selected.length > 0){\n\t\t\t\t\tthis.selectByText(selected);\n\t\t\t\t}else{\n\t\t\t\t\tthis.selectByText(this.$input.val());\n\t\t\t\t}\n\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\n\t\t\t} else if (e.which === ESC) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clearSelection();\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\n\t\t\t\t\tif ($selected.length > 0) {\n\t\t\t\t\t\tif (e.which === DOWN) {\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($selected.length === 0){\n\t\t\t\t\t\tif (e.which === DOWN) {\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.doSelect($selected);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Avoid filtering on navigation key presses\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\n\t\t\t}\n\n\t\t\tthis.previousKeyPress = e.which;\n\t\t},\n\n\t\tinputchanged: function (e, extra) {\n\t\t\tvar val = $(e.target).val();\n\t\t\t// skip processing for internally-generated synthetic event\n\t\t\t// to avoid double processing\n\t\t\tif (extra && extra.synthetic) {\n\t\t\t\tthis.selectByText(val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.selectByText(val);\n\n\t\t\t// find match based on input\n\t\t\t// if no match, pass the input value\n\t\t\tvar data = this.selectedItem();\n\t\t\tif (data.text.length === 0) {\n\t\t\t\tdata = {\n\t\t\t\t\ttext: val\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.combobox', data);\n\t\t}\n\n\t});\n\n\n\n\tCombobox.prototype.getValue = Combobox.prototype.selectedItem;\n\n\t// COMBOBOX PLUGIN DEFINITION\n\n\t$.fn.combobox = function (option) {\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\tvar methodReturn;\n\n\t\tvar $set = this.each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar data = $this.data('fu.combobox');\n\t\t\tvar options = typeof option === 'object' && option;\n\n\t\t\tif (!data) {\n\t\t\t\t$this.data('fu.combobox', (data = new Combobox(this, options)));\n\t\t\t}\n\n\t\t\tif (typeof option === 'string') {\n\t\t\t\tmethodReturn = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\n\t};\n\n\t$.fn.combobox.defaults = {\n\n\t\tautoResizeMenu: true,\n\t\tfilterOnKeypress: false,\n\t\tshowOptionsOnKeypress: false,\n\t\tfilter: function filter (list, predicate, self) {\n\t\t\tvar visible = 0;\n\t\t\tself.$dropMenu.find('.empty-indicator').remove();\n\n\t\t\tlist.each(function (i) {\n\t\t\t\tvar $li = $(this);\n\t\t\t\tvar text = $(this).text().trim();\n\n\t\t\t\t$li.removeClass();\n\n\t\t\t\tif (text === predicate) {\n\t\t\t\t\t$li.addClass('text-success');\n\t\t\t\t\tvisible++;\n\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\n\t\t\t\t\t$li.addClass('text-info');\n\t\t\t\t\tvisible++;\n\t\t\t\t} else {\n\t\t\t\t\t$li.addClass('hidden');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (visible === 0) {\n\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\n\t\t\t}\n\t\t}\n\t};\n\n\t$.fn.combobox.Constructor =  Combobox;\n\n\t$.fn.combobox.noConflict = function () {\n\t\t$.fn.combobox = old;\n\t\treturn this;\n\t};\n\n\t// DATA-API\n\n\t/*\n\n\t$(document).on('mousedown.fu.combobox.data-api', '[data-initialize=combobox]', function (e) {\n\t\tvar $control = $(e.target).closest('.combobox');\n\t\tif (!$control.data('fu.combobox')) {\n\t\t\t$control.combobox($control.data());\n\t\t}\n\t});\n\n\t// Must be domReady for AMD compatibility\n\t$(function () {\n\t\t$('[data-initialize=combobox]').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tif (!$this.data('fu.combobox')) {\n\t\t\t\t$this.combobox($this.data());\n\t\t\t}\n\t\t});\n\t});\n\t*/\n\n\treturn $.fn.combobox;\n});\n\ndefine('skylark-ui-repeater/repeater',[\r\n  \"skylark-utils/skylark\",\r\n  \"skylark-utils/langx\",\r\n  \"skylark-utils/browser\",\r\n  \"skylark-utils/eventer\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/geom\",\r\n  \"skylark-utils/velm\",\r\n  \"skylark-utils/query\",\r\n  \"skylark-utils/widgets\",\r\n  \"skylark-fuelux/loader\",\r\n  \"skylark-fuelux/selectlist\",\r\n  \"skylark-fuelux/combobox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,velm,$,widgets){\r\n\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\r\n\t/*\r\n\t * Repeater\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tvar old = $.fn.repeater;\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = ui.Repeater = widgets.Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tinit : function(element,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\tthis.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.selectlist();\r\n\t\t\tthis.$pageSize.selectlist();\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox();\r\n\t\t\tthis.$search.search({\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.fu.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.fu.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.fu.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.fu.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.fu.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\tthis.$loader.loader();\r\n\t\t\tthis.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'list';\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewOptions(currentView);\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').combobox('destroy');\r\n\t\t\tthis.$element.find('.selectlist').selectlist('destroy');\r\n\t\t\tthis.$element.find('.search').search('destroy');\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.fu.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('disable');\r\n\t\t\tthis.$filters.selectlist('disable');\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('disable');\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('enable');\r\n\t\t\tthis.$filters.selectlist('enable');\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('enable');\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.combobox('disable');\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.selectlist('selectedItem');\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.selectlist('selectedItem').value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypes.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.fu.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.viewOptions.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\t\t\t\tthis.setViewOptions(this.currentView);\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.fu.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\tthis.$loader.show().loader('play');\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.viewOptions.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.viewOptions.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.viewOptions.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.viewType) {\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem.call(this, {\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render.call(this, {\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\tthis.$loader.hide().loader('pause');\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.fu.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\t// For backwards compatibility.\r\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\r\n\r\n\t// REPEATER PLUGIN DEFINITION\r\n\r\n\t$.fn.repeater = function fnrepeater (option) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\tvar methodReturn;\r\n\r\n\t\tvar $set = this.each(function eachThis () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('fu.repeater');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('fu.repeater', (data = new Repeater(this, options)));\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof option === 'string') {\r\n\t\t\t\tmethodReturn = data[option].apply(data, args);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\r\n\t};\r\n\r\n\t$.fn.repeater.defaults = {\r\n\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t},\r\n\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\tdropPagingCap: 10,\r\n\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\tsearchOnKeyPress: false,\r\n\t\tallowCancel: true\r\n\t};\r\n\r\n\t$.fn.repeater.viewTypes = {};\r\n\r\n\t$.fn.repeater.Constructor = Repeater;\r\n\r\n\t$.fn.repeater.noConflict = function noConflict () {\r\n\t\t$.fn.repeater = old;\r\n\t\treturn this;\r\n\t};\r\n\r\n\r\n\treturn $.fn.repeater;\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-list',[\r\n  \"skylark-utils/langx\",\r\n  \"skylark-utils/browser\",\r\n  \"skylark-utils/eventer\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/geom\",\r\n  \"skylark-utils/query\",\r\n  \"./repeater\"\r\n],function(langx,browser,eventer,noder,geom,$){\r\n\r\n\t/*\r\n\t * Fuel UX Checkbox\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tif ($.fn.repeater) {\r\n\t\t// ADDITIONAL METHODS\r\n\t\t$.fn.repeater.Constructor.prototype.list_clearSelectedItems = function listClearSelectedItems () {\r\n\t\t\tthis.$canvas.find('.repeater-list-check').remove();\r\n\t\t\tthis.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_highlightColumn = function listHighlightColumn (index, force) {\r\n\t\t\tvar tbody = this.$canvas.find('.repeater-list-wrapper > table tbody');\r\n\t\t\tif (this.viewOptions.list_highlightSortedColumn || force) {\r\n\t\t\t\ttbody.find('td.sorted').removeClass('sorted');\r\n\t\t\t\ttbody.find('tr').each(function eachTR () {\r\n\t\t\t\t\tvar col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n\t\t\t\t\tcol.addClass('sorted');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getSelectedItems = function listGetSelectedItems () {\r\n\t\t\tvar selected = [];\r\n\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n\t\t\t\tvar $item = $(this);\r\n\t\t\t\tselected.push({\r\n\t\t\t\t\tdata: $item.data('item_data'),\r\n\t\t\t\t\telement: $item\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn selected;\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.getValue = $.fn.repeater.Constructor.prototype.list_getSelectedItems;\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionHeadings = function listPositionHeadings () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-list-wrapper');\r\n\t\t\tvar offsetLeft = $wrapper.offset().left;\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\tvar $heading = $(this);\r\n\t\t\t\t\tvar left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n\t\t\t\t\t$heading.addClass('shifted').css('left', left);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\t$(this).removeClass('shifted').css('left', '');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setSelectedItems = function listSetSelectedItems (itms, force) {\r\n\t\t\tvar selectable = this.viewOptions.list_selectable;\r\n\t\t\tvar self = this;\r\n\t\t\tvar data;\r\n\t\t\tvar i;\r\n\t\t\tvar $item;\r\n\t\t\tvar length;\r\n\r\n\t\t\tvar items = itms;\r\n\t\t\tif (!$.isArray(items)) {\r\n\t\t\t\titems = [items];\r\n\t\t\t}\r\n\r\n\t\t\t// this function is necessary because lint yells when a function is in a loop\r\n\t\t\tvar checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n\t\t\t\t$item = $(this);\r\n\r\n\t\t\t\tdata = $item.data('item_data') || {};\r\n\t\t\t\tif (data[items[i].property] === items[i].value) {\r\n\t\t\t\t\tselectItem($item, items[i].selected, rowIndex);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar selectItem = function selectItem ($itm, slct, index) {\r\n\t\t\t\tvar $frozenCols;\r\n\r\n\t\t\t\tvar select = (slct !== undefined) ? slct : true;\r\n\t\t\t\tif (select) {\r\n\t\t\t\t\tif (!force && selectable !== 'multi') {\r\n\t\t\t\t\t\tself.list_clearSelectedItems();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$itm.hasClass('selected')) {\r\n\t\t\t\t\t\t$itm.addClass('selected');\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns) {\r\n\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$itm.find('.repeater-list-check').remove();\r\n\t\t\t\t\t$itm.removeClass('selected');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (force === true || selectable === 'multi') {\r\n\t\t\t\tlength = items.length;\r\n\t\t\t} else if (selectable) {\r\n\t\t\t\tlength = (items.length > 0) ? 1 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tlength = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\tif (items[i].index !== undefined) {\r\n\t\t\t\t\t$item = this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n\t\t\t\t\tif ($item.length > 0) {\r\n\t\t\t\t\t\tselectItem($item, items[i].selected, items[i].index);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n\t\t\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeHeadings = function listSizeHeadings () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list table');\r\n\t\t\t$table.find('thead th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar $heading = $th.find('.repeater-list-heading');\r\n\t\t\t\t$heading.css({ height: $th.outerHeight() });\r\n\t\t\t\t$heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setFrozenColumns = function listSetFrozenColumns () {\r\n\t\t\tvar frozenTable = this.$canvas.find('.table-frozen');\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar repeaterWrapper = this.$element.find('.repeater-list');\r\n\t\t\tvar numFrozenColumns = this.viewOptions.list_frozenColumns;\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\tnumFrozenColumns = numFrozenColumns + 1;\r\n\t\t\t\t$wrapper.addClass('multi-select-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tif (frozenTable.length < 1) {\r\n\t\t\t\t// setup frozen column markup\r\n\t\t\t\t// main wrapper and remove unneeded columns\r\n\t\t\t\tvar $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n\t\t\t\tvar $frozenColumn = $table.clone().addClass('table-frozen');\r\n\t\t\t\t$frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n\t\t\t\t$frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n\t\t\t\t// need to set absolute heading for vertical scrolling\r\n\t\t\t\tvar $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n\t\t\t\t$frozenThead.find('tbody').remove();\r\n\t\t\t\tvar $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n\t\t\t\t// this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n\t\t\t\t// attribs are unique for the 'top most' cloned checkbox\r\n\t\t\t\tvar $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n\t\t\t\t$checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n\t\t\t\t$frozenColumnWrapper.append($frozenColumn);\r\n\t\t\t\trepeaterWrapper.append($frozenTheadWrapper);\r\n\t\t\t\tthis.$canvas.addClass('frozen-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeFrozenColumns();\r\n\r\n\t\t\t$('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n\t\t\t\tvar index = $(this).parent('th').index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tself.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionColumns = function listPositionColumns () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar scrollTop = $wrapper.scrollTop();\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tvar frozenEnabled = this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi';\r\n\t\t\tvar actionsEnabled = this.viewOptions.list_actions;\r\n\r\n\t\t\tvar canvasWidth = this.$element.find('.repeater-canvas').outerWidth();\r\n\t\t\tvar tableWidth = this.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n\t\t\tvar actionsWidth = this.$element.find('.table-actions') ? this.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n\t\t\tvar shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n\t\t\tif (scrollTop > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', '0');\r\n\t\t\t}\r\n\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled && shouldScroll) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', '0');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_createItemActions = function listCreateItemActions () {\r\n\t\t\tvar actionsHtml = '';\r\n\t\t\tvar self = this;\r\n\t\t\tvar i;\r\n\t\t\tvar length;\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar $actionsTable = this.$canvas.find('.table-actions');\r\n\r\n\t\t\tfor (i = 0, length = this.viewOptions.list_actions.items.length; i < length; i++) {\r\n\t\t\t\tvar action = this.viewOptions.list_actions.items[i];\r\n\t\t\t\tvar html = action.html;\r\n\r\n\t\t\t\tactionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n\t\t\t}\r\n\r\n\t\t\tvar actionsDropdown = '<div class=\"btn-group\">' +\r\n\t\t\t\t'<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n\t\t\t\t'<span class=\"caret\"></span>' +\r\n\t\t\t\t'</button>' +\r\n\t\t\t\t'<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n\t\t\t\tactionsHtml +\r\n\t\t\t\t'</ul></div>';\r\n\r\n\t\t\tif ($actionsTable.length < 1) {\r\n\t\t\t\tvar $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.list_actions_width + 'px\"></div>').insertBefore($table);\r\n\t\t\t\tvar $actionsColumn = $table.clone().addClass('table-actions');\r\n\t\t\t\t$actionsColumn.find('th:not(:last-child)').remove();\r\n\t\t\t\t$actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n\t\t\t\t// Dont show actions dropdown in header if not multi select\r\n\t\t\t\tif (this.viewOptions.list_selectable === 'multi' || this.viewOptions.list_selectable === 'action') {\r\n\t\t\t\t\t$actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n\t\t\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t\t\t// disable the header dropdown until an item is selected\r\n\t\t\t\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar label = this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>';\r\n\t\t\t\t\t$actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create Actions dropdown for each cell in actions table\r\n\t\t\t\tvar $actionsCells = $actionsColumn.find('td');\r\n\r\n\t\t\t\t$actionsCells.each(function addActionsDropdown (rowNumber) {\r\n\t\t\t\t\t$(this).html(actionsDropdown);\r\n\t\t\t\t\t$(this).find('a').attr('data-row', rowNumber + 1);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$actionsColumnWrapper.append($actionsColumn);\r\n\r\n\t\t\t\tthis.$canvas.addClass('actions-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeActionsTable();\r\n\r\n\t\t\t// row level actions click\r\n\t\t\tthis.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar row = $(this).data('row');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: [row]\r\n\t\t\t\t\t};\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// bulk actions click\r\n\t\t\tthis.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: []\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar selector = '.repeater-list-wrapper > table .selected';\r\n\r\n\t\t\t\t\tif ( self.viewOptions.list_selectable === 'action' ) {\r\n\t\t\t\t\t\tselector = '.repeater-list-wrapper > table tr';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n\t\t\t\t\t\tselected.rows.push(selectorIndex + 1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getActionItems = function listGetActionItems (selected, e) {\r\n\t\t\tvar selectedObj = [];\r\n\t\t\tvar actionObj = $.grep(this.viewOptions.list_actions.items, function matchedActions (actions) {\r\n\t\t\t\treturn actions.name === selected.actionName;\r\n\t\t\t})[0];\r\n\t\t\tfor (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n\t\t\t\tvar clickedRow = this.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n\t\t\t\tselectedObj.push({\r\n\t\t\t\t\titem: clickedRow,\r\n\t\t\t\t\trowData: clickedRow.data('item_data')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (selectedObj.length === 1) {\r\n\t\t\t\tselectedObj = selectedObj[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (actionObj.clickAction) {\r\n\t\t\t\tvar callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n\t\t\t\tactionObj.clickAction(selectedObj, callback, e);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeActionsTable = function listSizeActionsTable () {\r\n\t\t\tvar $actionsTable = this.$element.find('.repeater-list table.table-actions');\r\n\t\t\tvar $actionsTableHeader = $actionsTable.find('thead tr th');\r\n\t\t\tvar $table = this.$element.find('.repeater-list-wrapper > table');\r\n\r\n\t\t\t$actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n\t\t\t$actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n\t\t\t$actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n\t\t\t\t$(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeFrozenColumns = function listSizeFrozenColumns () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n\t\t\tthis.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n\t\t\t\t$(this).height($table.find('tr:eq(' + i + ')').height());\r\n\t\t\t});\r\n\r\n\t\t\tvar columnWidth = $table.find('td:eq(0)').outerWidth();\r\n\t\t\tthis.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_frozenOptionsInitialize = function listFrozenOptionsInitialize () {\r\n\t\t\tvar $checkboxes = this.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n\t\t\tvar $headerCheckbox = this.$element.find('.header-checkbox .checkbox-custom');\r\n\t\t\tvar $everyTable = this.$element.find('.repeater-list table');\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t// Make sure if row is hovered that it is shown in frozen column as well\r\n\t\t\tthis.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n\t\t\t\tvar index = $(this).index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tif (e.type === 'mouseover') {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$headerCheckbox.checkbox();\r\n\t\t\t$checkboxes.checkbox();\r\n\r\n\t\t\t// Row checkboxes\r\n\t\t\tvar $rowCheckboxes = this.$element.find('.table-frozen tbody .checkbox-inline');\r\n\t\t\tvar $checkAll = this.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n\t\t\t$rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar row = $(this).attr('data-row');\r\n\t\t\t\t\t\trow = parseInt(row, 10) + 1;\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n\t\t\t\t\t\tvar numSelected = self.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n\t\t\t\t\t\tif (numSelected === 0) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else if (numSelected === $rowCheckboxes.length) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', true);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// \"Check All\" checkbox\r\n\t\t\t$checkAll.on('change', function onChangeCheckAll (e) {\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else if ($(this).is(':checked')) {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n\t\t\t\t\t\tself.$element.trigger('selected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n\t\t\t\t\t\tself.$element.trigger('deselected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction revertCheckbox ($checkbox) {\r\n\t\t\t\tself.list_revertingCheckbox = true;\r\n\t\t\t\t$checkbox.checkbox('toggle');\r\n\t\t\t\tdelete self.list_revertingCheckbox;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// ADDITIONAL DEFAULT OPTIONS\r\n\t\t$.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n\t\t\tlist_columnRendered: null,\r\n\t\t\tlist_columnSizing: true,\r\n\t\t\tlist_columnSyncing: true,\r\n\t\t\tlist_highlightSortedColumn: true,\r\n\t\t\tlist_infiniteScroll: false,\r\n\t\t\tlist_noItemsHTML: 'no items found',\r\n\t\t\tlist_selectable: false,\r\n\t\t\tlist_sortClearing: false,\r\n\t\t\tlist_rowRendered: null,\r\n\t\t\tlist_frozenColumns: 0,\r\n\t\t\tlist_actions: false\r\n\t\t});\r\n\r\n\t\t// EXTENSION DEFINITION\r\n\t\t$.fn.repeater.viewTypes.list = {\r\n\t\t\tcleared: function cleared () {\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdataOptions: function dataOptions (options) {\r\n\t\t\t\tif (this.list_sortDirection) {\r\n\t\t\t\t\toptions.sortDirection = this.list_sortDirection;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.list_sortProperty) {\r\n\t\t\t\t\toptions.sortProperty = this.list_sortProperty;\r\n\t\t\t\t}\r\n\t\t\t\treturn options;\r\n\t\t\t},\r\n\t\t\tenabled: function enabled (helpers) {\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tif (!helpers.status) {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n\t\t\t\t\t\ttoggleActionsHeaderButton.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinitialize: function initialize (helpers, callback) {\r\n\t\t\t\tthis.list_sortDirection = null;\r\n\t\t\t\tthis.list_sortProperty = null;\r\n\t\t\t\tthis.list_specialBrowserClass = specialBrowserClass();\r\n\t\t\t\tthis.list_actions_width = (this.viewOptions.list_actions.width !== undefined) ? this.viewOptions.list_actions.width : 37;\r\n\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\tcallback();\r\n\t\t\t},\r\n\t\t\tresize: function resize () {\r\n\t\t\t\tsizeColumns.call(this, this.$element.find('.repeater-list-wrapper > table thead tr'));\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\tthis.list_sizeFrozenColumns();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselected: function selected () {\r\n\t\t\t\tvar infScroll = this.viewOptions.list_infiniteScroll;\r\n\t\t\t\tvar opts;\r\n\r\n\t\t\t\tthis.list_firstRender = true;\r\n\t\t\t\tthis.$loader.addClass('noHeader');\r\n\r\n\t\t\t\tif (infScroll) {\r\n\t\t\t\t\topts = (typeof infScroll === 'object') ? infScroll : {};\r\n\t\t\t\t\tthis.infiniteScrolling(true, opts);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbefore: function before (helpers) {\r\n\t\t\t\tvar $listContainer = helpers.container.find('.repeater-list');\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar $table;\r\n\r\n\t\t\t\t// this is a patch, it was pulled out of `renderThead`\r\n\t\t\t\tif (helpers.data.count > 0) {\r\n\t\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.list_noItems = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($listContainer.length < 1) {\r\n\t\t\t\t\t$listContainer = $('<div class=\"repeater-list ' + this.list_specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n\t\t\t\t\t$listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\tif (self.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\t\t\tself.list_positionHeadings();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_actions || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\thelpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\t\tself.list_positionColumns();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thelpers.container.append($listContainer);\r\n\t\t\t\t}\r\n\t\t\t\thelpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n\t\t\t\t$table = $listContainer.find('table');\r\n\t\t\t\trenderThead.call(this, $table, helpers.data);\r\n\t\t\t\trenderTbody.call(this, $table, helpers.data);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\trenderItem: function renderItem (helpers) {\r\n\t\t\t\trenderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tafter: function after () {\r\n\t\t\t\tvar $sorted;\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_setFrozenColumns();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_actions && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_createItemActions();\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_actions || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_positionColumns();\r\n\t\t\t\t\tthis.list_frozenOptionsInitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t\tthis.list_positionHeadings();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$sorted = this.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n\t\t\t\tif ($sorted.length > 0) {\r\n\t\t\t\t\tthis.list_highlightColumn($sorted.data('fu_item_index'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// ADDITIONAL METHODS\r\n\tvar areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n\t\tif (!newCols) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!oldCols || (newCols.length !== oldCols.length)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n\t\t\tif (!oldCols[i]) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var j in newCols[i]) {\r\n\t\t\t\tif (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tvar renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n\t\tvar className = columns[columnIndex].className;\r\n\t\tvar content = rows[rowIndex][columns[columnIndex].property];\r\n\t\tvar $col = $('<td></td>');\r\n\t\tvar width = columns[columnIndex]._auto_width;\r\n\r\n\t\tvar property = columns[columnIndex].property;\r\n\t\tif (this.viewOptions.list_actions !== false && property === '@_ACTIONS_@') {\r\n\t\t\tcontent = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.list_actions_width  + 'px\"></div>';\r\n\t\t}\r\n\r\n\t\tcontent = (content !== undefined) ? content : '';\r\n\r\n\t\t$col.addClass(((className !== undefined) ? className : '')).append(content);\r\n\t\tif (width !== undefined) {\r\n\t\t\t$col.outerWidth(width);\r\n\t\t}\r\n\r\n\t\t$row.append($col);\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n\t\t\tvar checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n\t\t\t$col.html(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\treturn $col;\r\n\t};\r\n\r\n\tvar renderHeader = function renderHeader ($tr, columns, index) {\r\n\t\tvar chevDown = 'glyphicon-chevron-down';\r\n\t\tvar chevron = '.glyphicon.rlc:first';\r\n\t\tvar chevUp = 'glyphicon-chevron-up';\r\n\t\tvar $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n\t\tvar checkAllID = (this.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n\t\tvar checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n\t\t\t\t'<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n\t\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n\t\t\t\t\t'<span class=\"checkbox-label\">&nbsp;</span>' +\r\n\t\t\t\t'</label>' +\r\n\t\t\t'</div>';\r\n\r\n\t\tvar $header = $('<th></th>');\r\n\t\tvar self = this;\r\n\t\tvar $both;\r\n\t\tvar className;\r\n\t\tvar sortable;\r\n\t\tvar $span;\r\n\t\tvar $spans;\r\n\r\n\t\t$div.data('fu_item_index', index);\r\n\t\t$div.prepend(columns[index].label);\r\n\t\t$header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n\t\tif (columns[index].property !== '@_CHECKBOX_@') {\r\n\t\t\t$header.append($div);\r\n\t\t} else {\r\n\t\t\t$header.append(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\t$both = $header.add($div);\r\n\t\t$span = $div.find(chevron);\r\n\t\t$spans = $span.add($header.find(chevron));\r\n\r\n\t\tif (this.viewOptions.list_actions && columns[index].property === '@_ACTIONS_@') {\r\n\t\t\tvar width = this.list_actions_width;\r\n\t\t\t$header.css('width', width);\r\n\t\t\t$div.css('width', width);\r\n\t\t}\r\n\r\n\t\tclassName = columns[index].className;\r\n\t\tif (className !== undefined) {\r\n\t\t\t$both.addClass(className);\r\n\t\t}\r\n\r\n\t\tsortable = columns[index].sortable;\r\n\t\tif (sortable) {\r\n\t\t\t$both.addClass('sortable');\r\n\t\t\t$div.on('click.fu.repeaterList', function onClickRepeaterList () {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tself.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t\t\t\tif ($div.hasClass('sorted')) {\r\n\t\t\t\t\t\tif ($span.hasClass(chevUp)) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevUp).addClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'desc';\r\n\t\t\t\t\t\t} else if (!self.viewOptions.list_sortClearing) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$both.removeClass('sorted');\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = null;\r\n\t\t\t\t\t\t\tself.list_sortProperty = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t$both.addClass('sorted');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t$both.addClass('sortable sorted');\r\n\t\t\tif (columns[index].sortDirection === 'asc') {\r\n\t\t\t\t$spans.addClass(chevUp);\r\n\t\t\t\tthis.list_sortDirection = 'asc';\r\n\t\t\t} else {\r\n\t\t\t\t$spans.addClass(chevDown);\r\n\t\t\t\tthis.list_sortDirection = 'desc';\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t}\r\n\r\n\t\t$tr.append($header);\r\n\t};\r\n\r\n\tvar onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n\t\tvar isMulti = repeater.viewOptions.list_selectable === 'multi';\r\n\t\tvar isActions = repeater.viewOptions.list_actions;\r\n\t\tvar $repeater = repeater.$element;\r\n\r\n\t\tif (!repeater.isDisabled) {\r\n\t\t\tvar $item = $(this);\r\n\t\t\tvar index = $(this).index() + 1;\r\n\t\t\tvar $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n\t\t\tif ($item.is('.selected')) {\r\n\t\t\t\t$item.removeClass('selected');\r\n\t\t\t\tif (isMulti) {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$frozenRow.removeClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.removeClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$item.find('.repeater-list-check').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $item);\r\n\t\t\t} else {\r\n\t\t\t\tif (!isMulti) {\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list-check').remove();\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n\t\t\t\t\t\t$(this).removeClass('selected');\r\n\t\t\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $(this));\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.addClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$repeater.trigger('selected.fu.repeaterList', $item);\r\n\t\t\t}\r\n\r\n\t\t\ttoggleActionsHeaderButton.call(repeater);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderRow = function renderRow ($tbody, rows, index) {\r\n\t\tvar $row = $('<tr></tr>');\r\n\r\n\t\tif (this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t$row.addClass('selectable');\r\n\t\t\t\t$row.attr('tabindex', 0);\t// allow items to be tabbed to / focused on\r\n\r\n\t\t\t\tvar repeater = this;\r\n\t\t\t\t$row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\r\n\t\t\t\t\tonClickRowRepeaterList.call(this, repeater);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// allow selection via enter key\r\n\t\t\t\t$row.keyup(function onRowKeyup (e) {\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\t// triggering a standard click event to be caught by the row click handler above\r\n\t\t\t\t\t\t$row.trigger('click.fu.repeaterList');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_actions && !this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\t\t}\r\n\r\n\t\tvar columns = [];\r\n\t\tfor (var i = 0, length = this.list_columns.length; i < length; i++) {\r\n\t\t\tcolumns.push(renderColumn.call(this, $row, rows, index, this.list_columns, i));\r\n\t\t}\r\n\r\n\t\t$tbody.append($row);\r\n\r\n\t\tif (this.viewOptions.list_columnRendered) {\r\n\t\t\tfor (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n\t\t\t\tif (!(this.list_columns[columnIndex].property === '@_CHECKBOX_@' || this.list_columns[columnIndex].property === '@_ACTIONS_@')) {\r\n\t\t\t\t\tthis.viewOptions.list_columnRendered({\r\n\t\t\t\t\t\tcontainer: $row,\r\n\t\t\t\t\t\tcolumnAttr: this.list_columns[columnIndex].property,\r\n\t\t\t\t\t\titem: columns[columnIndex],\r\n\t\t\t\t\t\trowData: rows[index]\r\n\t\t\t\t\t}, function noop () {});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_rowRendered) {\r\n\t\t\tthis.viewOptions.list_rowRendered({\r\n\t\t\t\tcontainer: $tbody,\r\n\t\t\t\titem: $row,\r\n\t\t\t\trowData: rows[index]\r\n\t\t\t}, function noop () {});\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderTbody = function renderTbody ($table, data) {\r\n\t\tvar $tbody = $table.find('tbody');\r\n\t\tvar $empty;\r\n\r\n\t\tif ($tbody.length < 1) {\r\n\t\t\t$tbody = $('<tbody data-container=\"true\"></tbody>');\r\n\t\t\t$table.append($tbody);\r\n\t\t}\r\n\r\n\t\tif (typeof data.error === 'string' && data.error.length > 0) {\r\n\t\t\t$empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(data.error);\r\n\t\t\t$tbody.append($empty);\r\n\t\t} else if (data.items && data.items.length < 1) {\r\n\t\t\t$empty = $('<tr class=\"empty\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(this.viewOptions.list_noItemsHTML);\r\n\t\t\t$tbody.append($empty);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderThead = function renderThead ($table, data) {\r\n\t\tvar columns = data.columns || [];\r\n\t\tvar $thead = $table.find('thead');\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar $tr;\r\n\r\n\t\tif (this.list_firstRender || areDifferentColumns(this.list_columns, columns) || $thead.length === 0) {\r\n\t\t\t$thead.remove();\r\n\r\n\t\t\t// list_noItems is set in `before` method\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\tvar checkboxColumn = {\r\n\t\t\t\t\tlabel: 'c',\r\n\t\t\t\t\tproperty: '@_CHECKBOX_@',\r\n\t\t\t\t\tsortable: false\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.splice(0, 0, checkboxColumn);\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_columns = columns;\r\n\t\t\tthis.list_firstRender = false;\r\n\t\t\tthis.$loader.removeClass('noHeader');\r\n\r\n\t\t\t// keep action column header even when empty, you'll need it later....\r\n\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\tvar actionsColumn = {\r\n\t\t\t\t\tlabel: this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>',\r\n\t\t\t\t\tproperty: '@_ACTIONS_@',\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\twidth: this.list_actions_width\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.push(actionsColumn);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t$thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n\t\t\t$tr = $thead.find('tr');\r\n\t\t\tfor (i = 0, length = columns.length; i < length; i++) {\r\n\t\t\t\trenderHeader.call(this, $tr, columns, i);\r\n\t\t\t}\r\n\t\t\t$table.prepend($thead);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\t// after checkbox column is created need to get width of checkbox column from\r\n\t\t\t\t// its css class\r\n\t\t\t\tvar checkboxWidth = this.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n\t\t\t\tvar selectColumn = $.grep(columns, function grepColumn (column) {\r\n\t\t\t\t\treturn column.property === '@_CHECKBOX_@';\r\n\t\t\t\t})[0];\r\n\t\t\t\tselectColumn.width = checkboxWidth;\r\n\t\t\t}\r\n\t\t\tsizeColumns.call(this, $tr);\r\n\t\t}\r\n\t};\r\n\r\n\tvar sizeColumns = function sizeColumns ($tr) {\r\n\t\tvar automaticallyGeneratedWidths = [];\r\n\t\tvar self = this;\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar newWidth;\r\n\t\tvar widthTaken;\r\n\r\n\t\tif (this.viewOptions.list_columnSizing) {\r\n\t\t\ti = 0;\r\n\t\t\twidthTaken = 0;\r\n\t\t\t$tr.find('th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar width;\r\n\t\t\t\tif (self.list_columns[i].width !== undefined) {\r\n\t\t\t\t\twidth = self.list_columns[i].width;\r\n\t\t\t\t\t$th.outerWidth(width);\r\n\t\t\t\t\twidthTaken += $th.outerWidth();\r\n\t\t\t\t\tself.list_columns[i]._auto_width = width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n\t\t\t\t\tautomaticallyGeneratedWidths.push({\r\n\t\t\t\t\t\tcol: $th,\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tminWidth: outerWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\r\n\t\t\tlength = automaticallyGeneratedWidths.length;\r\n\t\t\tif (length > 0) {\r\n\t\t\t\tvar canvasWidth = this.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n\t\t\t\tnewWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n\t\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t\tif (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n\t\t\t\t\t\tnewWidth = automaticallyGeneratedWidths[i].minWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tautomaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n\t\t\t\t\tthis.list_columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar specialBrowserClass = function specialBrowserClass () {\r\n\t\tvar ua = window.navigator.userAgent;\r\n\t\tvar msie = ua.indexOf('MSIE ');\r\n\t\tvar firefox = ua.indexOf('Firefox');\r\n\r\n\t\tif (msie > 0 ) {\r\n\t\t\treturn 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n\t\t} else if (firefox > 0) {\r\n\t\t\treturn 'firefox';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t};\r\n\r\n\tvar toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n\t\tvar selectedSelector = '.repeater-list-wrapper > table .selected';\r\n\t\tvar $actionsColumn = this.$element.find('.table-actions');\r\n\t\tvar $selected;\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'action') {\r\n\t\t\tselectedSelector = '.repeater-list-wrapper > table tr';\r\n\t\t}\r\n\r\n\t\t$selected = this.$canvas.find( selectedSelector );\r\n\r\n\t\tif ($selected.length > 0) {\r\n\t\t\t$actionsColumn.find('thead .btn').removeAttr('disabled');\r\n\t\t} else {\r\n\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t}\r\n\t};\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-thumbnail',[\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/browser\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/query\",\r\n    \"./repeater\"\r\n], function(langx, browser, eventer, noder, geom, $) {\r\n\r\n    /*\r\n     * Fuel UX Checkbox\r\n     * https://github.com/ExactTarget/fuelux\r\n     *\r\n     * Copyright (c) 2014 ExactTarget\r\n     * Licensed under the BSD New license.\r\n     */\r\n\r\n    if ($.fn.repeater) {\r\n        //ADDITIONAL METHODS\r\n        $.fn.repeater.Constructor.prototype.thumbnail_clearSelectedItems = function() {\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_getSelectedItems = function() {\r\n            var selected = [];\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                selected.push($(this));\r\n            });\r\n            return selected;\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_setSelectedItems = function(items, force) {\r\n            var selectable = this.viewOptions.thumbnail_selectable;\r\n            var self = this;\r\n            var i, $item, l, n;\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemIndex() {\r\n                if (n === items[i].index) {\r\n                    $item = $(this);\r\n                    return false;\r\n                } else {\r\n                    n++;\r\n                }\r\n            }\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemSelector() {\r\n                $item = $(this);\r\n                if ($item.is(items[i].selector)) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n            }\r\n\r\n            function selectItem($itm, select) {\r\n                select = (select !== undefined) ? select : true;\r\n                if (select) {\r\n                    if (!force && selectable !== 'multi') {\r\n                        self.thumbnail_clearSelectedItems();\r\n                    }\r\n\r\n                    $itm.addClass('selected');\r\n                } else {\r\n                    $itm.removeClass('selected');\r\n                }\r\n            }\r\n\r\n            if (!$.isArray(items)) {\r\n                items = [items];\r\n            }\r\n\r\n            if (force === true || selectable === 'multi') {\r\n                l = items.length;\r\n            } else if (selectable) {\r\n                l = (items.length > 0) ? 1 : 0;\r\n            } else {\r\n                l = 0;\r\n            }\r\n\r\n            for (i = 0; i < l; i++) {\r\n                if (items[i].index !== undefined) {\r\n                    $item = $();\r\n                    n = 0;\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\r\n                    if ($item.length > 0) {\r\n                        selectItem($item, items[i].selected);\r\n                    }\r\n\r\n                } else if (items[i].selector) {\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\r\n                }\r\n            }\r\n        };\r\n\r\n        //ADDITIONAL DEFAULT OPTIONS\r\n        $.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n            thumbnail_alignment: 'left',\r\n            thumbnail_infiniteScroll: false,\r\n            thumbnail_itemRendered: null,\r\n            thumbnail_noItemsHTML: 'no items found',\r\n            thumbnail_selectable: false,\r\n            thumbnail_template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        });\r\n\r\n        //EXTENSION DEFINITION\r\n        $.fn.repeater.viewTypes.thumbnail = {\r\n            selected: function() {\r\n                var infScroll = this.viewOptions.thumbnail_infiniteScroll;\r\n                var opts;\r\n                if (infScroll) {\r\n                    opts = (typeof infScroll === 'object') ? infScroll : {};\r\n                    this.infiniteScrolling(true, opts);\r\n                }\r\n            },\r\n            before: function(helpers) {\r\n                var alignment = this.viewOptions.thumbnail_alignment;\r\n                var $cont = this.$canvas.find('.repeater-thumbnail-cont');\r\n                var data = helpers.data;\r\n                var response = {};\r\n                var $empty, validAlignments;\r\n\r\n                if ($cont.length < 1) {\r\n                    $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\r\n                    if (alignment && alignment !== 'none') {\r\n                        validAlignments = {\r\n                            'center': 1,\r\n                            'justify': 1,\r\n                            'left': 1,\r\n                            'right': 1\r\n                        };\r\n                        alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                        $cont.addClass('align-' + alignment);\r\n                        this.thumbnail_injectSpacers = true;\r\n                    } else {\r\n                        this.thumbnail_injectSpacers = false;\r\n                    }\r\n                    response.item = $cont;\r\n                } else {\r\n                    response.action = 'none';\r\n                }\r\n\r\n                if (data.items && data.items.length < 1) {\r\n                    $empty = $('<div class=\"empty\"></div>');\r\n                    $empty.append(this.viewOptions.thumbnail_noItemsHTML);\r\n                    $cont.append($empty);\r\n                } else {\r\n                    $cont.find('.empty:first').remove();\r\n                }\r\n\r\n                return response;\r\n            },\r\n            renderItem: function(helpers) {\r\n                var selectable = this.viewOptions.thumbnail_selectable;\r\n                var selected = 'selected';\r\n                var self = this;\r\n                var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.viewOptions.thumbnail_template));\r\n\r\n                $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n                if (selectable) {\r\n                    $thumbnail.addClass('selectable');\r\n                    $thumbnail.on('click', function() {\r\n                        if (self.isDisabled) return;\r\n\r\n                        if (!$thumbnail.hasClass(selected)) {\r\n                            if (selectable !== 'multi') {\r\n                                self.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                                    var $itm = $(this);\r\n                                    $itm.removeClass(selected);\r\n                                    self.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\r\n                                });\r\n                            }\r\n\r\n                            $thumbnail.addClass(selected);\r\n                            self.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\r\n                        } else {\r\n                            $thumbnail.removeClass(selected);\r\n                            self.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                helpers.container.append($thumbnail);\r\n                if (this.thumbnail_injectSpacers) {\r\n                    $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n                }\r\n\r\n                if (this.viewOptions.thumbnail_itemRendered) {\r\n                    this.viewOptions.thumbnail_itemRendered({\r\n                        container: helpers.container,\r\n                        item: $thumbnail,\r\n                        itemData: helpers.subset[helpers.index]\r\n                    }, function() {});\r\n                }\r\n\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n\r\n    //ADDITIONAL METHODS\r\n    function fillTemplate(itemData, template) {\r\n        var invalid = false;\r\n\r\n        function replace() {\r\n            var end, start, val;\r\n\r\n            start = template.indexOf('{{');\r\n            end = template.indexOf('}}', start + 2);\r\n\r\n            if (start > -1 && end > -1) {\r\n                val = langx.trim(template.substring(start + 2, end));\r\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                template = template.substring(0, start) + val + template.substring(end + 2);\r\n            } else {\r\n                invalid = true;\r\n            }\r\n        }\r\n\r\n        while (!invalid && template.search('{{') >= 0) {\r\n            replace(template);\r\n        }\r\n\r\n        return template;\r\n    }\r\n\r\n});\ndefine('skylark-ui-repeater/main',[\r\n    \"skylark-utils/query\",\r\n    \"./repeater\",\r\n    \"./repeater-list\",\r\n    \"./repeater-thumbnail\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-ui-repeater', ['skylark-ui-repeater/main'], function (main) { return main; });\n\n"]}