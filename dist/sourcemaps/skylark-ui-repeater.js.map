{"version":3,"sources":["skylark-ui-repeater.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","elmx","$","plugins","ui","old","fn","repeater","Repeater","Plugin","inherit","klassName","init","element","options","$btn","currentView","self","this","$element","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","e","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","mixin","defaults","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewOptions","viewType","selectlist","combobox","search","searchOnKeyPress","allowCancel","value","trigger","render","clearInfinite","proxy","next","previous","evt","data","pageInputChange","text","val","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","loader","defaultView","length","setViewOptions","initViewTypes","changeView","clear","opts","preserve","scan","empty","undefined","viewTypeObj","viewTypes","cleared","call","clearPreservedDataSourceOptions","destroy","markup","each","attr","outerHTML","infinitescroll","remove","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","returnOptions","view","pageIndex","filter","pageSize","searchValue","addViewTypeData","dataOptions","infiniteScrolling","footer","viewport","end","dataSource","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","page","pages","NaN","initInfiniteScrolling","helpers","callback","key","hasOwnProperty","push","initViewType","itemization","count","start","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropPagingCap","dropMenu","i","l","append","is","focus","prevView","split","selected","syncViewButtonState","beforeRender","repeaterPrototypeContext","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","staticHeight","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","curView","viewName","views","$selected","target","parents","$itemToCheck","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","prototype","runRenderer","option","methodReturn","args","Array","arguments","$set","$this","apply","items","Constructor","noConflict","list_clearSelectedItems","list_highlightColumn","force","tbody","list_highlightSortedColumn","col","parent","list_getSelectedItems","$item","getValue","list_positionHeadings","$wrapper","offsetLeft","offset","left","scrollLeft","$heading","list_setSelectedItems","itms","selectable","list_selectable","isArray","checkIfItemMatchesValue","rowIndex","property","selectItem","$itm","slct","$frozenCols","select","list_frozenColumns","list_actions","prepend","list_sizeHeadings","$table","$th","list_setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","list_sizeFrozenColumns","click","list_positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","list_createItemActions","actionsHtml","$actionsTable","name","actionsDropdown","$actionsColumnWrapper","list_actions_width","$actionsColumn","label","$actionsCells","rowNumber","list_sizeActionsTable","actionName","row","rows","list_getActionItems","selector","selectorIndex","selectedObj","actionObj","grep","actions","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","list_frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","type","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","list_revertingCheckbox","preventDefault","currentTarget","numSelected","list_columnRendered","list_columnSizing","list_columnSyncing","list_infiniteScroll","list_noItemsHTML","list_sortClearing","list_rowRendered","list","list_sortDirection","sortDirection","list_sortProperty","sortProperty","toggleActionsHeaderButton","list_specialBrowserClass","specialBrowserClass","list_noItems","sizeColumns","infScroll","list_firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","add","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","list_columns","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","j","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","thumbnail_clearSelectedItems","thumbnail_getSelectedItems","thumbnail_setSelectedItems","n","thumbnail_selectable","compareItemIndex","compareItemSelector","thumbnail_alignment","thumbnail_infiniteScroll","thumbnail_itemRendered","thumbnail_noItemsHTML","thumbnail_template","thumbnail","alignment","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","itemData","template","invalid","replace","trim","fillTemplate","main"],"mappings":"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","file":"../skylark-ui-repeater.js","sourcesContent":["define('skylark-ui-repeater/repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-fuelux/loader\",\r\n  \"skylark-fuelux/selectlist\",\r\n  \"skylark-fuelux/combobox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,plugins){\r\n\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\r\n\t/*\r\n\t * Repeater\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tvar old = $.fn.repeater;\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = ui.Repeater = plugins.Plugin.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tinit : function(element,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\tthis.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.selectlist();\r\n\t\t\tthis.$pageSize.selectlist();\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox();\r\n\t\t\tthis.$search.search({\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.fu.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.fu.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.fu.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.fu.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.fu.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\tthis.$loader.loader();\r\n\t\t\tthis.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'list';\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewOptions(currentView);\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').combobox('destroy');\r\n\t\t\tthis.$element.find('.selectlist').selectlist('destroy');\r\n\t\t\tthis.$element.find('.search').search('destroy');\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.fu.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('disable');\r\n\t\t\tthis.$filters.selectlist('disable');\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('disable');\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('enable');\r\n\t\t\tthis.$filters.selectlist('enable');\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('enable');\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.combobox('disable');\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.selectlist('selectedItem');\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.selectlist('selectedItem').value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypes.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.fu.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.viewOptions.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\t\t\t\tthis.setViewOptions(this.currentView);\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.fu.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\tthis.$loader.show().loader('play');\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.viewOptions.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.viewOptions.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.viewOptions.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.viewType) {\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem.call(this, {\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render.call(this, {\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\tthis.$loader.hide().loader('pause');\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.fu.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\t// For backwards compatibility.\r\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\r\n\r\n\t// REPEATER PLUGIN DEFINITION\r\n\r\n\t$.fn.repeater = function fnrepeater (option) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\tvar methodReturn;\r\n\r\n\t\tvar $set = this.each(function eachThis () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('fu.repeater');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('fu.repeater', (data = new Repeater(this, options)));\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof option === 'string') {\r\n\t\t\t\tmethodReturn = data[option].apply(data, args);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\r\n\t};\r\n\r\n\t$.fn.repeater.defaults = {\r\n\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t},\r\n\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\tdropPagingCap: 10,\r\n\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\tsearchOnKeyPress: false,\r\n\t\tallowCancel: true\r\n\t};\r\n\r\n\t$.fn.repeater.viewTypes = {};\r\n\r\n\t$.fn.repeater.Constructor = Repeater;\r\n\r\n\t$.fn.repeater.noConflict = function noConflict () {\r\n\t\t$.fn.repeater = old;\r\n\t\treturn this;\r\n\t};\r\n\r\n\r\n\treturn $.fn.repeater;\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-list',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./repeater\"\r\n],function(langx,browser,eventer,noder,geom,$){\r\n\r\n\t/*\r\n\t * Fuel UX Checkbox\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tif ($.fn.repeater) {\r\n\t\t// ADDITIONAL METHODS\r\n\t\t$.fn.repeater.Constructor.prototype.list_clearSelectedItems = function listClearSelectedItems () {\r\n\t\t\tthis.$canvas.find('.repeater-list-check').remove();\r\n\t\t\tthis.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_highlightColumn = function listHighlightColumn (index, force) {\r\n\t\t\tvar tbody = this.$canvas.find('.repeater-list-wrapper > table tbody');\r\n\t\t\tif (this.viewOptions.list_highlightSortedColumn || force) {\r\n\t\t\t\ttbody.find('td.sorted').removeClass('sorted');\r\n\t\t\t\ttbody.find('tr').each(function eachTR () {\r\n\t\t\t\t\tvar col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n\t\t\t\t\tcol.addClass('sorted');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getSelectedItems = function listGetSelectedItems () {\r\n\t\t\tvar selected = [];\r\n\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n\t\t\t\tvar $item = $(this);\r\n\t\t\t\tselected.push({\r\n\t\t\t\t\tdata: $item.data('item_data'),\r\n\t\t\t\t\telement: $item\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn selected;\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.getValue = $.fn.repeater.Constructor.prototype.list_getSelectedItems;\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionHeadings = function listPositionHeadings () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-list-wrapper');\r\n\t\t\tvar offsetLeft = $wrapper.offset().left;\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\tvar $heading = $(this);\r\n\t\t\t\t\tvar left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n\t\t\t\t\t$heading.addClass('shifted').css('left', left);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\t$(this).removeClass('shifted').css('left', '');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setSelectedItems = function listSetSelectedItems (itms, force) {\r\n\t\t\tvar selectable = this.viewOptions.list_selectable;\r\n\t\t\tvar self = this;\r\n\t\t\tvar data;\r\n\t\t\tvar i;\r\n\t\t\tvar $item;\r\n\t\t\tvar length;\r\n\r\n\t\t\tvar items = itms;\r\n\t\t\tif (!$.isArray(items)) {\r\n\t\t\t\titems = [items];\r\n\t\t\t}\r\n\r\n\t\t\t// this function is necessary because lint yells when a function is in a loop\r\n\t\t\tvar checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n\t\t\t\t$item = $(this);\r\n\r\n\t\t\t\tdata = $item.data('item_data') || {};\r\n\t\t\t\tif (data[items[i].property] === items[i].value) {\r\n\t\t\t\t\tselectItem($item, items[i].selected, rowIndex);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar selectItem = function selectItem ($itm, slct, index) {\r\n\t\t\t\tvar $frozenCols;\r\n\r\n\t\t\t\tvar select = (slct !== undefined) ? slct : true;\r\n\t\t\t\tif (select) {\r\n\t\t\t\t\tif (!force && selectable !== 'multi') {\r\n\t\t\t\t\t\tself.list_clearSelectedItems();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$itm.hasClass('selected')) {\r\n\t\t\t\t\t\t$itm.addClass('selected');\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns) {\r\n\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$itm.find('.repeater-list-check').remove();\r\n\t\t\t\t\t$itm.removeClass('selected');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (force === true || selectable === 'multi') {\r\n\t\t\t\tlength = items.length;\r\n\t\t\t} else if (selectable) {\r\n\t\t\t\tlength = (items.length > 0) ? 1 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tlength = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\tif (items[i].index !== undefined) {\r\n\t\t\t\t\t$item = this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n\t\t\t\t\tif ($item.length > 0) {\r\n\t\t\t\t\t\tselectItem($item, items[i].selected, items[i].index);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n\t\t\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeHeadings = function listSizeHeadings () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list table');\r\n\t\t\t$table.find('thead th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar $heading = $th.find('.repeater-list-heading');\r\n\t\t\t\t$heading.css({ height: $th.outerHeight() });\r\n\t\t\t\t$heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setFrozenColumns = function listSetFrozenColumns () {\r\n\t\t\tvar frozenTable = this.$canvas.find('.table-frozen');\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar repeaterWrapper = this.$element.find('.repeater-list');\r\n\t\t\tvar numFrozenColumns = this.viewOptions.list_frozenColumns;\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\tnumFrozenColumns = numFrozenColumns + 1;\r\n\t\t\t\t$wrapper.addClass('multi-select-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tif (frozenTable.length < 1) {\r\n\t\t\t\t// setup frozen column markup\r\n\t\t\t\t// main wrapper and remove unneeded columns\r\n\t\t\t\tvar $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n\t\t\t\tvar $frozenColumn = $table.clone().addClass('table-frozen');\r\n\t\t\t\t$frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n\t\t\t\t$frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n\t\t\t\t// need to set absolute heading for vertical scrolling\r\n\t\t\t\tvar $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n\t\t\t\t$frozenThead.find('tbody').remove();\r\n\t\t\t\tvar $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n\t\t\t\t// this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n\t\t\t\t// attribs are unique for the 'top most' cloned checkbox\r\n\t\t\t\tvar $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n\t\t\t\t$checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n\t\t\t\t$frozenColumnWrapper.append($frozenColumn);\r\n\t\t\t\trepeaterWrapper.append($frozenTheadWrapper);\r\n\t\t\t\tthis.$canvas.addClass('frozen-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeFrozenColumns();\r\n\r\n\t\t\t$('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n\t\t\t\tvar index = $(this).parent('th').index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tself.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionColumns = function listPositionColumns () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar scrollTop = $wrapper.scrollTop();\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tvar frozenEnabled = this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi';\r\n\t\t\tvar actionsEnabled = this.viewOptions.list_actions;\r\n\r\n\t\t\tvar canvasWidth = this.$element.find('.repeater-canvas').outerWidth();\r\n\t\t\tvar tableWidth = this.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n\t\t\tvar actionsWidth = this.$element.find('.table-actions') ? this.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n\t\t\tvar shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n\t\t\tif (scrollTop > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', '0');\r\n\t\t\t}\r\n\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled && shouldScroll) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', '0');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_createItemActions = function listCreateItemActions () {\r\n\t\t\tvar actionsHtml = '';\r\n\t\t\tvar self = this;\r\n\t\t\tvar i;\r\n\t\t\tvar length;\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar $actionsTable = this.$canvas.find('.table-actions');\r\n\r\n\t\t\tfor (i = 0, length = this.viewOptions.list_actions.items.length; i < length; i++) {\r\n\t\t\t\tvar action = this.viewOptions.list_actions.items[i];\r\n\t\t\t\tvar html = action.html;\r\n\r\n\t\t\t\tactionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n\t\t\t}\r\n\r\n\t\t\tvar actionsDropdown = '<div class=\"btn-group\">' +\r\n\t\t\t\t'<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n\t\t\t\t'<span class=\"caret\"></span>' +\r\n\t\t\t\t'</button>' +\r\n\t\t\t\t'<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n\t\t\t\tactionsHtml +\r\n\t\t\t\t'</ul></div>';\r\n\r\n\t\t\tif ($actionsTable.length < 1) {\r\n\t\t\t\tvar $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.list_actions_width + 'px\"></div>').insertBefore($table);\r\n\t\t\t\tvar $actionsColumn = $table.clone().addClass('table-actions');\r\n\t\t\t\t$actionsColumn.find('th:not(:last-child)').remove();\r\n\t\t\t\t$actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n\t\t\t\t// Dont show actions dropdown in header if not multi select\r\n\t\t\t\tif (this.viewOptions.list_selectable === 'multi' || this.viewOptions.list_selectable === 'action') {\r\n\t\t\t\t\t$actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n\t\t\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t\t\t// disable the header dropdown until an item is selected\r\n\t\t\t\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar label = this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>';\r\n\t\t\t\t\t$actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create Actions dropdown for each cell in actions table\r\n\t\t\t\tvar $actionsCells = $actionsColumn.find('td');\r\n\r\n\t\t\t\t$actionsCells.each(function addActionsDropdown (rowNumber) {\r\n\t\t\t\t\t$(this).html(actionsDropdown);\r\n\t\t\t\t\t$(this).find('a').attr('data-row', rowNumber + 1);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$actionsColumnWrapper.append($actionsColumn);\r\n\r\n\t\t\t\tthis.$canvas.addClass('actions-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeActionsTable();\r\n\r\n\t\t\t// row level actions click\r\n\t\t\tthis.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar row = $(this).data('row');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: [row]\r\n\t\t\t\t\t};\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// bulk actions click\r\n\t\t\tthis.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: []\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar selector = '.repeater-list-wrapper > table .selected';\r\n\r\n\t\t\t\t\tif ( self.viewOptions.list_selectable === 'action' ) {\r\n\t\t\t\t\t\tselector = '.repeater-list-wrapper > table tr';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n\t\t\t\t\t\tselected.rows.push(selectorIndex + 1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getActionItems = function listGetActionItems (selected, e) {\r\n\t\t\tvar selectedObj = [];\r\n\t\t\tvar actionObj = $.grep(this.viewOptions.list_actions.items, function matchedActions (actions) {\r\n\t\t\t\treturn actions.name === selected.actionName;\r\n\t\t\t})[0];\r\n\t\t\tfor (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n\t\t\t\tvar clickedRow = this.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n\t\t\t\tselectedObj.push({\r\n\t\t\t\t\titem: clickedRow,\r\n\t\t\t\t\trowData: clickedRow.data('item_data')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (selectedObj.length === 1) {\r\n\t\t\t\tselectedObj = selectedObj[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (actionObj.clickAction) {\r\n\t\t\t\tvar callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n\t\t\t\tactionObj.clickAction(selectedObj, callback, e);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeActionsTable = function listSizeActionsTable () {\r\n\t\t\tvar $actionsTable = this.$element.find('.repeater-list table.table-actions');\r\n\t\t\tvar $actionsTableHeader = $actionsTable.find('thead tr th');\r\n\t\t\tvar $table = this.$element.find('.repeater-list-wrapper > table');\r\n\r\n\t\t\t$actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n\t\t\t$actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n\t\t\t$actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n\t\t\t\t$(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeFrozenColumns = function listSizeFrozenColumns () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n\t\t\tthis.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n\t\t\t\t$(this).height($table.find('tr:eq(' + i + ')').height());\r\n\t\t\t});\r\n\r\n\t\t\tvar columnWidth = $table.find('td:eq(0)').outerWidth();\r\n\t\t\tthis.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_frozenOptionsInitialize = function listFrozenOptionsInitialize () {\r\n\t\t\tvar $checkboxes = this.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n\t\t\tvar $headerCheckbox = this.$element.find('.header-checkbox .checkbox-custom');\r\n\t\t\tvar $everyTable = this.$element.find('.repeater-list table');\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t// Make sure if row is hovered that it is shown in frozen column as well\r\n\t\t\tthis.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n\t\t\t\tvar index = $(this).index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tif (e.type === 'mouseover') {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$headerCheckbox.checkbox();\r\n\t\t\t$checkboxes.checkbox();\r\n\r\n\t\t\t// Row checkboxes\r\n\t\t\tvar $rowCheckboxes = this.$element.find('.table-frozen tbody .checkbox-inline');\r\n\t\t\tvar $checkAll = this.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n\t\t\t$rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar row = $(this).attr('data-row');\r\n\t\t\t\t\t\trow = parseInt(row, 10) + 1;\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n\t\t\t\t\t\tvar numSelected = self.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n\t\t\t\t\t\tif (numSelected === 0) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else if (numSelected === $rowCheckboxes.length) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', true);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// \"Check All\" checkbox\r\n\t\t\t$checkAll.on('change', function onChangeCheckAll (e) {\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else if ($(this).is(':checked')) {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n\t\t\t\t\t\tself.$element.trigger('selected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n\t\t\t\t\t\tself.$element.trigger('deselected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction revertCheckbox ($checkbox) {\r\n\t\t\t\tself.list_revertingCheckbox = true;\r\n\t\t\t\t$checkbox.checkbox('toggle');\r\n\t\t\t\tdelete self.list_revertingCheckbox;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// ADDITIONAL DEFAULT OPTIONS\r\n\t\t$.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n\t\t\tlist_columnRendered: null,\r\n\t\t\tlist_columnSizing: true,\r\n\t\t\tlist_columnSyncing: true,\r\n\t\t\tlist_highlightSortedColumn: true,\r\n\t\t\tlist_infiniteScroll: false,\r\n\t\t\tlist_noItemsHTML: 'no items found',\r\n\t\t\tlist_selectable: false,\r\n\t\t\tlist_sortClearing: false,\r\n\t\t\tlist_rowRendered: null,\r\n\t\t\tlist_frozenColumns: 0,\r\n\t\t\tlist_actions: false\r\n\t\t});\r\n\r\n\t\t// EXTENSION DEFINITION\r\n\t\t$.fn.repeater.viewTypes.list = {\r\n\t\t\tcleared: function cleared () {\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdataOptions: function dataOptions (options) {\r\n\t\t\t\tif (this.list_sortDirection) {\r\n\t\t\t\t\toptions.sortDirection = this.list_sortDirection;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.list_sortProperty) {\r\n\t\t\t\t\toptions.sortProperty = this.list_sortProperty;\r\n\t\t\t\t}\r\n\t\t\t\treturn options;\r\n\t\t\t},\r\n\t\t\tenabled: function enabled (helpers) {\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tif (!helpers.status) {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n\t\t\t\t\t\ttoggleActionsHeaderButton.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinitialize: function initialize (helpers, callback) {\r\n\t\t\t\tthis.list_sortDirection = null;\r\n\t\t\t\tthis.list_sortProperty = null;\r\n\t\t\t\tthis.list_specialBrowserClass = specialBrowserClass();\r\n\t\t\t\tthis.list_actions_width = (this.viewOptions.list_actions.width !== undefined) ? this.viewOptions.list_actions.width : 37;\r\n\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\tcallback();\r\n\t\t\t},\r\n\t\t\tresize: function resize () {\r\n\t\t\t\tsizeColumns.call(this, this.$element.find('.repeater-list-wrapper > table thead tr'));\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\tthis.list_sizeFrozenColumns();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselected: function selected () {\r\n\t\t\t\tvar infScroll = this.viewOptions.list_infiniteScroll;\r\n\t\t\t\tvar opts;\r\n\r\n\t\t\t\tthis.list_firstRender = true;\r\n\t\t\t\tthis.$loader.addClass('noHeader');\r\n\r\n\t\t\t\tif (infScroll) {\r\n\t\t\t\t\topts = (typeof infScroll === 'object') ? infScroll : {};\r\n\t\t\t\t\tthis.infiniteScrolling(true, opts);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbefore: function before (helpers) {\r\n\t\t\t\tvar $listContainer = helpers.container.find('.repeater-list');\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar $table;\r\n\r\n\t\t\t\t// this is a patch, it was pulled out of `renderThead`\r\n\t\t\t\tif (helpers.data.count > 0) {\r\n\t\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.list_noItems = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($listContainer.length < 1) {\r\n\t\t\t\t\t$listContainer = $('<div class=\"repeater-list ' + this.list_specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n\t\t\t\t\t$listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\tif (self.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\t\t\tself.list_positionHeadings();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_actions || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\thelpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\t\tself.list_positionColumns();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thelpers.container.append($listContainer);\r\n\t\t\t\t}\r\n\t\t\t\thelpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n\t\t\t\t$table = $listContainer.find('table');\r\n\t\t\t\trenderThead.call(this, $table, helpers.data);\r\n\t\t\t\trenderTbody.call(this, $table, helpers.data);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\trenderItem: function renderItem (helpers) {\r\n\t\t\t\trenderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tafter: function after () {\r\n\t\t\t\tvar $sorted;\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_setFrozenColumns();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_actions && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_createItemActions();\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_actions || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_positionColumns();\r\n\t\t\t\t\tthis.list_frozenOptionsInitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t\tthis.list_positionHeadings();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$sorted = this.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n\t\t\t\tif ($sorted.length > 0) {\r\n\t\t\t\t\tthis.list_highlightColumn($sorted.data('fu_item_index'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// ADDITIONAL METHODS\r\n\tvar areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n\t\tif (!newCols) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!oldCols || (newCols.length !== oldCols.length)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n\t\t\tif (!oldCols[i]) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var j in newCols[i]) {\r\n\t\t\t\tif (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tvar renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n\t\tvar className = columns[columnIndex].className;\r\n\t\tvar content = rows[rowIndex][columns[columnIndex].property];\r\n\t\tvar $col = $('<td></td>');\r\n\t\tvar width = columns[columnIndex]._auto_width;\r\n\r\n\t\tvar property = columns[columnIndex].property;\r\n\t\tif (this.viewOptions.list_actions !== false && property === '@_ACTIONS_@') {\r\n\t\t\tcontent = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.list_actions_width  + 'px\"></div>';\r\n\t\t}\r\n\r\n\t\tcontent = (content !== undefined) ? content : '';\r\n\r\n\t\t$col.addClass(((className !== undefined) ? className : '')).append(content);\r\n\t\tif (width !== undefined) {\r\n\t\t\t$col.outerWidth(width);\r\n\t\t}\r\n\r\n\t\t$row.append($col);\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n\t\t\tvar checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n\t\t\t$col.html(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\treturn $col;\r\n\t};\r\n\r\n\tvar renderHeader = function renderHeader ($tr, columns, index) {\r\n\t\tvar chevDown = 'glyphicon-chevron-down';\r\n\t\tvar chevron = '.glyphicon.rlc:first';\r\n\t\tvar chevUp = 'glyphicon-chevron-up';\r\n\t\tvar $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n\t\tvar checkAllID = (this.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n\t\tvar checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n\t\t\t\t'<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n\t\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n\t\t\t\t\t'<span class=\"checkbox-label\">&nbsp;</span>' +\r\n\t\t\t\t'</label>' +\r\n\t\t\t'</div>';\r\n\r\n\t\tvar $header = $('<th></th>');\r\n\t\tvar self = this;\r\n\t\tvar $both;\r\n\t\tvar className;\r\n\t\tvar sortable;\r\n\t\tvar $span;\r\n\t\tvar $spans;\r\n\r\n\t\t$div.data('fu_item_index', index);\r\n\t\t$div.prepend(columns[index].label);\r\n\t\t$header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n\t\tif (columns[index].property !== '@_CHECKBOX_@') {\r\n\t\t\t$header.append($div);\r\n\t\t} else {\r\n\t\t\t$header.append(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\t$both = $header.add($div);\r\n\t\t$span = $div.find(chevron);\r\n\t\t$spans = $span.add($header.find(chevron));\r\n\r\n\t\tif (this.viewOptions.list_actions && columns[index].property === '@_ACTIONS_@') {\r\n\t\t\tvar width = this.list_actions_width;\r\n\t\t\t$header.css('width', width);\r\n\t\t\t$div.css('width', width);\r\n\t\t}\r\n\r\n\t\tclassName = columns[index].className;\r\n\t\tif (className !== undefined) {\r\n\t\t\t$both.addClass(className);\r\n\t\t}\r\n\r\n\t\tsortable = columns[index].sortable;\r\n\t\tif (sortable) {\r\n\t\t\t$both.addClass('sortable');\r\n\t\t\t$div.on('click.fu.repeaterList', function onClickRepeaterList () {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tself.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t\t\t\tif ($div.hasClass('sorted')) {\r\n\t\t\t\t\t\tif ($span.hasClass(chevUp)) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevUp).addClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'desc';\r\n\t\t\t\t\t\t} else if (!self.viewOptions.list_sortClearing) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$both.removeClass('sorted');\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = null;\r\n\t\t\t\t\t\t\tself.list_sortProperty = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t$both.addClass('sorted');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t$both.addClass('sortable sorted');\r\n\t\t\tif (columns[index].sortDirection === 'asc') {\r\n\t\t\t\t$spans.addClass(chevUp);\r\n\t\t\t\tthis.list_sortDirection = 'asc';\r\n\t\t\t} else {\r\n\t\t\t\t$spans.addClass(chevDown);\r\n\t\t\t\tthis.list_sortDirection = 'desc';\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t}\r\n\r\n\t\t$tr.append($header);\r\n\t};\r\n\r\n\tvar onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n\t\tvar isMulti = repeater.viewOptions.list_selectable === 'multi';\r\n\t\tvar isActions = repeater.viewOptions.list_actions;\r\n\t\tvar $repeater = repeater.$element;\r\n\r\n\t\tif (!repeater.isDisabled) {\r\n\t\t\tvar $item = $(this);\r\n\t\t\tvar index = $(this).index() + 1;\r\n\t\t\tvar $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n\t\t\tif ($item.is('.selected')) {\r\n\t\t\t\t$item.removeClass('selected');\r\n\t\t\t\tif (isMulti) {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$frozenRow.removeClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.removeClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$item.find('.repeater-list-check').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $item);\r\n\t\t\t} else {\r\n\t\t\t\tif (!isMulti) {\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list-check').remove();\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n\t\t\t\t\t\t$(this).removeClass('selected');\r\n\t\t\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $(this));\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.addClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$repeater.trigger('selected.fu.repeaterList', $item);\r\n\t\t\t}\r\n\r\n\t\t\ttoggleActionsHeaderButton.call(repeater);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderRow = function renderRow ($tbody, rows, index) {\r\n\t\tvar $row = $('<tr></tr>');\r\n\r\n\t\tif (this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t$row.addClass('selectable');\r\n\t\t\t\t$row.attr('tabindex', 0);\t// allow items to be tabbed to / focused on\r\n\r\n\t\t\t\tvar repeater = this;\r\n\t\t\t\t$row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\r\n\t\t\t\t\tonClickRowRepeaterList.call(this, repeater);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// allow selection via enter key\r\n\t\t\t\t$row.keyup(function onRowKeyup (e) {\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\t// triggering a standard click event to be caught by the row click handler above\r\n\t\t\t\t\t\t$row.trigger('click.fu.repeaterList');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_actions && !this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\t\t}\r\n\r\n\t\tvar columns = [];\r\n\t\tfor (var i = 0, length = this.list_columns.length; i < length; i++) {\r\n\t\t\tcolumns.push(renderColumn.call(this, $row, rows, index, this.list_columns, i));\r\n\t\t}\r\n\r\n\t\t$tbody.append($row);\r\n\r\n\t\tif (this.viewOptions.list_columnRendered) {\r\n\t\t\tfor (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n\t\t\t\tif (!(this.list_columns[columnIndex].property === '@_CHECKBOX_@' || this.list_columns[columnIndex].property === '@_ACTIONS_@')) {\r\n\t\t\t\t\tthis.viewOptions.list_columnRendered({\r\n\t\t\t\t\t\tcontainer: $row,\r\n\t\t\t\t\t\tcolumnAttr: this.list_columns[columnIndex].property,\r\n\t\t\t\t\t\titem: columns[columnIndex],\r\n\t\t\t\t\t\trowData: rows[index]\r\n\t\t\t\t\t}, function noop () {});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_rowRendered) {\r\n\t\t\tthis.viewOptions.list_rowRendered({\r\n\t\t\t\tcontainer: $tbody,\r\n\t\t\t\titem: $row,\r\n\t\t\t\trowData: rows[index]\r\n\t\t\t}, function noop () {});\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderTbody = function renderTbody ($table, data) {\r\n\t\tvar $tbody = $table.find('tbody');\r\n\t\tvar $empty;\r\n\r\n\t\tif ($tbody.length < 1) {\r\n\t\t\t$tbody = $('<tbody data-container=\"true\"></tbody>');\r\n\t\t\t$table.append($tbody);\r\n\t\t}\r\n\r\n\t\tif (typeof data.error === 'string' && data.error.length > 0) {\r\n\t\t\t$empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(data.error);\r\n\t\t\t$tbody.append($empty);\r\n\t\t} else if (data.items && data.items.length < 1) {\r\n\t\t\t$empty = $('<tr class=\"empty\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(this.viewOptions.list_noItemsHTML);\r\n\t\t\t$tbody.append($empty);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderThead = function renderThead ($table, data) {\r\n\t\tvar columns = data.columns || [];\r\n\t\tvar $thead = $table.find('thead');\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar $tr;\r\n\r\n\t\tif (this.list_firstRender || areDifferentColumns(this.list_columns, columns) || $thead.length === 0) {\r\n\t\t\t$thead.remove();\r\n\r\n\t\t\t// list_noItems is set in `before` method\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\tvar checkboxColumn = {\r\n\t\t\t\t\tlabel: 'c',\r\n\t\t\t\t\tproperty: '@_CHECKBOX_@',\r\n\t\t\t\t\tsortable: false\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.splice(0, 0, checkboxColumn);\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_columns = columns;\r\n\t\t\tthis.list_firstRender = false;\r\n\t\t\tthis.$loader.removeClass('noHeader');\r\n\r\n\t\t\t// keep action column header even when empty, you'll need it later....\r\n\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\tvar actionsColumn = {\r\n\t\t\t\t\tlabel: this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>',\r\n\t\t\t\t\tproperty: '@_ACTIONS_@',\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\twidth: this.list_actions_width\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.push(actionsColumn);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t$thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n\t\t\t$tr = $thead.find('tr');\r\n\t\t\tfor (i = 0, length = columns.length; i < length; i++) {\r\n\t\t\t\trenderHeader.call(this, $tr, columns, i);\r\n\t\t\t}\r\n\t\t\t$table.prepend($thead);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\t// after checkbox column is created need to get width of checkbox column from\r\n\t\t\t\t// its css class\r\n\t\t\t\tvar checkboxWidth = this.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n\t\t\t\tvar selectColumn = $.grep(columns, function grepColumn (column) {\r\n\t\t\t\t\treturn column.property === '@_CHECKBOX_@';\r\n\t\t\t\t})[0];\r\n\t\t\t\tselectColumn.width = checkboxWidth;\r\n\t\t\t}\r\n\t\t\tsizeColumns.call(this, $tr);\r\n\t\t}\r\n\t};\r\n\r\n\tvar sizeColumns = function sizeColumns ($tr) {\r\n\t\tvar automaticallyGeneratedWidths = [];\r\n\t\tvar self = this;\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar newWidth;\r\n\t\tvar widthTaken;\r\n\r\n\t\tif (this.viewOptions.list_columnSizing) {\r\n\t\t\ti = 0;\r\n\t\t\twidthTaken = 0;\r\n\t\t\t$tr.find('th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar width;\r\n\t\t\t\tif (self.list_columns[i].width !== undefined) {\r\n\t\t\t\t\twidth = self.list_columns[i].width;\r\n\t\t\t\t\t$th.outerWidth(width);\r\n\t\t\t\t\twidthTaken += $th.outerWidth();\r\n\t\t\t\t\tself.list_columns[i]._auto_width = width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n\t\t\t\t\tautomaticallyGeneratedWidths.push({\r\n\t\t\t\t\t\tcol: $th,\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tminWidth: outerWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\r\n\t\t\tlength = automaticallyGeneratedWidths.length;\r\n\t\t\tif (length > 0) {\r\n\t\t\t\tvar canvasWidth = this.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n\t\t\t\tnewWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n\t\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t\tif (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n\t\t\t\t\t\tnewWidth = automaticallyGeneratedWidths[i].minWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tautomaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n\t\t\t\t\tthis.list_columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar specialBrowserClass = function specialBrowserClass () {\r\n\t\tvar ua = window.navigator.userAgent;\r\n\t\tvar msie = ua.indexOf('MSIE ');\r\n\t\tvar firefox = ua.indexOf('Firefox');\r\n\r\n\t\tif (msie > 0 ) {\r\n\t\t\treturn 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n\t\t} else if (firefox > 0) {\r\n\t\t\treturn 'firefox';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t};\r\n\r\n\tvar toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n\t\tvar selectedSelector = '.repeater-list-wrapper > table .selected';\r\n\t\tvar $actionsColumn = this.$element.find('.table-actions');\r\n\t\tvar $selected;\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'action') {\r\n\t\t\tselectedSelector = '.repeater-list-wrapper > table tr';\r\n\t\t}\r\n\r\n\t\t$selected = this.$canvas.find( selectedSelector );\r\n\r\n\t\tif ($selected.length > 0) {\r\n\t\t\t$actionsColumn.find('thead .btn').removeAttr('disabled');\r\n\t\t} else {\r\n\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t}\r\n\t};\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-thumbnail',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./repeater\"\r\n], function(langx, browser, eventer, noder, geom, $) {\r\n\r\n    /*\r\n     * Fuel UX Checkbox\r\n     * https://github.com/ExactTarget/fuelux\r\n     *\r\n     * Copyright (c) 2014 ExactTarget\r\n     * Licensed under the BSD New license.\r\n     */\r\n\r\n    if ($.fn.repeater) {\r\n        //ADDITIONAL METHODS\r\n        $.fn.repeater.Constructor.prototype.thumbnail_clearSelectedItems = function() {\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_getSelectedItems = function() {\r\n            var selected = [];\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                selected.push($(this));\r\n            });\r\n            return selected;\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_setSelectedItems = function(items, force) {\r\n            var selectable = this.viewOptions.thumbnail_selectable;\r\n            var self = this;\r\n            var i, $item, l, n;\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemIndex() {\r\n                if (n === items[i].index) {\r\n                    $item = $(this);\r\n                    return false;\r\n                } else {\r\n                    n++;\r\n                }\r\n            }\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemSelector() {\r\n                $item = $(this);\r\n                if ($item.is(items[i].selector)) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n            }\r\n\r\n            function selectItem($itm, select) {\r\n                select = (select !== undefined) ? select : true;\r\n                if (select) {\r\n                    if (!force && selectable !== 'multi') {\r\n                        self.thumbnail_clearSelectedItems();\r\n                    }\r\n\r\n                    $itm.addClass('selected');\r\n                } else {\r\n                    $itm.removeClass('selected');\r\n                }\r\n            }\r\n\r\n            if (!$.isArray(items)) {\r\n                items = [items];\r\n            }\r\n\r\n            if (force === true || selectable === 'multi') {\r\n                l = items.length;\r\n            } else if (selectable) {\r\n                l = (items.length > 0) ? 1 : 0;\r\n            } else {\r\n                l = 0;\r\n            }\r\n\r\n            for (i = 0; i < l; i++) {\r\n                if (items[i].index !== undefined) {\r\n                    $item = $();\r\n                    n = 0;\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\r\n                    if ($item.length > 0) {\r\n                        selectItem($item, items[i].selected);\r\n                    }\r\n\r\n                } else if (items[i].selector) {\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\r\n                }\r\n            }\r\n        };\r\n\r\n        //ADDITIONAL DEFAULT OPTIONS\r\n        $.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n            thumbnail_alignment: 'left',\r\n            thumbnail_infiniteScroll: false,\r\n            thumbnail_itemRendered: null,\r\n            thumbnail_noItemsHTML: 'no items found',\r\n            thumbnail_selectable: false,\r\n            thumbnail_template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        });\r\n\r\n        //EXTENSION DEFINITION\r\n        $.fn.repeater.viewTypes.thumbnail = {\r\n            selected: function() {\r\n                var infScroll = this.viewOptions.thumbnail_infiniteScroll;\r\n                var opts;\r\n                if (infScroll) {\r\n                    opts = (typeof infScroll === 'object') ? infScroll : {};\r\n                    this.infiniteScrolling(true, opts);\r\n                }\r\n            },\r\n            before: function(helpers) {\r\n                var alignment = this.viewOptions.thumbnail_alignment;\r\n                var $cont = this.$canvas.find('.repeater-thumbnail-cont');\r\n                var data = helpers.data;\r\n                var response = {};\r\n                var $empty, validAlignments;\r\n\r\n                if ($cont.length < 1) {\r\n                    $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\r\n                    if (alignment && alignment !== 'none') {\r\n                        validAlignments = {\r\n                            'center': 1,\r\n                            'justify': 1,\r\n                            'left': 1,\r\n                            'right': 1\r\n                        };\r\n                        alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                        $cont.addClass('align-' + alignment);\r\n                        this.thumbnail_injectSpacers = true;\r\n                    } else {\r\n                        this.thumbnail_injectSpacers = false;\r\n                    }\r\n                    response.item = $cont;\r\n                } else {\r\n                    response.action = 'none';\r\n                }\r\n\r\n                if (data.items && data.items.length < 1) {\r\n                    $empty = $('<div class=\"empty\"></div>');\r\n                    $empty.append(this.viewOptions.thumbnail_noItemsHTML);\r\n                    $cont.append($empty);\r\n                } else {\r\n                    $cont.find('.empty:first').remove();\r\n                }\r\n\r\n                return response;\r\n            },\r\n            renderItem: function(helpers) {\r\n                var selectable = this.viewOptions.thumbnail_selectable;\r\n                var selected = 'selected';\r\n                var self = this;\r\n                var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.viewOptions.thumbnail_template));\r\n\r\n                $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n                if (selectable) {\r\n                    $thumbnail.addClass('selectable');\r\n                    $thumbnail.on('click', function() {\r\n                        if (self.isDisabled) return;\r\n\r\n                        if (!$thumbnail.hasClass(selected)) {\r\n                            if (selectable !== 'multi') {\r\n                                self.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                                    var $itm = $(this);\r\n                                    $itm.removeClass(selected);\r\n                                    self.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\r\n                                });\r\n                            }\r\n\r\n                            $thumbnail.addClass(selected);\r\n                            self.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\r\n                        } else {\r\n                            $thumbnail.removeClass(selected);\r\n                            self.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                helpers.container.append($thumbnail);\r\n                if (this.thumbnail_injectSpacers) {\r\n                    $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n                }\r\n\r\n                if (this.viewOptions.thumbnail_itemRendered) {\r\n                    this.viewOptions.thumbnail_itemRendered({\r\n                        container: helpers.container,\r\n                        item: $thumbnail,\r\n                        itemData: helpers.subset[helpers.index]\r\n                    }, function() {});\r\n                }\r\n\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n\r\n    //ADDITIONAL METHODS\r\n    function fillTemplate(itemData, template) {\r\n        var invalid = false;\r\n\r\n        function replace() {\r\n            var end, start, val;\r\n\r\n            start = template.indexOf('{{');\r\n            end = template.indexOf('}}', start + 2);\r\n\r\n            if (start > -1 && end > -1) {\r\n                val = langx.trim(template.substring(start + 2, end));\r\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                template = template.substring(0, start) + val + template.substring(end + 2);\r\n            } else {\r\n                invalid = true;\r\n            }\r\n        }\r\n\r\n        while (!invalid && template.search('{{') >= 0) {\r\n            replace(template);\r\n        }\r\n\r\n        return template;\r\n    }\r\n\r\n});\ndefine('skylark-ui-repeater/main',[\r\n    \"skylark-utils-dom/query\",\r\n    \"./repeater\",\r\n    \"./repeater-list\",\r\n    \"./repeater-thumbnail\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-ui-repeater', ['skylark-ui-repeater/main'], function (main) { return main; });\n\n"]}