{"version":3,"sources":["skylark-ui-repeater.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","elmx","$","Widget","Repeater","inherit","klassName","options","dataSource","callback","count","end","items","page","pages","start","defaultView","dropPagingCap","staticHeight","views","searchOnKeyPress","allowCancel","_init","$btn","currentView","self","this","$element","_elm","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","e","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewOptions","viewType","plugin","value","trigger","render","clearInfinite","proxy","next","previous","evt","data","pageInputChange","text","val","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","length","setViewOptions","initViewTypes","changeView","clear","opts","preserve","scan","empty","undefined","viewTypeObj","fn","repeater","viewTypes","cleared","call","clearPreservedDataSourceOptions","destroy","markup","each","attr","outerHTML","infinitescroll","remove","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","mixin","returnOptions","view","pageIndex","filter","selectedItem","pageSize","searchValue","search","addViewTypeData","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","key","hasOwnProperty","push","initViewType","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","i","l","append","is","focus","prevView","split","selected","syncViewButtonState","_throbber","throb","className","beforeRender","repeaterPrototypeContext","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","curView","viewName","$selected","target","parents","$itemToCheck","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","prototype","runRenderer","option","methodReturn","args","Array","arguments","$set","$this","apply","attach","ViewBase","Evented","controlsClass","fullScreen","init","hasControls","that","initOptions","close","getValue","getSelectedItems","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onopen","onopened","onslide","onslideend","onslidecomplete","onclose","onclosed","log","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","name","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","album","overrided","list","el","num","initStartIndex","initWidget","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","time","interval","elements","animationFrameId","pause","add","concat","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","slides","handleClose","destroyEventListeners","display","overflow","bodyOverflowStyle","closeHandler","dist","translateX","x","y","translateY","from","timer","setInterval","timeElap","left","clearInterval","preventDefault","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","which","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","isValidClose","slideHeight","ontouchcancel","oncomplete","srcElement","parent","parentNode","getNodeIndex","type","clientHeight","maxHeight","onload","onerror","onkeydown","toggleControls","stopImmediatePropagation","toggleSlideshow","handleClick","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","firstChild","title","alt","createTextNode","func","wait","obj","loadElement","proxyListener","limit","min","j","unloadSlide","slidePrototype","cloneNode","setAttribute","reload","imagePrototype","elementPrototype","clientWidth","len","getAttribute","getItemUrl","handleOpen","first","openHandler","ctor","templates","default","slider","CarouselView","LightBoxView","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","getItemTitle","Album","getItemProperty","getElementsByTagName","src","backgroundImage","addIndicator","indicators","setActiveIndicator","activeIndicator","TableView","list_columnRendered","list_columnSizing","list_columnSyncing","list_highlightSortedColumn","list_infiniteScroll","list_noItemsHTML","list_selectable","list_sortClearing","list_rowRendered","list_frozenColumns","list_actions","clearSelectedItems","highlightColumn","force","tbody","col","$item","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","setSelectedItems","itms","selectable","isArray","checkIfItemMatchesValue","rowIndex","property","selectItem","$itm","slct","$frozenCols","select","list_clearSelectedItems","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","list_sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","actionsDropdown","$actionsColumnWrapper","list_actions_width","$actionsColumn","label","$actionsCells","rowNumber","list_sizeActionsTable","actionName","row","rows","list_getActionItems","selector","selectorIndex","getActionItems","selectedObj","actionObj","grep","actions","selectedRowsL","clickedRow","rowData","clickAction","sizeActionsTable","$actionsTableHeader","sizeFrozenColumns","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","list_revertingCheckbox","currentTarget","numSelected","list_sizeHeadings","list_sortDirection","sortDirection","list_sortProperty","sortProperty","toggleActionsHeaderButton","list_specialBrowserClass","specialBrowserClass","list_noItems","sizeColumns","infScroll","list_firstRender","$listContainer","list_positionHeadings","list_positionColumns","renderThead","renderTbody","renderRow","$sorted","list_setFrozenColumns","list_createItemActions","list_frozenOptionsInitialize","list_highlightColumn","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","list_columns","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","TileView","alignment","infiniteScroll","itemRendered","noItemsHTML","template","n","compareItemIndex","compareItemSelector","thumbnail_clearSelectedItems","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","itemData","invalid","replace","trim","fillTemplate","main"],"mappings":"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","file":"../skylark-ui-repeater.js","sourcesContent":["define('skylark-ui-repeater/Repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-ui-swt/Widget\",\r\n  \"skylark-ui-swt/SelectList\",\r\n  \"skylark-ui-swt/ComboBox\",\r\n  \"skylark-ui-swt/SearchBox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,Widget){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true\r\n\t\t},\r\n\r\n//\t\t_init : function(element,options) {\r\n\t\t_init : function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.fu.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.fu.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.fu.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.fu.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.fu.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'list';\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewOptions(currentView);\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').plugin(\"lark.combobox\").destroy();\r\n\t\t\tthis.$element.find('.selectlist').plugin(\"lark.selectlist\").destroy();\r\n\t\t\tthis.$element.find('.search').plugin(\"lark.searchbox\").destroy();\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.fu.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").disable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").disable();\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").enable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").enable();\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.plugin(\"lark.combobox\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable();\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"lark.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"lark.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypes.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.fu.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.viewOptions.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\t\t\t\tthis.setViewOptions(this.currentView);\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.fu.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"loader\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.viewOptions.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.viewOptions.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.viewOptions.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.viewType) {\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem.call(this, {\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render.call(this, {\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\t//this.$loader.hide().loader('pause');\r\n\t\tif (this._throbber) {\r\n\t\t\tthis._throbber.remove();\r\n\t\t\tthis._throbber = null;\r\n\t\t}\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.fu.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\t// For backwards compatibility.\r\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\r\n\r\n\t// REPEATER PLUGIN DEFINITION\r\n\r\n\t$.fn.repeater = function fnrepeater (option) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\tvar methodReturn;\r\n\r\n\t\tvar $set = this.each(function eachThis () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('fu.repeater');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('fu.repeater', (data = new Repeater(this, options)));\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof option === 'string') {\r\n\t\t\t\tmethodReturn = data[option].apply(data, args);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\r\n\t};\r\n\r\n\r\n\t$.fn.repeater.viewTypes = {};\r\n\r\n\r\n\treturn skylark.attach(\"ui.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/views',[\r\n\t\"./Repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.views = {};\r\n});\ndefine('skylark-ui-repeater/views/ViewBase',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"../views\",\t\r\n],function(langx,noder,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t  // Defines if the gallery should open in fullscreen mode:\r\n\t\t  fullScreen: false\r\n\r\n\t    },\r\n\t    \r\n\t\tinit : function (repeater,options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.repeater = repeater;\r\n\t\t\tthis.initOptions(options);\r\n\t        if (this.options.fullScreen) {\r\n\t          noder.fullScreen(this.container[0]);\r\n\t        }\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (that.container.hasClass(that.options.controlsClass)) {\r\n\t              hasControls = true\r\n\t              that.container.removeClass(that.options.controlsClass);\r\n\t            } else {\r\n\t              hasControls = false\r\n\t            }\r\n\t        });\r\n\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (hasControls) {\r\n\t              that.container.addClass(that.options.controlsClass);\r\n\t            }\r\n\t        });\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t      // Create a copy of the prototype options:\r\n\t      this.options = langx.mixin({}, this.options,options);\r\n\t    },\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n      \t},\r\n\r\n      \tgetValue : function() {\r\n      \t\treturn this.getSelectedItems();\r\n      \t} \r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-ui-repeater/views/slider',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"../views\", \r\n  \"./ViewBase\"\r\n],function (langx,noder,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the album view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'skylarkui-album-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'skylarkui-album-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'skylarkui-album-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'skylarkui-album-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'skylarkui-album-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: false,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n      // Callback function executed when the Gallery is initialized.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopen: undefined,\r\n      // Callback function executed when the Gallery has been initialized\r\n      // and the initialization transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopened: undefined,\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n      // Callback function executed when the Gallery is about to be closed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclose: undefined,\r\n      // Callback function executed when the Gallery has been closed\r\n      // and the closing transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclosed: undefined\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    console:\r\n      window.console && typeof window.console.log === 'function'\r\n        ? window.console\r\n        : { log: function () {} },\r\n\r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    init: function (album,options){\r\n      this.overrided(album,options);\r\n\r\n      this.list = this.album.items;\r\n      this.options.container = this.album.el;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      if (this.initWidget() === false) {\r\n        return false\r\n      }\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval\r\n      if (this.elements[this.index] > 1) {\r\n        this.timeout = this.setTimeout(\r\n          (!this.requestAnimationFrame && this.slide) ||\r\n            function (to, speed) {\r\n              that.animationFrameId = that.requestAnimationFrame.call(\r\n                window,\r\n                function () {\r\n                  that.slide(to, speed)\r\n                }\r\n              )\r\n            },\r\n          [this.index + 1, this.options.slideshowTransitionSpeed],\r\n          this.interval\r\n        )\r\n      }\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n    },\r\n\r\n    handleClose: function () {\r\n      var options = this.options\r\n      this.destroyEventListeners()\r\n      // Cancel the slideshow:\r\n      this.pause()\r\n      this.container[0].style.display = 'none'\r\n      this.container\r\n        .removeClass(options.displayClass)\r\n        .removeClass(options.singleClass)\r\n        .removeClass(options.leftEdgeClass)\r\n        .removeClass(options.rightEdgeClass)\r\n      if (options.hidePageScrollbars) {\r\n        document.body.style.overflow = this.bodyOverflowStyle\r\n      }\r\n      if (this.options.clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      if (this.options.onclosed) {\r\n        this.options.onclosed.call(this)\r\n      }\r\n    },\r\n\r\n    close: function () {\r\n      var that = this\r\n      function closeHandler (event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, closeHandler)\r\n          that.handleClose()\r\n        }\r\n      }\r\n      if (this.options.onclose) {\r\n        this.options.onclose.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, closeHandler)\r\n        this.container.removeClass(this.options.displayClass)\r\n      } else {\r\n        this.handleClose()\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !$.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (isValidClose) {\r\n          this.close()\r\n        } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    oncomplete: function (event) {\r\n      var target = event.target || event.srcElement\r\n      var parent = target && target.parentNode\r\n      var index\r\n      if (!target || !parent) {\r\n        return\r\n      }\r\n      index = this.getNodeIndex(parent)\r\n      $(parent).removeClass(this.options.slideLoadingClass)\r\n      if (event.type === 'error') {\r\n        $(parent).addClass(this.options.slideErrorClass)\r\n        this.elements[index] = 3 // Fail\r\n      } else {\r\n        this.elements[index] = 2 // Done\r\n      }\r\n      // Fix for IE7's lack of support for percentage max-height:\r\n      if (target.clientHeight > this.container[0].clientHeight) {\r\n        target.style.maxHeight = this.container[0].clientHeight\r\n      }\r\n      if (this.interval && this.slides[this.index] === parent) {\r\n        this.play()\r\n      }\r\n      this.setTimeout(this.options.onslidecomplete, [index, parent])\r\n    },\r\n\r\n    onload: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onerror: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          if (this.options.closeOnEscape) {\r\n            this.close()\r\n            // prevent Esc from closing other things\r\n            event.stopImmediatePropagation()\r\n          }\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n      function isTarget (className) {\r\n        return $(target).hasClass(className) || $(parent).hasClass(className)\r\n      }\r\n      if (isTarget(options.toggleClass)) {\r\n        // Click on \"toggle\" control\r\n        this.preventDefault(event)\r\n        this.toggleControls()\r\n      } else if (isTarget(options.prevClass)) {\r\n        // Click on \"prev\" control\r\n        this.preventDefault(event)\r\n        this.prev()\r\n      } else if (isTarget(options.nextClass)) {\r\n        // Click on \"next\" control\r\n        this.preventDefault(event)\r\n        this.next()\r\n      } else if (isTarget(options.closeClass)) {\r\n        // Click on \"close\" control\r\n        this.preventDefault(event)\r\n        this.close()\r\n      } else if (isTarget(options.playPauseClass)) {\r\n        // Click on \"play-pause\" control\r\n        this.preventDefault(event)\r\n        this.toggleSlideshow()\r\n      } else if (parent === this.slidesContainer[0]) {\r\n        // Click on slide background\r\n        if (options.closeOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.close()\r\n        } else if (options.toggleControlsOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        }\r\n      } else if (\r\n        parent.parentNode &&\r\n        parent.parentNode === this.slidesContainer[0]\r\n      ) {\r\n        // Click on displayed element\r\n        if (options.toggleControlsOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var element = this.album.renderItem(obj,callback);\r\n      $(element).addClass(this.options.slideContentClass);\r\n      return element;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).addClass(this.options.slideLoadingClass)\r\n          this.slides[index].appendChild(\r\n            this.createElement(this.list[index], this.proxyListener)\r\n          )\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var album = this.album,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || album.getItemUrl(this.list[i]) ===  album.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n    handleOpen: function () {\r\n      if (this.options.onopened) {\r\n        this.options.onopened.call(this)\r\n      }\r\n    },\r\n\r\n    initWidget: function () {\r\n      var that = this\r\n      function openHandler (event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, openHandler)\r\n          that.handleOpen()\r\n        }\r\n      }\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        this.console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        this.console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.onopen) {\r\n        this.options.onopen.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, openHandler)\r\n      } else {\r\n        this.handleOpen()\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  return views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView,\r\n    \"templates\" : {\r\n      \"default\" : '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"close\">×</a>' + \r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>'\r\n\r\n    } \r\n  };\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/views/carousel',[\r\n  \"../views\",\t\r\n  './slider'\r\n],function (views,slider) {\r\n\r\n\tvar CarouselView = slider.ctor.inherit({\r\n\t\tklassName : \"CarouselView\",\r\n\r\n\t\toptions : {\r\n\t      hidePageScrollbars: false,\r\n\t      toggleControlsOnReturn: false,\r\n\t      toggleSlideshowOnSpace: false,\r\n\t      enableKeyboardNavigation: false,\r\n\t      closeOnEscape: false,\r\n\t      closeOnSlideClick: false,\r\n\t      closeOnSwipeUpOrDown: false,\r\n\t      disableScroll: false,\r\n\t      startSlideshow: true\t\t\t\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t    \tvar options = langx.mixin({},CarouselView.prototype.options,options);\r\n\t\t\tthis.overrided(options);\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views[\"carousel\"] = {\r\n\t\t\"name\" :  \"carousel\",\r\n\t\t\"ctor\" :  CarouselView,\r\n\t\t\"templates\" : {\r\n\t\t\t\"default\" : '<div class=\"slides\"></div>' +\r\n\t\t\t          '<h3 class=\"title\"></h3>' +\r\n\t\t\t          '<a class=\"prev\">‹</a>' +\r\n\t\t\t          '<a class=\"next\">›</a>' +\r\n\t\t\t          '<a class=\"close\">×</a>' + \r\n\t\t\t          '<a class=\"play-pause\"></a>' +\r\n\t\t\t          '<ol class=\"indicator\"></ol>'\r\n\r\n\t\t} \r\n\t};\r\n\r\n});\ndefine('skylark-ui-repeater/views/flipbook',[],function(){\r\n\t// TODO : This module is in developping.\r\n});\ndefine('skylark-ui-repeater/views/lightbox',[\r\n  'skylark-langx/langx',\r\n  \"../views\",\t\r\n  './slider'\r\n],function (langx,views,slider) {\r\n\r\n\tvar LightBoxView = slider.ctor.inherit({\r\n\t\tklassName : \"LightBoxView\",\r\n\t\toptions : {\r\n\t        // Hide the page scrollbars:\r\n\t        hidePageScrollbars: false,\r\n\r\n\t\t    // The tag name, Id, element or querySelector of the indicator container:\r\n\t\t    indicatorContainer: 'ol',\r\n\t\t    // The class for the active indicator:\r\n\t\t    activeIndicatorClass: 'active',\r\n\t\t    // The list object property (or data attribute) with the thumbnail URL,\r\n\t\t    // used as alternative to a thumbnail child element:\r\n\t\t    thumbnailProperty: 'thumbnail',\r\n\t\t    // Defines if the gallery indicators should display a thumbnail:\r\n\t\t    thumbnailIndicators: true\r\n\t\t},\r\n\r\n\r\n\t    initOptions: function (options) {\r\n\t    \tvar options = langx.mixin({},LightBoxView.prototype.options,options);\r\n\t\t\tthis.overrided(options);\r\n\t    },\r\n\r\n\t    createIndicator: function (obj) {\r\n\t      var album = this.album,\r\n\t      \t\tindicator = this.indicatorPrototype.cloneNode(false)\r\n\t      var title = album.getItemTitle(obj)\r\n\t      var thumbnailProperty = this.options.thumbnailProperty\r\n\t      var thumbnailUrl\r\n\t      var thumbnail\r\n\t      if (this.options.thumbnailIndicators) {\r\n\t        if (thumbnailProperty) {\r\n\t          thumbnailUrl = Album.getItemProperty(obj, thumbnailProperty)\r\n\t        }\r\n\t        if (thumbnailUrl === undefined) {\r\n\t          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n\t          if (thumbnail) {\r\n\t            thumbnailUrl = thumbnail.src\r\n\t          }\r\n\t        }\r\n\t        if (thumbnailUrl) {\r\n\t          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n\t        }\r\n\t      }\r\n\t      if (title) {\r\n\t        indicator.title = title;\r\n\t      }\r\n\t      return indicator;\r\n\t    },\r\n\r\n\t    addIndicator: function (index) {\r\n\t      if (this.indicatorContainer.length) {\r\n\t        var indicator = this.createIndicator(this.list[index])\r\n\t        indicator.setAttribute('data-index', index)\r\n\t        this.indicatorContainer[0].appendChild(indicator)\r\n\t        this.indicators.push(indicator)\r\n\t      }\r\n\t    },\r\n\r\n\t    setActiveIndicator: function (index) {\r\n\t      if (this.indicators) {\r\n\t        if (this.activeIndicator) {\r\n\t          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t        }\r\n\t        this.activeIndicator = $(this.indicators[index])\r\n\t        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n\t      }\r\n\t    },\r\n\r\n\t    initSlides: function (reload) {\r\n\t      if (!reload) {\r\n\t        this.indicatorContainer = this.container.find(\r\n\t          this.options.indicatorContainer\r\n\t        )\r\n\t        if (this.indicatorContainer.length) {\r\n\t          this.indicatorPrototype = document.createElement('li')\r\n\t          this.indicators = this.indicatorContainer[0].children\r\n\t        }\r\n\t      }\r\n\t      this.overrided(reload);\r\n\t    },\r\n\r\n\t    addSlide: function (index) {\r\n\t      this.overrided(index);\r\n\t      this.addIndicator(index)\r\n\t    },\r\n\r\n\t    resetSlides: function () {\r\n\t    \tthis.overrided();\r\n\t    \tthis.indicatorContainer.empty();\r\n\t    \tthis.indicators = [];\r\n\t    },\r\n\r\n\t    handleClick: function (event) {\r\n\t      var target = event.target || event.srcElement\r\n\t      var parent = target.parentNode\r\n\t      if (parent === this.indicatorContainer[0]) {\r\n\t        // Click on indicator element\r\n\t        this.preventDefault(event)\r\n\t        this.slide(this.getNodeIndex(target))\r\n\t      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n\t        // Click on indicator child element\r\n\t        this.preventDefault(event)\r\n\t        this.slide(this.getNodeIndex(parent))\r\n\t      } else {\r\n\t        return this.overrided(event)\r\n\t      }\r\n\t    },\r\n\r\n\t    handleSlide: function (index) {\r\n\t      this.overrided(index)\r\n\t      this.setActiveIndicator(index)\r\n\t    },\r\n\r\n\t    handleClose: function () {\r\n\t      if (this.activeIndicator) {\r\n\t        this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t      }\r\n\t      this.overrided();\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views[\"lightbox\"] = {\r\n\t\t\"name\" :  \"lightbox\",\r\n\t\t\"ctor\" :  LightBoxView,\r\n\t\t\"templates\" : {\r\n\t\t\t\"default\" : '<div class=\"slides\"></div>' +\r\n\t\t\t          '<h3 class=\"title\"></h3>' +\r\n\t\t\t          '<a class=\"prev\">‹</a>' +\r\n\t\t\t          '<a class=\"next\">›</a>' +\r\n\t\t\t          '<a class=\"close\">×</a>' + \r\n\t\t\t          '<ol class=\"indicator\"></ol>'\r\n\r\n\t\t} \r\n\t};\r\n\r\n});\ndefine('skylark-ui-repeater/views/masonory',[],function(){\r\n\t// TODO : This module is in developping.\r\n});\ndefine('skylark-ui-repeater/views/table',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        list_columnRendered: null,\r\n        list_columnSizing: true,\r\n        list_columnSyncing: true,\r\n        list_highlightSortedColumn: true,\r\n        list_infiniteScroll: false,\r\n        list_noItemsHTML: 'no items found',\r\n        list_selectable: false,\r\n        list_sortClearing: false,\r\n        list_rowRendered: null,\r\n        list_frozenColumns: 0,\r\n        list_actions: false\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.$canvas.find('.repeater-list-check').remove();\r\n        this.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.$canvas.find('.repeater-list-wrapper > table tbody');\r\n        if (this.viewOptions.list_highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.$element.find('.repeater-list-wrapper');\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.viewOptions.list_selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.list_clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.viewOptions.list_frozenColumns || self.viewOptions.list_selectable === 'multi') {\r\n                        $frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.viewOptions.list_actions) {\r\n                        self.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                }\r\n            } else {\r\n                if (self.viewOptions.list_frozenColumns) {\r\n                    $frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.viewOptions.list_actions) {\r\n                    self.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find('.repeater-list-check').remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.$element.find('.repeater-list table');\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find('.repeater-list-heading');\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.$canvas.find('.table-frozen');\r\n        var $wrapper = this.$element.find('.repeater-canvas');\r\n        var $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var repeaterWrapper = this.$element.find('.repeater-list');\r\n        var numFrozenColumns = this.viewOptions.list_frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.viewOptions.list_selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.list_sizeFrozenColumns();\r\n\r\n        $('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi';\r\n        var actionsEnabled = this.viewOptions.list_actions;\r\n\r\n        var canvasWidth = this.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n        var actionsWidth = this.$element.find('.table-actions') ? this.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var $actionsTable = this.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.viewOptions.list_actions.items.length; i < length; i++) {\r\n            var action = this.viewOptions.list_actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.list_actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.viewOptions.list_selectable === 'multi' || this.viewOptions.list_selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                if (this.viewOptions.list_selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.list_sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.list_getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = '.repeater-list-wrapper > table .selected';\r\n\r\n                if ( self.viewOptions.list_selectable === 'action' ) {\r\n                    selector = '.repeater-list-wrapper > table tr';\r\n                }\r\n                self.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.list_getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.viewOptions.list_actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.$element.find('.repeater-list table.table-actions');\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.$element.find('.repeater-list-wrapper > table');\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n        this.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.$element.find('.repeater-list table');\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.list_revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n                    var numSelected = self.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.list_revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n                    self.$element.trigger('selected.fu.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n                    self.$element.trigger('deselected.fu.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.list_revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.list_revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.viewOptions.list_columnSyncing) {\r\n            this.list_sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.list_sortDirection) {\r\n            options.sortDirection = this.list_sortDirection;\r\n        }\r\n        if (this.list_sortProperty) {\r\n            options.sortProperty = this.list_sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.viewOptions.list_actions) {\r\n            if (!helpers.status) {\r\n                this.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.list_sortDirection = null;\r\n        this.list_sortProperty = null;\r\n        this.list_specialBrowserClass = specialBrowserClass();\r\n        this.list_actions_width = (this.viewOptions.list_actions.width !== undefined) ? this.viewOptions.list_actions.width : 37;\r\n        this.list_noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.$element.find('.repeater-list-wrapper > table thead tr'));\r\n        if (this.viewOptions.list_actions) {\r\n            this.list_sizeActionsTable();\r\n        }\r\n        if (this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') {\r\n            this.list_sizeFrozenColumns();\r\n        }\r\n        if (this.viewOptions.list_columnSyncing) {\r\n            this.list_sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.viewOptions.list_infiniteScroll;\r\n        var opts;\r\n\r\n        this.list_firstRender = true;\r\n        this.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find('.repeater-list');\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.list_noItems = false;\r\n        } else {\r\n            this.list_noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $('<div class=\"repeater-list ' + this.list_specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n            $listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n                if (self.viewOptions.list_columnSyncing) {\r\n                    self.list_positionHeadings();\r\n                }\r\n            });\r\n            if (self.viewOptions.list_frozenColumns || self.viewOptions.list_actions || self.viewOptions.list_selectable === 'multi') {\r\n                helpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n                    self.list_positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n            this.list_setFrozenColumns();\r\n        }\r\n\r\n        if (this.viewOptions.list_actions && !this.list_noItems) {\r\n            this.list_createItemActions();\r\n            this.list_sizeActionsTable();\r\n        }\r\n\r\n        if ((this.viewOptions.list_frozenColumns || this.viewOptions.list_actions || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n            this.list_positionColumns();\r\n            this.list_frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.viewOptions.list_columnSyncing) {\r\n            this.list_sizeHeadings();\r\n            this.list_positionHeadings();\r\n        }\r\n\r\n        $sorted = this.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n        if ($sorted.length > 0) {\r\n            this.list_highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.viewOptions.list_actions !== false && property === '@_ACTIONS_@') {\r\n            content = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.list_actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.viewOptions.list_selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n        var checkAllID = (this.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.viewOptions.list_actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.list_actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.fu.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.list_sortDirection = 'desc';\r\n                        } else if (!self.viewOptions.list_sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.list_sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.list_sortDirection = null;\r\n                            self.list_sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.list_sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.list_sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.list_sortDirection = 'desc';\r\n            }\r\n\r\n            this.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.viewOptions.list_selectable === 'multi';\r\n        var isActions = repeater.viewOptions.list_actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find('.repeater-list-check').remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.fu.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find('.repeater-list-check').remove();\r\n                    repeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.fu.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.fu.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.viewOptions.list_selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.viewOptions.list_selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.fu.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.viewOptions.list_actions && !this.viewOptions.list_selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.list_columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.list_columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.viewOptions.list_columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.list_columns[columnIndex].property === '@_CHECKBOX_@' || this.list_columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.viewOptions.list_columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.list_columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.viewOptions.list_rowRendered) {\r\n            this.viewOptions.list_rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.viewOptions.list_noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.list_firstRender || areDifferentColumns(this.list_columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // list_noItems is set in `before` method\r\n\r\n            if (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.list_columns = columns;\r\n            this.list_firstRender = false;\r\n            this.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.viewOptions.list_actions) {\r\n                var actionsColumn = {\r\n                    label: this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.list_actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.viewOptions.list_columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.list_columns[i].width !== undefined) {\r\n                    width = self.list_columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.list_columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.list_columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = '.repeater-list-wrapper > table .selected';\r\n        var $actionsColumn = this.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.viewOptions.list_selectable === 'action') {\r\n            selectedSelector = '.repeater-list-wrapper > table tr';\r\n        }\r\n\r\n        $selected = this.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     return views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    };   \r\n\r\n});\ndefine('skylark-ui-repeater/views/tile',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.$canvas.find('.repeater-thumbnail-cont');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.options.template));\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    //ADDITIONAL METHODS\r\n    function fillTemplate(itemData, template) {\r\n        var invalid = false;\r\n\r\n        function replace() {\r\n            var end, start, val;\r\n\r\n            start = template.indexOf('{{');\r\n            end = template.indexOf('}}', start + 2);\r\n\r\n            if (start > -1 && end > -1) {\r\n                val = langx.trim(template.substring(start + 2, end));\r\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                template = template.substring(0, start) + val + template.substring(end + 2);\r\n            } else {\r\n                invalid = true;\r\n            }\r\n        }\r\n\r\n        while (!invalid && template.search('{{') >= 0) {\r\n            replace(template);\r\n        }\r\n\r\n        return template;\r\n    }\r\n\r\n    return views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n});\ndefine('skylark-ui-repeater/main',[\r\n    \"./Repeater\",\r\n    \"./views\",\r\n    \"./views/ViewBase\",\r\n    \"./views/carousel\",\r\n    \"./views/flipbook\",\r\n    \"./views/lightbox\",\r\n    \"./views/masonory\",\r\n    \"./views/slider\",\r\n    \"./views/table\",\r\n    \"./views/tile\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-ui-repeater', ['skylark-ui-repeater/main'], function (main) { return main; });\n\n"]}