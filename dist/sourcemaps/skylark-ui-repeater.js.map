{"version":3,"sources":["skylark-ui-repeater.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","elmx","$","Widget","ui","old","fn","repeater","Repeater","inherit","klassName","options","dataSource","callback","count","end","items","page","pages","start","defaultView","dropPagingCap","staticHeight","views","searchOnKeyPress","allowCancel","_init","$btn","currentView","self","this","$element","_elm","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","e","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewOptions","viewType","selectlist","combobox","search","value","trigger","render","clearInfinite","proxy","next","previous","evt","data","pageInputChange","text","val","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","loader","length","setViewOptions","initViewTypes","changeView","clear","opts","preserve","scan","empty","undefined","viewTypeObj","viewTypes","cleared","call","clearPreservedDataSourceOptions","destroy","markup","each","attr","outerHTML","infinitescroll","remove","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","mixin","returnOptions","view","pageIndex","filter","pageSize","searchValue","addViewTypeData","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","key","hasOwnProperty","push","initViewType","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","i","l","append","is","focus","prevView","split","selected","syncViewButtonState","beforeRender","repeaterPrototypeContext","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","curView","viewName","$selected","target","parents","$itemToCheck","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","prototype","runRenderer","option","methodReturn","args","Array","arguments","$set","$this","apply","defaults","Constructor","noConflict","list_clearSelectedItems","list_highlightColumn","force","tbody","list_highlightSortedColumn","col","parent","list_getSelectedItems","$item","getValue","list_positionHeadings","$wrapper","offsetLeft","offset","left","scrollLeft","$heading","list_setSelectedItems","itms","selectable","list_selectable","isArray","checkIfItemMatchesValue","rowIndex","property","selectItem","$itm","slct","$frozenCols","select","list_frozenColumns","list_actions","prepend","list_sizeHeadings","$table","$th","list_setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","list_sizeFrozenColumns","click","list_positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","list_createItemActions","actionsHtml","$actionsTable","name","actionsDropdown","$actionsColumnWrapper","list_actions_width","$actionsColumn","label","$actionsCells","rowNumber","list_sizeActionsTable","actionName","row","rows","list_getActionItems","selector","selectorIndex","selectedObj","actionObj","grep","actions","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","list_frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","type","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","list_revertingCheckbox","preventDefault","currentTarget","numSelected","list_columnRendered","list_columnSizing","list_columnSyncing","list_infiniteScroll","list_noItemsHTML","list_sortClearing","list_rowRendered","list","list_sortDirection","sortDirection","list_sortProperty","sortProperty","toggleActionsHeaderButton","list_specialBrowserClass","specialBrowserClass","list_noItems","sizeColumns","infScroll","list_firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","add","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","list_columns","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","j","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","thumbnail_clearSelectedItems","thumbnail_getSelectedItems","thumbnail_setSelectedItems","n","thumbnail_selectable","compareItemIndex","compareItemSelector","thumbnail_alignment","thumbnail_infiniteScroll","thumbnail_itemRendered","thumbnail_noItemsHTML","thumbnail_template","thumbnail","alignment","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","itemData","template","invalid","replace","trim","fillTemplate","main"],"mappings":"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","file":"../skylark-ui-repeater.js","sourcesContent":["define('skylark-ui-repeater/repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-ui-swt/Widget\",\r\n  \"skylark-fuelux/loader\",\r\n  \"skylark-fuelux/selectlist\",\r\n  \"skylark-fuelux/combobox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,Widget){\r\n\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\r\n\t/*\r\n\t * Repeater\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tvar old = $.fn.repeater;\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = ui.Repeater = Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true\r\n\t\t},\r\n\r\n//\t\t_init : function(element,options) {\r\n\t\t_init : function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.selectlist();\r\n\t\t\tthis.$pageSize.selectlist();\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox();\r\n\t\t\tthis.$search.search({\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.fu.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.fu.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.fu.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.fu.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.fu.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\tthis.$loader.loader();\r\n\t\t\tthis.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'list';\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewOptions(currentView);\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').combobox('destroy');\r\n\t\t\tthis.$element.find('.selectlist').selectlist('destroy');\r\n\t\t\tthis.$element.find('.search').search('destroy');\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.fu.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('disable');\r\n\t\t\tthis.$filters.selectlist('disable');\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('disable');\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('enable');\r\n\t\t\tthis.$filters.selectlist('enable');\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('enable');\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.combobox('disable');\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.selectlist('selectedItem');\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.selectlist('selectedItem').value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypes.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.fu.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.viewOptions.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\t\t\t\tthis.setViewOptions(this.currentView);\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.fu.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\tthis.$loader.show().loader('play');\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.viewOptions.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.viewOptions.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.viewOptions.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.viewType) {\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem.call(this, {\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render.call(this, {\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\tthis.$loader.hide().loader('pause');\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.fu.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\t// For backwards compatibility.\r\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\r\n\r\n\t// REPEATER PLUGIN DEFINITION\r\n\r\n\t$.fn.repeater = function fnrepeater (option) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\tvar methodReturn;\r\n\r\n\t\tvar $set = this.each(function eachThis () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('fu.repeater');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('fu.repeater', (data = new Repeater(this, options)));\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof option === 'string') {\r\n\t\t\t\tmethodReturn = data[option].apply(data, args);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\r\n\t};\r\n\r\n\t$.fn.repeater.defaults = {\r\n\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t},\r\n\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\tdropPagingCap: 10,\r\n\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\tsearchOnKeyPress: false,\r\n\t\tallowCancel: true\r\n\t};\r\n\r\n\t$.fn.repeater.viewTypes = {};\r\n\r\n\t$.fn.repeater.Constructor = Repeater;\r\n\r\n\t$.fn.repeater.noConflict = function noConflict () {\r\n\t\t$.fn.repeater = old;\r\n\t\treturn this;\r\n\t};\r\n\r\n\r\n\treturn $.fn.repeater;\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-list',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"./repeater\"\r\n],function(langx,browser,eventer,noder,geom,$){\r\n\r\n\t/*\r\n\t * Fuel UX Checkbox\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tif ($.fn.repeater) {\r\n\t\t// ADDITIONAL METHODS\r\n\t\t$.fn.repeater.Constructor.prototype.list_clearSelectedItems = function listClearSelectedItems () {\r\n\t\t\tthis.$canvas.find('.repeater-list-check').remove();\r\n\t\t\tthis.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_highlightColumn = function listHighlightColumn (index, force) {\r\n\t\t\tvar tbody = this.$canvas.find('.repeater-list-wrapper > table tbody');\r\n\t\t\tif (this.viewOptions.list_highlightSortedColumn || force) {\r\n\t\t\t\ttbody.find('td.sorted').removeClass('sorted');\r\n\t\t\t\ttbody.find('tr').each(function eachTR () {\r\n\t\t\t\t\tvar col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n\t\t\t\t\tcol.addClass('sorted');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getSelectedItems = function listGetSelectedItems () {\r\n\t\t\tvar selected = [];\r\n\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n\t\t\t\tvar $item = $(this);\r\n\t\t\t\tselected.push({\r\n\t\t\t\t\tdata: $item.data('item_data'),\r\n\t\t\t\t\telement: $item\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn selected;\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.getValue = $.fn.repeater.Constructor.prototype.list_getSelectedItems;\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionHeadings = function listPositionHeadings () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-list-wrapper');\r\n\t\t\tvar offsetLeft = $wrapper.offset().left;\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\tvar $heading = $(this);\r\n\t\t\t\t\tvar left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n\t\t\t\t\t$heading.addClass('shifted').css('left', left);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\t$(this).removeClass('shifted').css('left', '');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setSelectedItems = function listSetSelectedItems (itms, force) {\r\n\t\t\tvar selectable = this.viewOptions.list_selectable;\r\n\t\t\tvar self = this;\r\n\t\t\tvar data;\r\n\t\t\tvar i;\r\n\t\t\tvar $item;\r\n\t\t\tvar length;\r\n\r\n\t\t\tvar items = itms;\r\n\t\t\tif (!$.isArray(items)) {\r\n\t\t\t\titems = [items];\r\n\t\t\t}\r\n\r\n\t\t\t// this function is necessary because lint yells when a function is in a loop\r\n\t\t\tvar checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n\t\t\t\t$item = $(this);\r\n\r\n\t\t\t\tdata = $item.data('item_data') || {};\r\n\t\t\t\tif (data[items[i].property] === items[i].value) {\r\n\t\t\t\t\tselectItem($item, items[i].selected, rowIndex);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar selectItem = function selectItem ($itm, slct, index) {\r\n\t\t\t\tvar $frozenCols;\r\n\r\n\t\t\t\tvar select = (slct !== undefined) ? slct : true;\r\n\t\t\t\tif (select) {\r\n\t\t\t\t\tif (!force && selectable !== 'multi') {\r\n\t\t\t\t\t\tself.list_clearSelectedItems();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$itm.hasClass('selected')) {\r\n\t\t\t\t\t\t$itm.addClass('selected');\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns) {\r\n\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$itm.find('.repeater-list-check').remove();\r\n\t\t\t\t\t$itm.removeClass('selected');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (force === true || selectable === 'multi') {\r\n\t\t\t\tlength = items.length;\r\n\t\t\t} else if (selectable) {\r\n\t\t\t\tlength = (items.length > 0) ? 1 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tlength = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\tif (items[i].index !== undefined) {\r\n\t\t\t\t\t$item = this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n\t\t\t\t\tif ($item.length > 0) {\r\n\t\t\t\t\t\tselectItem($item, items[i].selected, items[i].index);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n\t\t\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeHeadings = function listSizeHeadings () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list table');\r\n\t\t\t$table.find('thead th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar $heading = $th.find('.repeater-list-heading');\r\n\t\t\t\t$heading.css({ height: $th.outerHeight() });\r\n\t\t\t\t$heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setFrozenColumns = function listSetFrozenColumns () {\r\n\t\t\tvar frozenTable = this.$canvas.find('.table-frozen');\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar repeaterWrapper = this.$element.find('.repeater-list');\r\n\t\t\tvar numFrozenColumns = this.viewOptions.list_frozenColumns;\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\tnumFrozenColumns = numFrozenColumns + 1;\r\n\t\t\t\t$wrapper.addClass('multi-select-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tif (frozenTable.length < 1) {\r\n\t\t\t\t// setup frozen column markup\r\n\t\t\t\t// main wrapper and remove unneeded columns\r\n\t\t\t\tvar $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n\t\t\t\tvar $frozenColumn = $table.clone().addClass('table-frozen');\r\n\t\t\t\t$frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n\t\t\t\t$frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n\t\t\t\t// need to set absolute heading for vertical scrolling\r\n\t\t\t\tvar $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n\t\t\t\t$frozenThead.find('tbody').remove();\r\n\t\t\t\tvar $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n\t\t\t\t// this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n\t\t\t\t// attribs are unique for the 'top most' cloned checkbox\r\n\t\t\t\tvar $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n\t\t\t\t$checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n\t\t\t\t$frozenColumnWrapper.append($frozenColumn);\r\n\t\t\t\trepeaterWrapper.append($frozenTheadWrapper);\r\n\t\t\t\tthis.$canvas.addClass('frozen-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeFrozenColumns();\r\n\r\n\t\t\t$('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n\t\t\t\tvar index = $(this).parent('th').index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tself.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionColumns = function listPositionColumns () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar scrollTop = $wrapper.scrollTop();\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tvar frozenEnabled = this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi';\r\n\t\t\tvar actionsEnabled = this.viewOptions.list_actions;\r\n\r\n\t\t\tvar canvasWidth = this.$element.find('.repeater-canvas').outerWidth();\r\n\t\t\tvar tableWidth = this.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n\t\t\tvar actionsWidth = this.$element.find('.table-actions') ? this.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n\t\t\tvar shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n\t\t\tif (scrollTop > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', '0');\r\n\t\t\t}\r\n\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled && shouldScroll) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', '0');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_createItemActions = function listCreateItemActions () {\r\n\t\t\tvar actionsHtml = '';\r\n\t\t\tvar self = this;\r\n\t\t\tvar i;\r\n\t\t\tvar length;\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar $actionsTable = this.$canvas.find('.table-actions');\r\n\r\n\t\t\tfor (i = 0, length = this.viewOptions.list_actions.items.length; i < length; i++) {\r\n\t\t\t\tvar action = this.viewOptions.list_actions.items[i];\r\n\t\t\t\tvar html = action.html;\r\n\r\n\t\t\t\tactionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n\t\t\t}\r\n\r\n\t\t\tvar actionsDropdown = '<div class=\"btn-group\">' +\r\n\t\t\t\t'<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n\t\t\t\t'<span class=\"caret\"></span>' +\r\n\t\t\t\t'</button>' +\r\n\t\t\t\t'<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n\t\t\t\tactionsHtml +\r\n\t\t\t\t'</ul></div>';\r\n\r\n\t\t\tif ($actionsTable.length < 1) {\r\n\t\t\t\tvar $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.list_actions_width + 'px\"></div>').insertBefore($table);\r\n\t\t\t\tvar $actionsColumn = $table.clone().addClass('table-actions');\r\n\t\t\t\t$actionsColumn.find('th:not(:last-child)').remove();\r\n\t\t\t\t$actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n\t\t\t\t// Dont show actions dropdown in header if not multi select\r\n\t\t\t\tif (this.viewOptions.list_selectable === 'multi' || this.viewOptions.list_selectable === 'action') {\r\n\t\t\t\t\t$actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n\t\t\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t\t\t// disable the header dropdown until an item is selected\r\n\t\t\t\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar label = this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>';\r\n\t\t\t\t\t$actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create Actions dropdown for each cell in actions table\r\n\t\t\t\tvar $actionsCells = $actionsColumn.find('td');\r\n\r\n\t\t\t\t$actionsCells.each(function addActionsDropdown (rowNumber) {\r\n\t\t\t\t\t$(this).html(actionsDropdown);\r\n\t\t\t\t\t$(this).find('a').attr('data-row', rowNumber + 1);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$actionsColumnWrapper.append($actionsColumn);\r\n\r\n\t\t\t\tthis.$canvas.addClass('actions-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeActionsTable();\r\n\r\n\t\t\t// row level actions click\r\n\t\t\tthis.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar row = $(this).data('row');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: [row]\r\n\t\t\t\t\t};\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// bulk actions click\r\n\t\t\tthis.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: []\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar selector = '.repeater-list-wrapper > table .selected';\r\n\r\n\t\t\t\t\tif ( self.viewOptions.list_selectable === 'action' ) {\r\n\t\t\t\t\t\tselector = '.repeater-list-wrapper > table tr';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n\t\t\t\t\t\tselected.rows.push(selectorIndex + 1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getActionItems = function listGetActionItems (selected, e) {\r\n\t\t\tvar selectedObj = [];\r\n\t\t\tvar actionObj = $.grep(this.viewOptions.list_actions.items, function matchedActions (actions) {\r\n\t\t\t\treturn actions.name === selected.actionName;\r\n\t\t\t})[0];\r\n\t\t\tfor (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n\t\t\t\tvar clickedRow = this.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n\t\t\t\tselectedObj.push({\r\n\t\t\t\t\titem: clickedRow,\r\n\t\t\t\t\trowData: clickedRow.data('item_data')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (selectedObj.length === 1) {\r\n\t\t\t\tselectedObj = selectedObj[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (actionObj.clickAction) {\r\n\t\t\t\tvar callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n\t\t\t\tactionObj.clickAction(selectedObj, callback, e);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeActionsTable = function listSizeActionsTable () {\r\n\t\t\tvar $actionsTable = this.$element.find('.repeater-list table.table-actions');\r\n\t\t\tvar $actionsTableHeader = $actionsTable.find('thead tr th');\r\n\t\t\tvar $table = this.$element.find('.repeater-list-wrapper > table');\r\n\r\n\t\t\t$actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n\t\t\t$actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n\t\t\t$actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n\t\t\t\t$(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeFrozenColumns = function listSizeFrozenColumns () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n\t\t\tthis.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n\t\t\t\t$(this).height($table.find('tr:eq(' + i + ')').height());\r\n\t\t\t});\r\n\r\n\t\t\tvar columnWidth = $table.find('td:eq(0)').outerWidth();\r\n\t\t\tthis.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_frozenOptionsInitialize = function listFrozenOptionsInitialize () {\r\n\t\t\tvar $checkboxes = this.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n\t\t\tvar $headerCheckbox = this.$element.find('.header-checkbox .checkbox-custom');\r\n\t\t\tvar $everyTable = this.$element.find('.repeater-list table');\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t// Make sure if row is hovered that it is shown in frozen column as well\r\n\t\t\tthis.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n\t\t\t\tvar index = $(this).index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tif (e.type === 'mouseover') {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$headerCheckbox.checkbox();\r\n\t\t\t$checkboxes.checkbox();\r\n\r\n\t\t\t// Row checkboxes\r\n\t\t\tvar $rowCheckboxes = this.$element.find('.table-frozen tbody .checkbox-inline');\r\n\t\t\tvar $checkAll = this.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n\t\t\t$rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar row = $(this).attr('data-row');\r\n\t\t\t\t\t\trow = parseInt(row, 10) + 1;\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n\t\t\t\t\t\tvar numSelected = self.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n\t\t\t\t\t\tif (numSelected === 0) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else if (numSelected === $rowCheckboxes.length) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', true);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// \"Check All\" checkbox\r\n\t\t\t$checkAll.on('change', function onChangeCheckAll (e) {\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else if ($(this).is(':checked')) {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n\t\t\t\t\t\tself.$element.trigger('selected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n\t\t\t\t\t\tself.$element.trigger('deselected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction revertCheckbox ($checkbox) {\r\n\t\t\t\tself.list_revertingCheckbox = true;\r\n\t\t\t\t$checkbox.checkbox('toggle');\r\n\t\t\t\tdelete self.list_revertingCheckbox;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// ADDITIONAL DEFAULT OPTIONS\r\n\t\t$.fn.repeater.Constructor.prototype.options = langx.mixin({}, $.fn.repeater.Constructor.prototype.options, {\r\n\t\t//$.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n\t\t\tlist_columnRendered: null,\r\n\t\t\tlist_columnSizing: true,\r\n\t\t\tlist_columnSyncing: true,\r\n\t\t\tlist_highlightSortedColumn: true,\r\n\t\t\tlist_infiniteScroll: false,\r\n\t\t\tlist_noItemsHTML: 'no items found',\r\n\t\t\tlist_selectable: false,\r\n\t\t\tlist_sortClearing: false,\r\n\t\t\tlist_rowRendered: null,\r\n\t\t\tlist_frozenColumns: 0,\r\n\t\t\tlist_actions: false\r\n\t\t});\r\n\r\n\t\t// EXTENSION DEFINITION\r\n\t\t$.fn.repeater.viewTypes.list = {\r\n\t\t\tcleared: function cleared () {\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdataOptions: function dataOptions (options) {\r\n\t\t\t\tif (this.list_sortDirection) {\r\n\t\t\t\t\toptions.sortDirection = this.list_sortDirection;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.list_sortProperty) {\r\n\t\t\t\t\toptions.sortProperty = this.list_sortProperty;\r\n\t\t\t\t}\r\n\t\t\t\treturn options;\r\n\t\t\t},\r\n\t\t\tenabled: function enabled (helpers) {\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tif (!helpers.status) {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n\t\t\t\t\t\ttoggleActionsHeaderButton.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinitialize: function initialize (helpers, callback) {\r\n\t\t\t\tthis.list_sortDirection = null;\r\n\t\t\t\tthis.list_sortProperty = null;\r\n\t\t\t\tthis.list_specialBrowserClass = specialBrowserClass();\r\n\t\t\t\tthis.list_actions_width = (this.viewOptions.list_actions.width !== undefined) ? this.viewOptions.list_actions.width : 37;\r\n\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\tcallback();\r\n\t\t\t},\r\n\t\t\tresize: function resize () {\r\n\t\t\t\tsizeColumns.call(this, this.$element.find('.repeater-list-wrapper > table thead tr'));\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\tthis.list_sizeFrozenColumns();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselected: function selected () {\r\n\t\t\t\tvar infScroll = this.viewOptions.list_infiniteScroll;\r\n\t\t\t\tvar opts;\r\n\r\n\t\t\t\tthis.list_firstRender = true;\r\n\t\t\t\tthis.$loader.addClass('noHeader');\r\n\r\n\t\t\t\tif (infScroll) {\r\n\t\t\t\t\topts = (typeof infScroll === 'object') ? infScroll : {};\r\n\t\t\t\t\tthis.infiniteScrolling(true, opts);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbefore: function before (helpers) {\r\n\t\t\t\tvar $listContainer = helpers.container.find('.repeater-list');\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar $table;\r\n\r\n\t\t\t\t// this is a patch, it was pulled out of `renderThead`\r\n\t\t\t\tif (helpers.data.count > 0) {\r\n\t\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.list_noItems = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($listContainer.length < 1) {\r\n\t\t\t\t\t$listContainer = $('<div class=\"repeater-list ' + this.list_specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n\t\t\t\t\t$listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\tif (self.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\t\t\tself.list_positionHeadings();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_actions || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\thelpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\t\tself.list_positionColumns();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thelpers.container.append($listContainer);\r\n\t\t\t\t}\r\n\t\t\t\thelpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n\t\t\t\t$table = $listContainer.find('table');\r\n\t\t\t\trenderThead.call(this, $table, helpers.data);\r\n\t\t\t\trenderTbody.call(this, $table, helpers.data);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\trenderItem: function renderItem (helpers) {\r\n\t\t\t\trenderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tafter: function after () {\r\n\t\t\t\tvar $sorted;\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_setFrozenColumns();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_actions && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_createItemActions();\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_actions || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_positionColumns();\r\n\t\t\t\t\tthis.list_frozenOptionsInitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t\tthis.list_positionHeadings();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$sorted = this.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n\t\t\t\tif ($sorted.length > 0) {\r\n\t\t\t\t\tthis.list_highlightColumn($sorted.data('fu_item_index'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// ADDITIONAL METHODS\r\n\tvar areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n\t\tif (!newCols) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!oldCols || (newCols.length !== oldCols.length)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n\t\t\tif (!oldCols[i]) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var j in newCols[i]) {\r\n\t\t\t\tif (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tvar renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n\t\tvar className = columns[columnIndex].className;\r\n\t\tvar content = rows[rowIndex][columns[columnIndex].property];\r\n\t\tvar $col = $('<td></td>');\r\n\t\tvar width = columns[columnIndex]._auto_width;\r\n\r\n\t\tvar property = columns[columnIndex].property;\r\n\t\tif (this.viewOptions.list_actions !== false && property === '@_ACTIONS_@') {\r\n\t\t\tcontent = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.list_actions_width  + 'px\"></div>';\r\n\t\t}\r\n\r\n\t\tcontent = (content !== undefined) ? content : '';\r\n\r\n\t\t$col.addClass(((className !== undefined) ? className : '')).append(content);\r\n\t\tif (width !== undefined) {\r\n\t\t\t$col.outerWidth(width);\r\n\t\t}\r\n\r\n\t\t$row.append($col);\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n\t\t\tvar checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n\t\t\t$col.html(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\treturn $col;\r\n\t};\r\n\r\n\tvar renderHeader = function renderHeader ($tr, columns, index) {\r\n\t\tvar chevDown = 'glyphicon-chevron-down';\r\n\t\tvar chevron = '.glyphicon.rlc:first';\r\n\t\tvar chevUp = 'glyphicon-chevron-up';\r\n\t\tvar $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n\t\tvar checkAllID = (this.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n\t\tvar checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n\t\t\t\t'<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n\t\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n\t\t\t\t\t'<span class=\"checkbox-label\">&nbsp;</span>' +\r\n\t\t\t\t'</label>' +\r\n\t\t\t'</div>';\r\n\r\n\t\tvar $header = $('<th></th>');\r\n\t\tvar self = this;\r\n\t\tvar $both;\r\n\t\tvar className;\r\n\t\tvar sortable;\r\n\t\tvar $span;\r\n\t\tvar $spans;\r\n\r\n\t\t$div.data('fu_item_index', index);\r\n\t\t$div.prepend(columns[index].label);\r\n\t\t$header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n\t\tif (columns[index].property !== '@_CHECKBOX_@') {\r\n\t\t\t$header.append($div);\r\n\t\t} else {\r\n\t\t\t$header.append(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\t$both = $header.add($div);\r\n\t\t$span = $div.find(chevron);\r\n\t\t$spans = $span.add($header.find(chevron));\r\n\r\n\t\tif (this.viewOptions.list_actions && columns[index].property === '@_ACTIONS_@') {\r\n\t\t\tvar width = this.list_actions_width;\r\n\t\t\t$header.css('width', width);\r\n\t\t\t$div.css('width', width);\r\n\t\t}\r\n\r\n\t\tclassName = columns[index].className;\r\n\t\tif (className !== undefined) {\r\n\t\t\t$both.addClass(className);\r\n\t\t}\r\n\r\n\t\tsortable = columns[index].sortable;\r\n\t\tif (sortable) {\r\n\t\t\t$both.addClass('sortable');\r\n\t\t\t$div.on('click.fu.repeaterList', function onClickRepeaterList () {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tself.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t\t\t\tif ($div.hasClass('sorted')) {\r\n\t\t\t\t\t\tif ($span.hasClass(chevUp)) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevUp).addClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'desc';\r\n\t\t\t\t\t\t} else if (!self.viewOptions.list_sortClearing) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$both.removeClass('sorted');\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = null;\r\n\t\t\t\t\t\t\tself.list_sortProperty = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t$both.addClass('sorted');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t$both.addClass('sortable sorted');\r\n\t\t\tif (columns[index].sortDirection === 'asc') {\r\n\t\t\t\t$spans.addClass(chevUp);\r\n\t\t\t\tthis.list_sortDirection = 'asc';\r\n\t\t\t} else {\r\n\t\t\t\t$spans.addClass(chevDown);\r\n\t\t\t\tthis.list_sortDirection = 'desc';\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t}\r\n\r\n\t\t$tr.append($header);\r\n\t};\r\n\r\n\tvar onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n\t\tvar isMulti = repeater.viewOptions.list_selectable === 'multi';\r\n\t\tvar isActions = repeater.viewOptions.list_actions;\r\n\t\tvar $repeater = repeater.$element;\r\n\r\n\t\tif (!repeater.isDisabled) {\r\n\t\t\tvar $item = $(this);\r\n\t\t\tvar index = $(this).index() + 1;\r\n\t\t\tvar $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n\t\t\tif ($item.is('.selected')) {\r\n\t\t\t\t$item.removeClass('selected');\r\n\t\t\t\tif (isMulti) {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$frozenRow.removeClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.removeClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$item.find('.repeater-list-check').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $item);\r\n\t\t\t} else {\r\n\t\t\t\tif (!isMulti) {\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list-check').remove();\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n\t\t\t\t\t\t$(this).removeClass('selected');\r\n\t\t\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $(this));\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.addClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$repeater.trigger('selected.fu.repeaterList', $item);\r\n\t\t\t}\r\n\r\n\t\t\ttoggleActionsHeaderButton.call(repeater);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderRow = function renderRow ($tbody, rows, index) {\r\n\t\tvar $row = $('<tr></tr>');\r\n\r\n\t\tif (this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t$row.addClass('selectable');\r\n\t\t\t\t$row.attr('tabindex', 0);\t// allow items to be tabbed to / focused on\r\n\r\n\t\t\t\tvar repeater = this;\r\n\t\t\t\t$row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\r\n\t\t\t\t\tonClickRowRepeaterList.call(this, repeater);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// allow selection via enter key\r\n\t\t\t\t$row.keyup(function onRowKeyup (e) {\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\t// triggering a standard click event to be caught by the row click handler above\r\n\t\t\t\t\t\t$row.trigger('click.fu.repeaterList');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_actions && !this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\t\t}\r\n\r\n\t\tvar columns = [];\r\n\t\tfor (var i = 0, length = this.list_columns.length; i < length; i++) {\r\n\t\t\tcolumns.push(renderColumn.call(this, $row, rows, index, this.list_columns, i));\r\n\t\t}\r\n\r\n\t\t$tbody.append($row);\r\n\r\n\t\tif (this.viewOptions.list_columnRendered) {\r\n\t\t\tfor (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n\t\t\t\tif (!(this.list_columns[columnIndex].property === '@_CHECKBOX_@' || this.list_columns[columnIndex].property === '@_ACTIONS_@')) {\r\n\t\t\t\t\tthis.viewOptions.list_columnRendered({\r\n\t\t\t\t\t\tcontainer: $row,\r\n\t\t\t\t\t\tcolumnAttr: this.list_columns[columnIndex].property,\r\n\t\t\t\t\t\titem: columns[columnIndex],\r\n\t\t\t\t\t\trowData: rows[index]\r\n\t\t\t\t\t}, function noop () {});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_rowRendered) {\r\n\t\t\tthis.viewOptions.list_rowRendered({\r\n\t\t\t\tcontainer: $tbody,\r\n\t\t\t\titem: $row,\r\n\t\t\t\trowData: rows[index]\r\n\t\t\t}, function noop () {});\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderTbody = function renderTbody ($table, data) {\r\n\t\tvar $tbody = $table.find('tbody');\r\n\t\tvar $empty;\r\n\r\n\t\tif ($tbody.length < 1) {\r\n\t\t\t$tbody = $('<tbody data-container=\"true\"></tbody>');\r\n\t\t\t$table.append($tbody);\r\n\t\t}\r\n\r\n\t\tif (typeof data.error === 'string' && data.error.length > 0) {\r\n\t\t\t$empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(data.error);\r\n\t\t\t$tbody.append($empty);\r\n\t\t} else if (data.items && data.items.length < 1) {\r\n\t\t\t$empty = $('<tr class=\"empty\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(this.viewOptions.list_noItemsHTML);\r\n\t\t\t$tbody.append($empty);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderThead = function renderThead ($table, data) {\r\n\t\tvar columns = data.columns || [];\r\n\t\tvar $thead = $table.find('thead');\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar $tr;\r\n\r\n\t\tif (this.list_firstRender || areDifferentColumns(this.list_columns, columns) || $thead.length === 0) {\r\n\t\t\t$thead.remove();\r\n\r\n\t\t\t// list_noItems is set in `before` method\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\tvar checkboxColumn = {\r\n\t\t\t\t\tlabel: 'c',\r\n\t\t\t\t\tproperty: '@_CHECKBOX_@',\r\n\t\t\t\t\tsortable: false\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.splice(0, 0, checkboxColumn);\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_columns = columns;\r\n\t\t\tthis.list_firstRender = false;\r\n\t\t\tthis.$loader.removeClass('noHeader');\r\n\r\n\t\t\t// keep action column header even when empty, you'll need it later....\r\n\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\tvar actionsColumn = {\r\n\t\t\t\t\tlabel: this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>',\r\n\t\t\t\t\tproperty: '@_ACTIONS_@',\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\twidth: this.list_actions_width\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.push(actionsColumn);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t$thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n\t\t\t$tr = $thead.find('tr');\r\n\t\t\tfor (i = 0, length = columns.length; i < length; i++) {\r\n\t\t\t\trenderHeader.call(this, $tr, columns, i);\r\n\t\t\t}\r\n\t\t\t$table.prepend($thead);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\t// after checkbox column is created need to get width of checkbox column from\r\n\t\t\t\t// its css class\r\n\t\t\t\tvar checkboxWidth = this.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n\t\t\t\tvar selectColumn = $.grep(columns, function grepColumn (column) {\r\n\t\t\t\t\treturn column.property === '@_CHECKBOX_@';\r\n\t\t\t\t})[0];\r\n\t\t\t\tselectColumn.width = checkboxWidth;\r\n\t\t\t}\r\n\t\t\tsizeColumns.call(this, $tr);\r\n\t\t}\r\n\t};\r\n\r\n\tvar sizeColumns = function sizeColumns ($tr) {\r\n\t\tvar automaticallyGeneratedWidths = [];\r\n\t\tvar self = this;\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar newWidth;\r\n\t\tvar widthTaken;\r\n\r\n\t\tif (this.viewOptions.list_columnSizing) {\r\n\t\t\ti = 0;\r\n\t\t\twidthTaken = 0;\r\n\t\t\t$tr.find('th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar width;\r\n\t\t\t\tif (self.list_columns[i].width !== undefined) {\r\n\t\t\t\t\twidth = self.list_columns[i].width;\r\n\t\t\t\t\t$th.outerWidth(width);\r\n\t\t\t\t\twidthTaken += $th.outerWidth();\r\n\t\t\t\t\tself.list_columns[i]._auto_width = width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n\t\t\t\t\tautomaticallyGeneratedWidths.push({\r\n\t\t\t\t\t\tcol: $th,\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tminWidth: outerWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\r\n\t\t\tlength = automaticallyGeneratedWidths.length;\r\n\t\t\tif (length > 0) {\r\n\t\t\t\tvar canvasWidth = this.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n\t\t\t\tnewWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n\t\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t\tif (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n\t\t\t\t\t\tnewWidth = automaticallyGeneratedWidths[i].minWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tautomaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n\t\t\t\t\tthis.list_columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar specialBrowserClass = function specialBrowserClass () {\r\n\t\tvar ua = window.navigator.userAgent;\r\n\t\tvar msie = ua.indexOf('MSIE ');\r\n\t\tvar firefox = ua.indexOf('Firefox');\r\n\r\n\t\tif (msie > 0 ) {\r\n\t\t\treturn 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n\t\t} else if (firefox > 0) {\r\n\t\t\treturn 'firefox';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t};\r\n\r\n\tvar toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n\t\tvar selectedSelector = '.repeater-list-wrapper > table .selected';\r\n\t\tvar $actionsColumn = this.$element.find('.table-actions');\r\n\t\tvar $selected;\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'action') {\r\n\t\t\tselectedSelector = '.repeater-list-wrapper > table tr';\r\n\t\t}\r\n\r\n\t\t$selected = this.$canvas.find( selectedSelector );\r\n\r\n\t\tif ($selected.length > 0) {\r\n\t\t\t$actionsColumn.find('thead .btn').removeAttr('disabled');\r\n\t\t} else {\r\n\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t}\r\n\t};\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-thumbnail',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"./repeater\"\r\n], function(langx, browser, eventer, noder, geom, $) {\r\n\r\n    /*\r\n     * Fuel UX Checkbox\r\n     * https://github.com/ExactTarget/fuelux\r\n     *\r\n     * Copyright (c) 2014 ExactTarget\r\n     * Licensed under the BSD New license.\r\n     */\r\n\r\n    if ($.fn.repeater) {\r\n        //ADDITIONAL METHODS\r\n        $.fn.repeater.Constructor.prototype.thumbnail_clearSelectedItems = function() {\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_getSelectedItems = function() {\r\n            var selected = [];\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                selected.push($(this));\r\n            });\r\n            return selected;\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_setSelectedItems = function(items, force) {\r\n            var selectable = this.viewOptions.thumbnail_selectable;\r\n            var self = this;\r\n            var i, $item, l, n;\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemIndex() {\r\n                if (n === items[i].index) {\r\n                    $item = $(this);\r\n                    return false;\r\n                } else {\r\n                    n++;\r\n                }\r\n            }\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemSelector() {\r\n                $item = $(this);\r\n                if ($item.is(items[i].selector)) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n            }\r\n\r\n            function selectItem($itm, select) {\r\n                select = (select !== undefined) ? select : true;\r\n                if (select) {\r\n                    if (!force && selectable !== 'multi') {\r\n                        self.thumbnail_clearSelectedItems();\r\n                    }\r\n\r\n                    $itm.addClass('selected');\r\n                } else {\r\n                    $itm.removeClass('selected');\r\n                }\r\n            }\r\n\r\n            if (!$.isArray(items)) {\r\n                items = [items];\r\n            }\r\n\r\n            if (force === true || selectable === 'multi') {\r\n                l = items.length;\r\n            } else if (selectable) {\r\n                l = (items.length > 0) ? 1 : 0;\r\n            } else {\r\n                l = 0;\r\n            }\r\n\r\n            for (i = 0; i < l; i++) {\r\n                if (items[i].index !== undefined) {\r\n                    $item = $();\r\n                    n = 0;\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\r\n                    if ($item.length > 0) {\r\n                        selectItem($item, items[i].selected);\r\n                    }\r\n\r\n                } else if (items[i].selector) {\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\r\n                }\r\n            }\r\n        };\r\n\r\n        //ADDITIONAL DEFAULT OPTIONS\r\n        $.fn.repeater.Constructor.prototype.options = langx.mixin({}, $.fn.repeater.Constructor.prototype.options, {\r\n        //$.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n           thumbnail_alignment: 'left',\r\n            thumbnail_infiniteScroll: false,\r\n            thumbnail_itemRendered: null,\r\n            thumbnail_noItemsHTML: 'no items found',\r\n            thumbnail_selectable: false,\r\n            thumbnail_template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        });\r\n\r\n        //EXTENSION DEFINITION\r\n        $.fn.repeater.viewTypes.thumbnail = {\r\n            selected: function() {\r\n                var infScroll = this.viewOptions.thumbnail_infiniteScroll;\r\n                var opts;\r\n                if (infScroll) {\r\n                    opts = (typeof infScroll === 'object') ? infScroll : {};\r\n                    this.infiniteScrolling(true, opts);\r\n                }\r\n            },\r\n            before: function(helpers) {\r\n                var alignment = this.viewOptions.thumbnail_alignment;\r\n                var $cont = this.$canvas.find('.repeater-thumbnail-cont');\r\n                var data = helpers.data;\r\n                var response = {};\r\n                var $empty, validAlignments;\r\n\r\n                if ($cont.length < 1) {\r\n                    $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\r\n                    if (alignment && alignment !== 'none') {\r\n                        validAlignments = {\r\n                            'center': 1,\r\n                            'justify': 1,\r\n                            'left': 1,\r\n                            'right': 1\r\n                        };\r\n                        alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                        $cont.addClass('align-' + alignment);\r\n                        this.thumbnail_injectSpacers = true;\r\n                    } else {\r\n                        this.thumbnail_injectSpacers = false;\r\n                    }\r\n                    response.item = $cont;\r\n                } else {\r\n                    response.action = 'none';\r\n                }\r\n\r\n                if (data.items && data.items.length < 1) {\r\n                    $empty = $('<div class=\"empty\"></div>');\r\n                    $empty.append(this.viewOptions.thumbnail_noItemsHTML);\r\n                    $cont.append($empty);\r\n                } else {\r\n                    $cont.find('.empty:first').remove();\r\n                }\r\n\r\n                return response;\r\n            },\r\n            renderItem: function(helpers) {\r\n                var selectable = this.viewOptions.thumbnail_selectable;\r\n                var selected = 'selected';\r\n                var self = this;\r\n                var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.viewOptions.thumbnail_template));\r\n\r\n                $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n                if (selectable) {\r\n                    $thumbnail.addClass('selectable');\r\n                    $thumbnail.on('click', function() {\r\n                        if (self.isDisabled) return;\r\n\r\n                        if (!$thumbnail.hasClass(selected)) {\r\n                            if (selectable !== 'multi') {\r\n                                self.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                                    var $itm = $(this);\r\n                                    $itm.removeClass(selected);\r\n                                    self.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\r\n                                });\r\n                            }\r\n\r\n                            $thumbnail.addClass(selected);\r\n                            self.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\r\n                        } else {\r\n                            $thumbnail.removeClass(selected);\r\n                            self.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                helpers.container.append($thumbnail);\r\n                if (this.thumbnail_injectSpacers) {\r\n                    $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n                }\r\n\r\n                if (this.viewOptions.thumbnail_itemRendered) {\r\n                    this.viewOptions.thumbnail_itemRendered({\r\n                        container: helpers.container,\r\n                        item: $thumbnail,\r\n                        itemData: helpers.subset[helpers.index]\r\n                    }, function() {});\r\n                }\r\n\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n\r\n    //ADDITIONAL METHODS\r\n    function fillTemplate(itemData, template) {\r\n        var invalid = false;\r\n\r\n        function replace() {\r\n            var end, start, val;\r\n\r\n            start = template.indexOf('{{');\r\n            end = template.indexOf('}}', start + 2);\r\n\r\n            if (start > -1 && end > -1) {\r\n                val = langx.trim(template.substring(start + 2, end));\r\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                template = template.substring(0, start) + val + template.substring(end + 2);\r\n            } else {\r\n                invalid = true;\r\n            }\r\n        }\r\n\r\n        while (!invalid && template.search('{{') >= 0) {\r\n            replace(template);\r\n        }\r\n\r\n        return template;\r\n    }\r\n\r\n});\ndefine('skylark-ui-repeater/main',[\r\n    \"skylark-utils-dom/query\",\r\n    \"./repeater\",\r\n    \"./repeater-list\",\r\n    \"./repeater-thumbnail\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-ui-repeater', ['skylark-ui-repeater/main'], function (main) { return main; });\n\n"]}