{"version":3,"sources":["skylark-ui-repeater.js"],"names":["factory","globals","absolute","relative","base","stack","split","parts","pop","i","length","push","join","define","require","isAmd","amd","isCmd","exports","map","id","deps","dep","hasOwnProperty","Error","module","args","forEach","apply","window","skylarkjs","skylark","langx","browser","eventer","noder","geom","velm","$","widgets","ui","old","fn","repeater","Repeater","Widget","inherit","klassName","init","element","options","$btn","currentView","self","this","$element","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","e","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","mixin","defaults","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewOptions","viewType","selectlist","combobox","search","searchOnKeyPress","allowCancel","value","trigger","render","clearInfinite","proxy","next","previous","evt","data","pageInputChange","text","val","keyCode","viewChanged","clearTimeout","setTimeout","resize","loader","defaultView","setViewOptions","initViewTypes","changeView","clear","opts","preserve","scan","empty","undefined","viewTypeObj","viewTypes","cleared","call","clearPreservedDataSourceOptions","destroy","markup","each","attr","outerHTML","infinitescroll","remove","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","returnOptions","view","pageIndex","filter","pageSize","searchValue","addViewTypeData","dataOptions","infiniteScrolling","footer","viewport","end","dataSource","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","page","pages","NaN","initInfiniteScrolling","helpers","callback","key","initViewType","itemization","count","start","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropPagingCap","dropMenu","l","append","is","focus","prevView","selected","syncViewButtonState","beforeRender","repeaterPrototypeContext","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","staticHeight","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","curView","viewName","views","$selected","target","parents","$itemToCheck","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","afterRender","state","renderOptions","d","prototype","runRenderer","option","methodReturn","Array","arguments","$set","$this","items","Constructor","noConflict","list_clearSelectedItems","list_highlightColumn","force","tbody","list_highlightSortedColumn","col","parent","list_getSelectedItems","$item","getValue","list_positionHeadings","$wrapper","offsetLeft","offset","left","scrollLeft","$heading","list_setSelectedItems","itms","selectable","list_selectable","isArray","checkIfItemMatchesValue","rowIndex","property","selectItem","$itm","slct","$frozenCols","select","list_frozenColumns","list_actions","prepend","list_sizeHeadings","$table","$th","list_setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","list_sizeFrozenColumns","click","list_positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","list_createItemActions","actionsHtml","$actionsTable","name","actionsDropdown","$actionsColumnWrapper","list_actions_width","$actionsColumn","label","$actionsCells","rowNumber","list_sizeActionsTable","actionName","row","rows","list_getActionItems","selector","selectorIndex","selectedObj","actionObj","grep","actions","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","list_frozenOptionsInitialize","revertCheckbox","$checkbox","list_revertingCheckbox","checkbox","$checkboxes","$headerCheckbox","$everyTable","type","$rowCheckboxes","$checkAll","preventDefault","currentTarget","numSelected","list_columnRendered","list_columnSizing","list_columnSyncing","list_infiniteScroll","list_noItemsHTML","list_sortClearing","list_rowRendered","list","list_sortDirection","sortDirection","list_sortProperty","sortProperty","toggleActionsHeaderButton","list_specialBrowserClass","specialBrowserClass","list_noItems","sizeColumns","infScroll","list_firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","areDifferentColumns","oldCols","newCols","newColsL","j","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevron","chevUp","$div","checkAllID","$header","add","onClickRowRepeaterList","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","$tbody","keyup","list_columns","colLength","columnAttr","$empty","error","$thead","checkboxColumn","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","fillTemplate","itemData","template","replace","trim","invalid","thumbnail_clearSelectedItems","thumbnail_getSelectedItems","thumbnail_setSelectedItems","compareItemIndex","n","compareItemSelector","thumbnail_selectable","thumbnail_alignment","thumbnail_infiniteScroll","thumbnail_itemRendered","thumbnail_noItemsHTML","thumbnail_template","thumbnail","validAlignments","alignment","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","main"],"mappings":";;;;;;;CAAA,SAAUA,EAAQC,GAQd,QAASC,GAASC,EAAUC,GACxB,GAAkB,MAAdD,EAAS,GACX,MAAOA,EAET,IAAIE,GAAQD,EAAKE,MAAM,KACnBC,EAAQJ,EAASG,MAAM,IAC3BD,GAAMG,KACN,KAAK,GAAIC,GAAE,EAAGA,EAAEF,EAAMG,OAAQD,IACV,KAAZF,EAAME,KAEM,MAAZF,EAAME,GACNJ,EAAMG,MAENH,EAAMM,KAAKJ,EAAME,IAEzB,OAAOJ,GAAMO,KAAK,KAtBxB,GAAIC,GAASZ,EAAQY,OACjBC,EAAUb,EAAQa,QAClBC,EAA2B,kBAAXF,IAAyBA,EAAOG,IAChDC,GAAUF,GAA4B,mBAAZG,QAE9B,KAAKH,IAAUF,EAAQ,CACrB,GAAIM,KAkBJN,GAASZ,EAAQY,OAAS,SAASO,EAAIC,EAAMrB,GACnB,kBAAXA,IACPmB,EAAIC,IACApB,QAASA,EACTqB,KAAMA,EAAKF,IAAI,SAASG,GACtB,MAAOpB,GAASoB,EAAIF,KAEtBF,QAAS,MAEbJ,EAAQM,IAERD,EAAIC,GAAMpB,GAGlBc,EAAUb,EAAQa,QAAU,SAASM,GACjC,IAAKD,EAAII,eAAeH,GACpB,KAAM,IAAII,OAAM,UAAYJ,EAAK,wBAErC,IAAIK,GAASN,EAAIC,EACjB,KAAKK,EAAOP,QAAS,CACjB,GAAIQ,KAEJD,GAAOJ,KAAKM,QAAQ,SAASL,GACzBI,EAAKf,KAAKG,EAAQQ,MAGtBG,EAAOP,QAAUO,EAAOzB,QAAQ4B,MAAMC,OAAQH,GAElD,MAAOD,GAAOP,SAIpB,IAAKL,EACF,KAAM,IAAIW,OAAM,qEAKnB,IAFAxB,EAAQa,EAAOC,IAEVC,EAAO,CACV,GAAIe,GAAYhB,EAAQ,wBAEpBG,GACFC,QAAUY,EAEV7B,EAAQ6B,UAAaA,IAIxB,SAASjB,EAAOC,GAzEnBD,EAAA,gCACA,wBACA,sBACA,wBACA,wBACA,sBACA,qBACA,qBACA,sBACA,wBACA,wBACA,4BACA,2BACA,SAAAkB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAAT,EAAAS,GAAAT,EAAAS,OAUAC,EAAAH,EAAAI,GAAAC,SAIAC,EAAAJ,EAAAI,SAAAL,EAAAM,OAAAC,SACAC,UAAA,WAEAC,KAAA,SAAAC,EAAAC,GACA,GACAC,GACAC,EAFAC,EAAAC,IAIAA,MAAAC,SAAAjB,EAAAW,GAEAK,KAAAE,QAAAF,KAAAC,SAAAE,KAAA,oBACAH,KAAAI,OAAAJ,KAAAC,SAAAE,KAAA,mBACAH,KAAAK,KAAAL,KAAAC,SAAAE,KAAA,iBACAH,KAAAM,SAAAN,KAAAC,SAAAE,KAAA,qBACAH,KAAAO,QAAAP,KAAAC,SAAAE,KAAA,oBACAH,KAAAQ,UAAAR,KAAAC,SAAAE,KAAA,qCACAH,KAAAS,SAAAT,KAAAC,SAAAE,KAAA,kBACAH,KAAAU,OAAAV,KAAAC,SAAAE,KAAA,mBACAH,KAAAW,SAAAX,KAAAC,SAAAE,KAAA,kBACAH,KAAAY,eAAAZ,KAAAC,SAAAE,KAAA,2BACAH,KAAAa,QAAAb,KAAAC,SAAAE,KAAA,oBAAAA,KAAA,WACAH,KAAAc,iBAAAd,KAAAC,SAAAE,KAAA,6BACAH,KAAAe,OAAAf,KAAAC,SAAAE,KAAA,mBACAH,KAAAgB,UAAAhB,KAAAC,SAAAE,KAAA,sBACAH,KAAAiB,OAAAjB,KAAAC,SAAAE,KAAA,mBAEAH,KAAAC,SAAAiB,GAAA,iCAAA,2BAAA,SAAAC,GACAnC,EAAAgB,MAAAoB,aAGApB,KAAAqB,YAAA,EACArB,KAAAF,YAAA,KACAE,KAAAsB,YAAA,EACAtB,KAAAuB,0BAAA,aACAvB,KAAAwB,sBAAA,KACAxB,KAAAyB,0BAAA,EACAzB,KAAA0B,qBAAA,KACA1B,KAAA2B,4BACA3B,KAAA4B,cAAA,EACA5B,KAAAJ,QAAAlB,EAAAmD,SAAA7C,EAAAI,GAAAC,SAAAyC,SAAAlC,GACAI,KAAA+B,cAAA,EACA/B,KAAAgC,iBACAhC,KAAAiC,OAAA,GAAAC,OAAAC,WAAAC,KAAAC,MAAA,IAAAD,KAAAE,UAAA,GACAtC,KAAAuC,qBAAA,KACAvC,KAAAwC,wBAAA,EACAxC,KAAAyC,eACAzC,KAAA0C,SAAA,KAEA1C,KAAAM,SAAAqC,aACA3C,KAAAQ,UAAAmC,aACA3C,KAAAY,eAAAT,KAAA,aAAAyC,WACA5C,KAAAa,QAAAgC,QACAC,iBAAA9C,KAAAJ,QAAAkD,iBACAC,YAAA/C,KAAAJ,QAAAmD,cAGA/C,KAAAM,SAAAY,GAAA,wBAAA,SAAAC,EAAA6B,GACAjD,EAAAE,SAAAgD,QAAA,uBAAAD,GACAjD,EAAAmD,QACAC,eAAA,EACApB,cAAA,SAGA/B,KAAAS,SAAAS,GAAA,oBAAAxC,EAAA0E,MAAApD,KAAAqD,KAAArD,OACAA,KAAAQ,UAAAU,GAAA,wBAAA,SAAAC,EAAA6B,GACAjD,EAAAE,SAAAgD,QAAA,8BAAAD,GACAjD,EAAAmD,QACAnB,cAAA,SAGA/B,KAAAW,SAAAO,GAAA,oBAAAxC,EAAA0E,MAAApD,KAAAsD,SAAAtD,OACAA,KAAAY,eAAAT,KAAA,aAAAe,GAAA,sBAAA,SAAAqC,EAAAC,GACAzD,EAAA0D,gBAAAD,EAAAE,KAAAF,KAEAxD,KAAAa,QAAAK,GAAA,uCAAA,SAAAC,EAAA6B,GACAjD,EAAAE,SAAAgD,QAAA,4BAAAD,GACAjD,EAAAmD,QACAC,eAAA,EACApB,cAAA,SAGA/B,KAAAa,QAAAK,GAAA,qBAAA,SAAAC,EAAA6B,GACAjD,EAAAE,SAAAgD,QAAA,uBAAAD,GACAjD,EAAAmD,QACAC,eAAA,EACApB,cAAA,SAIA/B,KAAAc,iBAAAI,GAAA,mBAAA,WACAnB,EAAA0D,gBAAA1D,EAAAe,iBAAA6C,SAEA3D,KAAAc,iBAAAI,GAAA,QAAA,SAAAC,GACA,KAAAA,EAAAyC,SACA7D,EAAA0D,gBAAA1D,EAAAe,iBAAA6C,SAGA3D,KAAAiB,OAAAd,KAAA,SAAAe,GAAA,qBAAAxC,EAAA0E,MAAApD,KAAA6D,YAAA7D,OAEAhB,EAAAT,QAAA2C,GAAA,sBAAAlB,KAAAiC,MAAA,WACA6B,aAAA/D,EAAAiC,eACAjC,EAAAiC,cAAA+B,WAAA,WACAhE,EAAAiE,SACAjE,EAAAE,SAAAgD,QAAA,wBACA,MAGAjD,KAAAO,QAAA0D,SACAjE,KAAAO,QAAA0D,OAAA,SACAjE,KAAAJ,QAAAsE,iBACApE,EAAAE,KAAAJ,QAAAsE,aAEArE,EAAAG,KAAAiB,OAAAd,KAAA,sBACAL,EAAAD,EAAAzC,OAAA,EAAAyC,EAAA8D,MAAA,QAGA3D,KAAAmE,eAAArE,GAEAE,KAAAoE,cAAA,WACArE,EAAAiE,SACAjE,EAAAE,SAAAgD,QAAA,uBACAlD,EAAAmD,QACAmB,WAAAvE,OAKAwE,MAAA,SAAAC,GACA,GAAA3E,GAAA2E,KAEA3E,GAAA4E,SAGAxE,KAAAyB,2BAAA7B,EAAAuD,eAEAsB,EAAAzE,KAAAE,SAHAF,KAAAE,QAAAwE,OAOA,IAAAb,GAAAc,SAAA/E,EAAAiE,aAAAjE,EAAAiE,YACAe,EAAA5F,EAAAI,GAAAC,SAAAwF,UAAA7E,KAAA0C,eACAmB,GAAAe,EAAAE,SACAF,EAAAE,QAAAC,KAAA/E,MACAJ,QAAAA,KAKAoF,gCAAA,WACAhF,KAAAuC,qBAAA,MAGA0C,QAAA,WACA,GAAAC,EAuBA,OArBAlF,MAAAC,SAAAE,KAAA,SAAAgF,KAAA,WACAnG,EAAAgB,MAAAoF,KAAA,QAAApG,EAAAgB,MAAA2D,SAIA3D,KAAAE,QAAAwE,QACAQ,EAAAlF,KAAAC,SAAA,GAAAoF,UAGArF,KAAAC,SAAAE,KAAA,aAAAyC,SAAA,WACA5C,KAAAC,SAAAE,KAAA,eAAAwC,WAAA,WACA3C,KAAAC,SAAAE,KAAA,WAAA0C,OAAA,WACA7C,KAAAyB,0BACAzC,EAAAgB,KAAAwB,uBAAA8D,eAAA,WAGAtF,KAAAC,SAAAsF,SAGAvG,EAAAT,QAAAiH,IAAA,sBAAAxF,KAAAiC,OAEAiD,GAGAO,QAAA,WACA,GAAAb,GAAA5F,EAAAI,GAAAC,SAAAwF,UAAA7E,KAAA0C,aAEA1C,MAAAa,QAAAgC,OAAA,WACA7C,KAAAM,SAAAqC,WAAA,WACA3C,KAAAiB,OAAAd,KAAA,gBAAAuF,SAAA,YAAAN,KAAA,WAAA,YACApF,KAAAQ,UAAAmC,WAAA,WACA3C,KAAAY,eAAAT,KAAA,aAAAyC,SAAA,WACA5C,KAAAc,iBAAAsE,KAAA,WAAA,YACApF,KAAAW,SAAAyE,KAAA,WAAA,YACApF,KAAAS,SAAA2E,KAAA,WAAA,YAEAR,EAAAe,SACAf,EAAAe,QAAAZ,KAAA/E,MACA4F,QAAA,IAIA5F,KAAAsB,YAAA,EACAtB,KAAAC,SAAAyF,SAAA,YACA1F,KAAAC,SAAAgD,QAAA,yBAGA4C,OAAA,WACA,GAAAjB,GAAA5F,EAAAI,GAAAC,SAAAwF,UAAA7E,KAAA0C,aAEA1C,MAAAa,QAAAgC,OAAA,UACA7C,KAAAM,SAAAqC,WAAA,UACA3C,KAAAiB,OAAAd,KAAA,gBAAA2F,YAAA,YAAAC,WAAA,YACA/F,KAAAQ,UAAAmC,WAAA,UACA3C,KAAAY,eAAAT,KAAA,aAAAyC,SAAA,UACA5C,KAAAc,iBAAAiF,WAAA,YAEA/F,KAAAW,SAAAqF,SAAA,aACAhG,KAAAW,SAAAoF,WAAA,YAEA/F,KAAAS,SAAAuF,SAAA,aACAhG,KAAAS,SAAAsF,WAAA,YAKA/F,KAAAW,SAAAqF,SAAA,aAAAhG,KAAAS,SAAAuF,SAAA,aACAhG,KAAAY,eAAAgC,SAAA,WAIA,IAAAqD,SAAAjG,KAAAI,OAAA8F,OAAA,IACAlG,KAAAQ,UAAAmC,WAAA,UAEA3C,KAAAQ,UAAAmC,WAAA,WAGAiC,EAAAe,SACAf,EAAAe,QAAAZ,KAAA/E,MACA4F,QAAA,IAIA5F,KAAAsB,YAAA,EACAtB,KAAAC,SAAA6F,YAAA,YACA9F,KAAAC,SAAAgD,QAAA,wBAGAkD,eAAA,SAAA5B,GACA,GAAA3E,GAAA2E,KACAI,UAAA/E,EAAAmC,gBACA,OAAAnC,EAAAmC,cACA/B,KAAAqB,YAAA,EAEArB,KAAAqB,aAAAzB,EAAAmC,cAIA,IAAAqE,KACAxG,GAAAwG,oBACAA,EAAAxG,EAAAwG,kBAEAxG,EAAAyG,4BACArG,KAAAuC,qBACAvC,KAAAuC,qBAAA7D,EAAAmD,MAAA7B,KAAAuC,qBAAA6D,GAEApG,KAAAuC,qBAAA6D,IAKApG,KAAAuC,uBACA6D,EAAA1H,EAAAmD,MAAA7B,KAAAuC,qBAAA6D,GAGA,IAAAE,IACAC,KAAAvG,KAAAF,YACA0G,UAAAxG,KAAAqB,YACAoF,QACA/C,KAAA,MACAV,MAAA,OAGAhD,MAAAM,SAAAlD,OAAA,IACAkJ,EAAAG,OAAAzG,KAAAM,SAAAqC,WAAA,iBAGA3C,KAAAyB,2BACA6E,EAAAI,SAAA,GAEA1G,KAAAQ,UAAApD,OAAA,IACAkJ,EAAAI,SAAAT,SAAAjG,KAAAQ,UAAAmC,WAAA,gBAAAK,MAAA,KAIA,IAAA2D,GAAA3G,KAAAa,SAAAb,KAAAa,QAAAV,KAAA,UAAAH,KAAAa,QAAAV,KAAA,SAAAwD,KACA,MAAAgD,IACAL,EAAAzD,OAAA8D,EAGA,IAAAjE,GAAA1D,EAAAI,GAAAC,SAAAwF,UAAA7E,KAAA0C,cACAkE,EAAAlE,EAAAmE,WAOA,OANAD,KACAN,EAAAM,EAAA7B,KAAA/E,KAAAsG,IAGAA,EAAA5H,EAAAmD,MAAAyE,EAAAF,IAKAU,kBAAA,SAAAjB,EAAAtB,GACA,GAAAwC,GAAA/G,KAAAC,SAAAE,KAAA,oBACA6G,EAAAhH,KAAAC,SAAAE,KAAA,sBACAP,EAAA2E,KAEA,IAAAsB,EACA7F,KAAAyB,0BAAA,EACAzB,KAAA0B,qBAAA9B,EAAAqH,UACArH,GAAAsH,iBACAtH,GAAAqH,IACAjH,KAAA2B,yBAAA/B,EACAoH,EAAAG,KACAC,OAAAJ,EAAAI,SAAAL,EAAAM,gBAEAN,EAAAO,WACA,CACA,GAAAC,GAAAvH,KAAAwB,sBACAgC,EAAA+D,EAAA/D,aACAA,GAAA8B,eACAiC,EAAA/B,IAAA,UACA+B,EAAAzB,YAAA,kBAEA9F,KAAAwB,sBAAA,KACAxB,KAAAyB,0BAAA,EACAzB,KAAA0B,qBAAA,KACA1B,KAAA2B,4BACAqF,EAAAG,KACAC,OAAAJ,EAAAI,SAAAL,EAAAM,gBAEAN,EAAAS,SAIAC,qBAAA,SAAAjE,GACA,GAAAyD,GAAAjH,KAAA0B,wBAAA,EAAA1B,KAAA0B,qBAAAiD,OACA+C,EAAAlE,EAAAkE,KACAC,EAAAnE,EAAAmE,KAEA3H,MAAAqB,YAAAsD,SAAA+C,EAAAA,EAAAE,KAEApE,EAAAyD,OAAA,GAAAjH,KAAAqB,YAAA,GAAAsG,IACA3H,KAAAwB,sBAAA8D,eAAA,MAAA2B,IAIAY,sBAAA,WACA,GAAAN,GAAAvH,KAAAE,QAAAC,KAAA,+BAGA,IADAoH,EAAAA,EAAAnK,OAAA,EAAA4C,KAAAE,QAAAqH,EACAA,EAAA/D,KAAA,qBACA+D,EAAAjC,eAAA,cACA,CACA,GAAAvF,GAAAC,KACAuE,EAAA7F,EAAAmD,SAAA7B,KAAA2B,yBACA4C,GAAA2C,WAAA,SAAAY,EAAAC,GACAhI,EAAAwB,0BAAAwG,EACAhI,EAAAmD,QACAnB,cAAA,KAGAwF,EAAAjC,eAAAf,GACAvE,KAAAwB,sBAAA+F,IAIAnD,cAAA,SAAA2D,GACA,GAAAlD,KAEA,KAAA,GAAAmD,KAAAhJ,GAAAI,GAAAC,SAAAwF,eACA5G,eAAA8G,KAAA/F,EAAAI,GAAAC,SAAAwF,UAAAmD,IACAnD,EAAAxH,KAAA2B,EAAAI,GAAAC,SAAAwF,UAAAmD,GAIAnD,GAAAzH,OAAA,EACA6K,EAAAlD,KAAA/E,KAAA,EAAA6E,EAAAkD,GAEAA,KAIAG,YAAA,SAAA1E,GACAxD,KAAAI,OAAA8F,KAAAvB,SAAAnB,EAAA2E,MAAA3E,EAAA2E,MAAA,KACAnI,KAAAK,KAAA6F,KAAAvB,SAAAnB,EAAAyD,IAAAzD,EAAAyD,IAAA,KACAjH,KAAAe,OAAAmF,KAAAvB,SAAAnB,EAAA4E,MAAA5E,EAAA4E,MAAA,MAGA/E,KAAA,WACArD,KAAAS,SAAA2E,KAAA,WAAA,YACApF,KAAAW,SAAAyE,KAAA,WAAA,YACApF,KAAA+B,cAAA,EACA/B,KAAAC,SAAAgD,QAAA,2BACAjD,KAAAkD,QACAnB,cAAA/B,KAAA+B,iBAIA0B,gBAAA,SAAAE,EAAA0E,GAGA,GAAAC,EACA,IAAA3E,IAAA3D,KAAA4B,cAAA,CACA5B,KAAA4B,cAAA+B,CACA,IAAAX,GAAAiD,SAAAtC,EAAA,IAAA,CACA2E,GAAAtF,EAAAhD,KAAAqB,YACArB,KAAAC,SAAAgD,QAAA,2BAAAD,EAAAqF,IACArI,KAAAkD,QACAnB,cAAAuG,MAKAC,WAAA,SAAA/E,GACAxD,KAAAY,eAAAkF,YAAA,UACA9F,KAAAc,iBAAAgF,YAAA,SAEA,IAAA0C,GAAAhF,EAAAmE,KACA3H,MAAAqB,YAAAsD,SAAAnB,EAAAkE,KAAAlE,EAAAkE,KAAAE,GAEA,IAAAa,GAAA,IAAAD,EAAA,EAAAxI,KAAAqB,YAAA,CAEA,IAAAmH,GAAAxI,KAAAyC,YAAAiG,cAAA,CACA1I,KAAAY,eAAA8E,SAAA,SACA,IAAAiD,GAAA3I,KAAAY,eAAAT,KAAA,iBACAwI,GAAAjE,OACA,KAAA,GAAAvH,GAAA,EAAAA,EAAAqL,EAAArL,IAAA,CACA,GAAAyL,GAAAzL,EAAA,CACAwL,GAAAE,OAAA,mBAAAD,EAAA,iBAAAA,EAAA,aAGA5I,KAAAY,eAAAT,KAAA,sBAAAwD,IAAA8E,OAEAzI,MAAAc,iBAAA4E,SAAA,UACA1F,KAAAc,iBAAA6C,IAAA8E,EAGAzI,MAAA4B,cAAA5B,KAAAqB,YAAA,EAAA,GAEArB,KAAAU,OAAAwF,KAAA,GAAAsC,GAGAxI,KAAAqB,YAAA,EAAAmH,GACAxI,KAAAS,SAAAsF,WAAA,YACA/F,KAAAS,SAAAqF,YAAA,cAEA9F,KAAAS,SAAA2E,KAAA,WAAA,YACApF,KAAAS,SAAAiF,SAAA,aAIA1F,KAAAqB,YAAA,GAAA,GACArB,KAAAW,SAAAoF,WAAA,YACA/F,KAAAW,SAAAmF,YAAA,cAEA9F,KAAAW,SAAAyE,KAAA,WAAA,YACApF,KAAAW,SAAA+E,SAAA,aAIA,IAAA1F,KAAA+B,gBACA/B,KAAA+B,cAAA,EACA/B,KAAAS,SAAAqI,GAAA,aAEA9I,KAAAW,SAAAoI,QAEA/I,KAAAS,SAAAsI,QAEA/I,KAAAW,SAAAmI,GAAA,aAEA9I,KAAAS,SAAAsI,QAEA/I,KAAAW,SAAAoI,UAKAzF,SAAA,WACAtD,KAAAS,SAAA2E,KAAA,WAAA,YACApF,KAAAW,SAAAyE,KAAA,WAAA,YACApF,KAAA+B,iBACA/B,KAAAC,SAAAgD,QAAA,+BACAjD,KAAAkD,QACAnB,cAAA/B,KAAA+B,iBAKAmB,OAAA,SAAAqB,GACAvE,KAAAyF,SAEA,IAAA5B,IAAA,EACAe,EAAA5F,EAAAI,GAAAC,SAAAwF,UAAA7E,KAAA0C,cACA9C,EAAA2E,KAEA,IAAA3E,EAAAyE,YAAArE,KAAAF,cAAAF,EAAAyE,WAAA,CACA,GAAA2E,GAAAhJ,KAAAF,WACAE,MAAAF,YAAAF,EAAAyE,WACArE,KAAA0C,SAAA1C,KAAAF,YAAA9C,MAAA,KAAA,GACAgD,KAAAmE,eAAAnE,KAAAF,aACAE,KAAAC,SAAAmF,KAAA,mBAAApF,KAAAF,aACAE,KAAAC,SAAAmF,KAAA,gBAAApF,KAAA0C,UACAmB,GAAA,EACAjE,EAAAiE,YAAAA,EAEA7D,KAAAC,SAAAgD,QAAA,0BAAAjD,KAAAF,aAEAE,KAAAyB,0BACAzB,KAAA8G,mBAAA,GAGAlC,EAAA5F,EAAAI,GAAAC,SAAAwF,UAAA7E,KAAA0C,cACAkC,EAAAqE,UACArE,EAAAqE,SAAAlE,KAAA/E,MACAgJ,SAAAA,IAKAhJ,KAAAkJ,sBAEAtJ,EAAA4E,SAAAG,SAAA/E,EAAA4E,SAAA5E,EAAA4E,UAAAX,EACA7D,KAAAsE,MAAA1E,KAEAI,KAAAyB,0BAAAzB,KAAAyB,0BAAAoC,IACA7D,KAAAO,QAAAiH,OAAAvD,OAAA,OAGA,IAAA4C,GAAA7G,KAAAmG,eAAAvG,GAEAuJ,EAAAnJ,KAAAyC,YAAAyE,WACAkC,EAAApJ,IACAmJ,GACAtC,EAGA,SAAAwC,GACAC,EAAAvE,KACAqE,GAEA5F,KAAA6F,EACAxC,YAAAA,EACAjH,QAAAA,EACAiE,YAAAA,EACAe,YAAAA,OAOAZ,OAAA,WAaA,IAZA,GAEAoD,GACAmC,EAKAC,EARAC,EAAAzJ,KAAAyC,YAAAgH,kBAAAzJ,KAAAC,SAAAmF,KAAA,qBAAApF,KAAAyC,YAAAgH,aACA7E,KAGA8E,KACAC,KAEAC,EAAA5J,KAAAC,SAAA4J,aAAA,YAEAC,EAAA,EAGAA,EAAAF,EAAAxM,QAAA4C,KAAAC,SAAA6I,GAAA,YACAU,EAAAI,EAAAE,GAEA9K,EAAAwK,GAAAV,GAAA,aACAa,EAAAtM,KAAAmM,EAAAO,MAAA,SACAP,EAAAO,MAAA,QAAA,QACAL,EAAArM,KAAAmM,IAEAM,GAOA,IAJA9J,KAAA0C,WACAkC,EAAA5F,EAAAI,GAAAC,SAAAwF,UAAA7E,KAAA0C,eAGAiC,SAAA8E,GAAAA,KAAA,GAAA,UAAAA,EAAA,CACAzJ,KAAAE,QAAAwF,SAAA,aACA6D,GACAS,OAAAhK,KAAAgB,UAAAmG,IAAA,iBACA8C,IAAAjK,KAAAgB,UAAAmG,IAAA,cAGA,IAAA+C,GAAA,SAAAT,GAAAA,KAAA,EAAAzJ,KAAAC,SAAAmH,SAAAnB,SAAAwD,EAAA,IACAU,EAAAnK,KAAAC,SAAAE,KAAA,oBAAAkH,cACA+C,EAAApK,KAAAC,SAAAE,KAAA,oBAAAkH,cACAgD,EAAA,SAAAd,EAAAS,OAAA,EAAA/D,SAAAsD,EAAAS,OAAA,IACAM,EAAA,SAAAf,EAAAU,IAAA,EAAAhE,SAAAsD,EAAAU,IAAA,GAEA7C,GAAA8C,EAAAC,EAAAC,EAAAC,EAAAC,EACAtK,KAAAgB,UAAAqG,YAAAD,OAEApH,MAAAE,QAAA4F,YAAA,YAGAlB,GAAAZ,QACAY,EAAAZ,OAAAe,KAAA/E,MACAoH,OAAApH,KAAAC,SAAAoH,cACAkD,MAAAvK,KAAAC,SAAAuK,eAIAd,EAAArL,QAAA,SAAAsB,EAAAxC,GACAwC,EAAAoK,MAAA,QAAAJ,EAAAxM,MAKAsN,YAAA,SAAA7F,EAAApB,EAAAuE,GACA,GAAAnD,EAAA1B,OA4DA0B,EAAA1B,OAAA6B,KAAA/E,MACA0K,UAAA1K,KAAAE,QACAsD,KAAAA,GACAuE,OA/DA,CACA,GAAAnD,EAAA+F,OAAA,CACA,GAAAC,GAAAhG,EAAA+F,OAAA5F,KAAA/E,MACA0K,UAAA1K,KAAAE,QACAsD,KAAAA,GAEAqH,GAAA7K,KAAAE,QAAA0K,GAGA,GAAAE,GAAA9K,KAAAE,QAAAC,KAAA,gCACA4K,EAAAD,EAAA1N,OAAA,EAAA0N,EAAA9K,KAAAE,OAKA,IAAA0E,EAAAoG,WAAA,CACA,GAAAC,GACAC,EAAAtG,EAAAuG,QAAA,aACAC,EAAAF,EAAAlO,MAAA,KACAqO,EAAAD,EAAA,EAEA,IAAA,SAAAC,GAAA,SAAAA,EAAA,CACAJ,EAAA,SAAAI,EAAArL,KAAAwD,CAIA,KAAA,GADA8H,GAAAF,EAAAG,MAAA,GACAC,EAAA,EAAAA,EAAAF,EAAAlO,OAAAoO,IAAA,CACA,GAAA7G,SAAAsG,EAAAK,EAAAE,IAEA,CACAP,KACAQ,EAAA,sEACA,OAJAR,EAAAA,EAAAK,EAAAE,IAQA,IAAA,GAAAE,GAAA,EAAAA,EAAAT,EAAA7N,OAAAsO,IAAA,CACA,GAAAC,GAAA/G,EAAAoG,WAAAjG,KAAA/E,MACA0K,UAAAK,EACAvH,KAAAA,EACAoI,MAAAF,EACAT,OAAAA,GAEAJ,GAAAE,EAAAY,QAGAF,GAAA,mFAIA,GAAA7G,EAAAiH,MAAA,CACA,GAAAC,GAAAlH,EAAAiH,MAAA9G,KAAA/E,MACA0K,UAAA1K,KAAAE,QACAsD,KAAAA,GAEAqH,GAAA7K,KAAAE,QAAA4L,GAGA/D,EAAAvE,KASAW,eAAA,SAAA4H,GACA,GAAAxH,MACAyH,EAAAD,EAAA/O,MAAA,KAAA,EAGAuH,GADAvE,KAAAJ,QAAAqM,MACAjM,KAAAJ,QAAAqM,MAAAD,IAAAhM,KAAAJ,QAAAqM,MAAAF,UAKA/L,KAAAyC,YAAA/D,EAAAmD,SAAA7B,KAAAJ,QAAA2E,IAGAV,YAAA,SAAA1C,GACA,GAAA+K,GAAAlN,EAAAmC,EAAAgL,QACAxI,EAAAuI,EAAAvI,KAEA3D,MAAAwC,yBACAxC,KAAAsB,YAAA4K,EAAAE,QAAA,eAAApG,SAAA,YACAhG,KAAAkJ,sBAEAlJ,KAAAkD,QACAmB,WAAAV,EACA5B,cAAA,SAMAmH,oBAAA,WACA,GAAAmD,GAAArM,KAAAiB,OAAAd,KAAA,gBAAAH,KAAAF,YAAA,KAEAE,MAAAwC,wBAAA,EACAxC,KAAAiB,OAAAd,KAAA,SAAAqL,KAAA,WAAA,GACAxL,KAAAiB,OAAAd,KAAA,gBAAA2F,YAAA,UAEAuG,EAAAjP,OAAA,IACAiP,EAAAb,KAAA,WAAA,GACAa,EAAAD,QAAA,eAAA1G,SAAA,WAEA1F,KAAAwC,wBAAA,KAKAiJ,EAAA,SAAAa,GACA/N,OAAAgO,SAAAhO,OAAAgO,QAAAC,MACAjO,OAAAgO,QAAAC,KAAAF,IAIA7H,EAAA,QAAAA,GAAA8C,GACA,GAAAkF,KACAlF,GAAAmF,WAAAvH,KAAA,WACA,GAAAwH,GAAA3N,EAAAgB,MACA4M,EAAAD,EAAAvH,KAAA,gBACA,UAAAwH,GACAD,EAAAE,SACAJ,EAAApP,KAAAsP,IACA,YAAAC,IACAnI,EAAAkI,GACAA,EAAAE,SACAJ,EAAApP,KAAAsP,MAGApF,EAAA7C,QACA6C,EAAAsB,OAAA4D,IAGA5B,EAAA,SAAAiC,EAAAC,GACA,GAAAC,EACA,IAAAD,IACAC,EAAAD,EAAA,OAAAA,EAAAC,OAAA,SACA,SAAAA,GAAArI,SAAAoI,EAAAJ,MAAA,CACA,GAAA5B,GAAApG,SAAAoI,EAAArC,UAAA1L,EAAA+N,EAAArC,WAAAoC,CACA/B,GAAAiC,GAAAD,EAAAJ,QAKAM,EAAA,SAAAC,EAAArI,EAAAkD,GACA,GAAAoF,GAAAD,EAAA,CACAC,GAAAtI,EAAAzH,OACA6K,EAAAlD,KAAA/E,KAAAmN,EAAAtI,EAAAkD,GAEAA,KAIAE,EAAA,SAAAmF,EAAAvI,EAAAkD,GACAlD,EAAAuI,GAAAC,WACAxI,EAAAuI,GAAAC,WAAAtI,KAAA/E,QAAA,WACAiN,EAAAlI,KAAA/E,KAAAoN,EAAAvI,EAAAkD,KAGAkF,EAAAlI,KAAA/E,KAAAoN,EAAAvI,EAAAkD,IAKAuF,EAAA,SAAAC,GACA,GAAA/J,GAAA+J,EAAA/J,QAEAxD,MAAAyB,4BACA8L,EAAA1J,aAAA0J,EAAA3N,QAAAuD,gBACAnD,KAAA6H,wBAGA7H,KAAAyH,qBAAAjE,EAAA+J,EAAA3N,UAGAI,KAAAO,QAAA+G,OAAArD,OAAA,SACAjE,KAAA6F,SAEA7F,KAAAa,QAAAoC,QAAA,wBACAO,KAAAA,EACA5D,QAAA2N,EAAA1G,YACA2G,cAAAD,EAAA3N,UAEAI,KAAAC,SAAAgD,QAAA,wBACAO,KAAAA,EACA5D,QAAA2N,EAAA1G,YACA2G,cAAAD,EAAA3N,UAIAI,KAAAC,SAAAgD,QAAA,qBAAAsK,EAAA1G,cAIAyC,EAAA,SAAAiE,GACA,GAAA/J,GAAA+J,EAAA/J,QAEAxD,MAAAyB,yBAEAzB,KAAAuB,+BAEAvB,KAAAkI,YAAA1E,GACAxD,KAAAuI,WAAA/E,GAGA,IAAAzD,GAAAC,IACAA,MAAAyK,YACA8C,EAAA3I,YACApB,EACA,SAAAiK,GACAF,EAAA/J,KAAAiK,EACAH,EAAAvI,KAAAhF,EAAAwN,KAuDA,OA/CAjO,GAAAoO,UAAAC,YAAArO,EAAAoO,UAAAjD,YAIAzL,EAAAI,GAAAC,SAAA,SAAAuO,GACA,GACAC,GADAzP,EAAA0P,MAAAJ,UAAAnC,MAAAxG,KAAAgJ,UAAA,GAGAC,EAAAhO,KAAAmF,KAAA,WACA,GAAA8I,GAAAjP,EAAAgB,MACAwD,EAAAyK,EAAAzK,KAAA,eACA5D,EAAA,gBAAAgO,IAAAA,CAEApK,IACAyK,EAAAzK,KAAA,cAAAA,EAAA,GAAAlE,GAAAU,KAAAJ,IAGA,gBAAAgO,KACAC,EAAArK,EAAAoK,GAAAtP,MAAAkF,EAAApF,KAIA,OAAAuG,UAAAkJ,EAAAG,EAAAH,GAGA7O,EAAAI,GAAAC,SAAAyC,UACAoF,WAAA,SAAAtH,EAAAmI,GACAA,GAAAI,MAAA,EAAAlB,IAAA,EAAAiH,SAAAxG,KAAA,EAAAC,MAAA,EAAAS,MAAA,KAEAlE,eACAwE,cAAA,GACAe,gBACAwC,MAAA,KACAnJ,kBAAA,EACAC,aAAA,GAGA/D,EAAAI,GAAAC,SAAAwF,aAEA7F,EAAAI,GAAAC,SAAA8O,YAAA7O,EAEAN,EAAAI,GAAAC,SAAA+O,WAAA,WAEA,MADApP,GAAAI,GAAAC,SAAAF,EACAa,MAIAhB,EAAAI,GAAAC,WAIA9B,EAAA,qCACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,cACA,SAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,GAUAA,EAAAI,GAAAC,WAEAL,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAW,wBAAA,WACArO,KAAAE,QAAAC,KAAA,wBAAAoF,SACAvF,KAAAE,QAAAC,KAAA,0CAAA2F,YAAA,aAGA9G,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAY,qBAAA,SAAA1C,EAAA2C,GACA,GAAAC,GAAAxO,KAAAE,QAAAC,KAAA,yCACAH,KAAAyC,YAAAgM,4BAAAF,KACAC,EAAArO,KAAA,aAAA2F,YAAA,UACA0I,EAAArO,KAAA,MAAAgF,KAAA,WACA,GAAAuJ,GAAA1P,EAAAgB,MAAAG,KAAA,iBAAAyL,EAAA,GAAA,KAAAnF,OAAA,WAAA,OAAAzH,EAAAgB,MAAA2O,SAAA3I,SAAA,UACA0I,GAAAhJ,SAAA,cAKA1G,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAkB,sBAAA,WACA,GAAA3F,KAQA,OAPAjJ,MAAAE,QAAAC,KAAA,mEAAAgF,KAAA,WACA,GAAA0J,GAAA7P,EAAAgB,KACAiJ,GAAA5L,MACAmG,KAAAqL,EAAArL,KAAA,aACA7D,QAAAkP,MAGA5F,GAGAjK,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAoB,SAAA9P,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAkB,sBAEA5P,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAqB,sBAAA,WACA,GAAAC,GAAAhP,KAAAC,SAAAE,KAAA,0BACA8O,EAAAD,EAAAE,SAAAC,KACAC,EAAAJ,EAAAI,YACAA,GAAA,EACAJ,EAAA7O,KAAA,0BAAAgF,KAAA,WACA,GAAAkK,GAAArQ,EAAAgB,MACAmP,EAAAE,EAAAjD,QAAA,YAAA8C,SAAAC,KAAAF,EAAA,IACAI,GAAA3J,SAAA,WAAAyB,IAAA,OAAAgI,KAGAH,EAAA7O,KAAA,0BAAAgF,KAAA,WACAnG,EAAAgB,MAAA8F,YAAA,WAAAqB,IAAA,OAAA,OAKAnI,EAAAI,GAAAC,SAAA8O,YAAAT,UAAA4B,sBAAA,SAAAC,EAAAhB,GACA,GAEA/K,GACArG,EACA0R,EACAzR,EALAoS,EAAAxP,KAAAyC,YAAAgN,gBACA1P,EAAAC,KAMAkO,EAAAqB,CACAvQ,GAAA0Q,QAAAxB,KACAA,GAAAA,GAIA,IAAAyB,GAAA,SAAAC,GACAf,EAAA7P,EAAAgB,MAEAwD,EAAAqL,EAAArL,KAAA,iBACAA,EAAA0K,EAAA/Q,GAAA0S,YAAA3B,EAAA/Q,GAAA6F,OACA8M,EAAAjB,EAAAX,EAAA/Q,GAAA8L,SAAA2G,IAIAE,EAAA,SAAAC,EAAAC,EAAApE,GACA,GAAAqE,GAEAC,EAAAvL,SAAAqL,GAAAA,CACAE,IACA3B,GAAA,UAAAiB,GACAzP,EAAAsO,0BAGA0B,EAAA/J,SAAA,cACA+J,EAAArK,SAAA,aAEA3F,EAAA0C,YAAA0N,oBAAA,UAAApQ,EAAA0C,YAAAgN,mBACAQ,EAAAlQ,EAAAE,SAAAE,KAAA,wCAAAyL,EAAA,GAAA,KAEAqE,EAAAvK,SAAA,YACAuK,EAAA9P,KAAA,6BAAAuF,SAAA,YAGA3F,EAAA0C,YAAA2N,cACArQ,EAAAE,SAAAE,KAAA,yCAAAyL,EAAA,GAAA,KAAAlG,SAAA,YAGAqK,EAAA5P,KAAA,YAAAkQ,QAAA,0FAGAtQ,EAAA0C,YAAA0N,qBACAF,EAAAlQ,EAAAE,SAAAE,KAAA,wCAAAyL,EAAA,GAAA,KAEAqE,EAAAvK,SAAA,YACAuK,EAAA9P,KAAA,6BAAA2F,YAAA,YAGA/F,EAAA0C,YAAA2N,cACArQ,EAAAE,SAAAE,KAAA,yCAAAyL,EAAA,GAAA,KAAA9F,YAAA,YAGAiK,EAAA5P,KAAA,wBAAAoF,SACAwK,EAAAjK,YAAA,aAYA,KAPA1I,EADAmR,KAAA,GAAA,UAAAiB,EACAtB,EAAA9Q,OACAoS,GACAtB,EAAA9Q,OAAA,EAAA,EAEA,EAGAD,EAAA,EAAAA,EAAAC,EAAAD,IACAwH,SAAAuJ,EAAA/Q,GAAAyO,OACAiD,EAAA7O,KAAAE,QAAAC,KAAA,qEAAA+N,EAAA/Q,GAAAyO,MAAA,GAAA,KACAiD,EAAAzR,OAAA,GACA0S,EAAAjB,EAAAX,EAAA/Q,GAAA8L,SAAAiF,EAAA/Q,GAAAyO,QAEAjH,SAAAuJ,EAAA/Q,GAAA0S,UAAAlL,SAAAuJ,EAAA/Q,GAAA6F,OACAhD,KAAAE,QAAAC,KAAA,0DAAAgF,KAAAwK,IAKA3Q,EAAAI,GAAAC,SAAA8O,YAAAT,UAAA4C,kBAAA,WACA,GAAAC,GAAAvQ,KAAAC,SAAAE,KAAA,uBACAoQ,GAAApQ,KAAA,YAAAgF,KAAA,WACA,GAAAqL,GAAAxR,EAAAgB,MACAqP,EAAAmB,EAAArQ,KAAA,yBACAkP,GAAAlI,KAAAC,OAAAoJ,EAAAnJ,gBACAgI,EAAA7E,WAAA6E,EAAA7L,KAAA,iBAAAgN,EAAAhG,iBAIAxL,EAAAI,GAAAC,SAAA8O,YAAAT,UAAA+C,sBAAA,WACA,GAAAC,GAAA1Q,KAAAE,QAAAC,KAAA,iBACA6O,EAAAhP,KAAAC,SAAAE,KAAA,oBACAoQ,EAAAvQ,KAAAC,SAAAE,KAAA,iDACAwQ,EAAA3Q,KAAAC,SAAAE,KAAA,kBACAyQ,EAAA5Q,KAAAyC,YAAA0N,mBACApQ,EAAAC,IAOA,IALA,UAAAA,KAAAyC,YAAAgN,kBACAmB,GAAA,EACA5B,EAAAtJ,SAAA,yBAGAgL,EAAAtT,OAAA,EAAA,CAGA,GAAAyT,GAAA7R,EAAA,6CAAA8R,aAAAP,GACAQ,EAAAR,EAAAS,QAAAtL,SAAA,eACAqL,GAAA5Q,KAAA,cAAAyQ,EAAA,MAAArL,SACAwL,EAAA5Q,KAAA,uCAAAyQ,EAAA,MAAArL,QAGA,IAAA0L,GAAAF,EAAAC,QAAAlL,YAAA,eACAmL,GAAA9Q,KAAA,SAAAoF,QACA,IAAA2L,GAAAlS,EAAA,4CAAA6J,OAAAoI,GAIAE,EAAAD,EAAA/Q,KAAA,2CACAgR,GAAA/L,KAAA,KAAA+L,EAAA/L,KAAA,MAAA,WAEAyL,EAAAhI,OAAAkI,GACAJ,EAAA9H,OAAAqI,GACAlR,KAAAE,QAAAwF,SAAA,kBAGA1F,KAAAoR,yBAEApS,EAAA,gDAAAkC,GAAA,QAAA,WACA,GAAA0K,GAAA5M,EAAAgB,MAAA2O,OAAA,MAAA/C,OACAA,IAAA,EACA7L,EAAAE,SAAAE,KAAA,qDAAAyL,EAAA,4BAAA,GAAAyF,WAIArS,EAAAI,GAAAC,SAAA8O,YAAAT,UAAA4D,qBAAA,WACA,GAAAtC,GAAAhP,KAAAC,SAAAE,KAAA,oBACAoR,EAAAvC,EAAAuC,YACAnC,EAAAJ,EAAAI,aACAoC,EAAAxR,KAAAyC,YAAA0N,oBAAA,UAAAnQ,KAAAyC,YAAAgN,gBACAgC,EAAAzR,KAAAyC,YAAA2N,aAEAsB,EAAA1R,KAAAC,SAAAE,KAAA,oBAAAqK,aACAmH,EAAA3R,KAAAC,SAAAE,KAAA,iDAAAqK,aAEAoH,EAAA5R,KAAAC,SAAAE,KAAA,kBAAAH,KAAAC,SAAAE,KAAA,kBAAAqK,aAAA,EAEAqH,EAAAF,GAAAD,EAAAE,IAAAxC,CAGAmC,GAAA,EACAvC,EAAA7O,KAAA,0BAAAgH,IAAA,MAAAoK,GAEAvC,EAAA7O,KAAA,0BAAAgH,IAAA,MAAA,KAGAiI,EAAA,GACAoC,IACAxC,EAAA7O,KAAA,yBAAAgH,IAAA,OAAAiI,GACAJ,EAAA7O,KAAA,0BAAAgH,IAAA,OAAAiI,IAEAqC,GAAAI,IACA7C,EAAA7O,KAAA,0BAAAgH,IAAA,SAAAiI,GACAJ,EAAA7O,KAAA,2BAAAgH,IAAA,SAAAiI,MAGAoC,IACAxC,EAAA7O,KAAA,yBAAAgH,IAAA,OAAA,KACA6H,EAAA7O,KAAA,0BAAAgH,IAAA,OAAA,MAEAsK,IACAzC,EAAA7O,KAAA,0BAAAgH,IAAA,QAAA,KACA6H,EAAA7O,KAAA,2BAAAgH,IAAA,QAAA,QAKAnI,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAoE,uBAAA,WACA,GAEA3U,GACAC,EAHA2U,EAAA,GACAhS,EAAAC,KAGAuQ,EAAAvQ,KAAAC,SAAAE,KAAA,iDACA6R,EAAAhS,KAAAE,QAAAC,KAAA,iBAEA,KAAAhD,EAAA,EAAAC,EAAA4C,KAAAyC,YAAA2N,aAAAlC,MAAA9Q,OAAAD,EAAAC,EAAAD,IAAA,CACA,GAAA6P,GAAAhN,KAAAyC,YAAA2N,aAAAlC,MAAA/Q,GACA+I,EAAA8G,EAAA9G,IAEA6L,IAAA,gCAAA/E,EAAAiF,KAAA,0BAAA/L,EAAA,YAGA,GAAAgM,GAAA,mRAKAH,EACA,aAEA,IAAAC,EAAA5U,OAAA,EAAA,CACA,GAAA+U,GAAAnT,EAAA,qDAAAgB,KAAAoS,mBAAA,cAAAtB,aAAAP,GACA8B,EAAA9B,EAAAS,QAAAtL,SAAA,gBAKA,IAJA2M,EAAAlS,KAAA,uBAAAoF,SACA8M,EAAAlS,KAAA,0BAAAoF,SAGA,UAAAvF,KAAAyC,YAAAgN,iBAAA,WAAAzP,KAAAyC,YAAAgN,gBACA4C,EAAAlS,KAAA,YAAA+F,KAAA,0CAAAgM,EAAA,eAEA,WAAAlS,KAAAyC,YAAAgN,iBAEA4C,EAAAlS,KAAA,cAAAiF,KAAA,WAAA,gBAEA,CACA,GAAAkN,GAAAtS,KAAAyC,YAAA2N,aAAAkC,OAAA,uCACAD,GAAAlS,KAAA,YAAAuF,SAAA,iBAAAQ,KAAA,OAAAoM,EAAA,sCAAAA,EAAA,eAIA,GAAAC,GAAAF,EAAAlS,KAAA,KAEAoS,GAAApN,KAAA,SAAAqN,GACAxT,EAAAgB,MAAAkG,KAAAgM,GACAlT,EAAAgB,MAAAG,KAAA,KAAAiF,KAAA,WAAAoN,EAAA,KAGAL,EAAAtJ,OAAAwJ,GAEArS,KAAAE,QAAAwF,SAAA,mBAGA1F,KAAAyS,wBAGAzS,KAAAC,SAAAE,KAAA,qCAAAe,GAAA,QAAA,SAAAC,GACA,IAAApB,EAAAuB,WAAA,CACA,GAAAoR,GAAA1T,EAAAgB,MAAAwD,KAAA,UACAmP,EAAA3T,EAAAgB,MAAAwD,KAAA,OACAyF,GACAyJ,WAAAA,EACAE,MAAAD,GAEA5S,GAAA8S,oBAAA5J,EAAA9H,MAIAnB,KAAAC,SAAAE,KAAA,qCAAAe,GAAA,QAAA,SAAAC,GACA,IAAApB,EAAAuB,WAAA,CACA,GAAAoR,GAAA1T,EAAAgB,MAAAwD,KAAA,UACAyF,GACAyJ,WAAAA,EACAE,SAEAE,EAAA,0CAEA,YAAA/S,EAAA0C,YAAAgN,kBACAqD,EAAA,qCAEA/S,EAAAE,SAAAE,KAAA2S,GAAA3N,KAAA,SAAA4N,GACA9J,EAAA2J,KAAAvV,KAAA0V,EAAA,KAGAhT,EAAA8S,oBAAA5J,EAAA9H,OAKAnC,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAmF,oBAAA,SAAA5J,EAAA9H,GAKA,IAAA,GAJA6R,MACAC,EAAAjU,EAAAkU,KAAAlT,KAAAyC,YAAA2N,aAAAlC,MAAA,SAAAiF,GACA,MAAAA,GAAAlB,OAAAhJ,EAAAyJ,aACA,GACAvV,EAAA,EAAAiW,EAAAnK,EAAA2J,KAAAxV,OAAAD,EAAAiW,EAAAjW,IAAA,CACA,GAAAkW,GAAArT,KAAAE,QAAAC,KAAA,qDAAA8I,EAAA2J,KAAAzV,GAAA,IACA6V,GAAA3V,MACAsP,KAAA0G,EACAC,QAAAD,EAAA7P,KAAA,eAOA,GAJA,IAAAwP,EAAA5V,SACA4V,EAAAA,EAAA,IAGAC,EAAAM,YAAA,CACA,GAAAxL,GAAA,YACAkL,GAAAM,YAAAP,EAAAjL,EAAA5G,KAIAnC,EAAAI,GAAAC,SAAA8O,YAAAT,UAAA+E,sBAAA,WACA,GAAAT,GAAAhS,KAAAC,SAAAE,KAAA,sCACAqT,EAAAxB,EAAA7R,KAAA,eACAoQ,EAAAvQ,KAAAC,SAAAE,KAAA,iCAEAqT,GAAAnM,YAAAkJ,EAAApQ,KAAA,eAAAkH,eACAmM,EAAArT,KAAA,0BAAAkH,YAAAmM,EAAAnM,eACA2K,EAAA7R,KAAA,2BAAAgF,KAAA,SAAAhI,GACA6B,EAAAgB,MAAAqH,YAAAkJ,EAAApQ,KAAA,eAAAhD,EAAA,QAAAkK,kBAIArI,EAAAI,GAAAC,SAAA8O,YAAAT,UAAA0D,uBAAA,WACA,GAAAb,GAAAvQ,KAAAC,SAAAE,KAAA,gDAEAH,MAAAC,SAAAE,KAAA,wCAAAgF,KAAA,SAAAhI,GACA6B,EAAAgB,MAAAoH,OAAAmJ,EAAApQ,KAAA,SAAAhD,EAAA,KAAAiK,WAGA,IAAAqM,GAAAlD,EAAApQ,KAAA,YAAAqK,YACAxK,MAAAC,SAAAE,KAAA,iDAAAoK,MAAAkJ,IAGAzU,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAgG,6BAAA,WAgEA,QAAAC,GAAAC,GACA7T,EAAA8T,wBAAA,EACAD,EAAAE,SAAA,gBACA/T,GAAA8T,uBAlEA,GAAAE,GAAA/T,KAAAC,SAAAE,KAAA,2CACA6T,EAAAhU,KAAAC,SAAAE,KAAA,qCACA8T,EAAAjU,KAAAC,SAAAE,KAAA,wBACAJ,EAAAC,IAGAA,MAAAC,SAAAE,KAAA,iBAAAe,GAAA,uBAAA,SAAAC,GACA,GAAAyK,GAAA5M,EAAAgB,MAAA4L,OACAA,IAAA,EACA,cAAAzK,EAAA+S,KACAD,EAAA9T,KAAA,sBAAAyL,EAAA,KAAAlG,SAAA,WAEAuO,EAAA9T,KAAA,sBAAAyL,EAAA,KAAA9F,YAAA,aAIAkO,EAAAF,WACAC,EAAAD,UAGA,IAAAK,GAAAnU,KAAAC,SAAAE,KAAA,wCACAiU,EAAApU,KAAAC,SAAAE,KAAA,qDACAgU,GAAAjT,GAAA,SAAA,SAAAC,GAGA,GAFAA,EAAAkT,kBAEAtU,EAAA8T,uBACA,GAAA9T,EAAAuB,WACAqS,EAAA3U,EAAAmC,EAAAmT,oBACA,CACA,GAAA3B,GAAA3T,EAAAgB,MAAAoF,KAAA,WACAuN,GAAA1M,SAAA0M,EAAA,IAAA,EACA5S,EAAAE,SAAAE,KAAA,qDAAAwS,EAAA,KAAAtB,OAEA,IAAAkD,GAAAxU,EAAAE,SAAAE,KAAA,gDAAA/C,MACA,KAAAmX,GACAH,EAAA5I,KAAA,WAAA,GACA4I,EAAA5I,KAAA,iBAAA,IACA+I,IAAAJ,EAAA/W,QACAgX,EAAA5I,KAAA,WAAA,GACA4I,EAAA5I,KAAA,iBAAA,KAEA4I,EAAA5I,KAAA,WAAA,GACA4I,EAAA5I,KAAA,iBAAA,OAOA4I,EAAAlT,GAAA,SAAA,SAAAC,GACApB,EAAA8T,yBACA9T,EAAAuB,WACAqS,EAAA3U,EAAAmC,EAAAmT,gBACAtV,EAAAgB,MAAA8I,GAAA,aACA/I,EAAAE,SAAAE,KAAA,0DAAAkR,QACAtR,EAAAE,SAAAgD,QAAA,2BAAA8Q,KAEAhU,EAAAE,SAAAE,KAAA,oDAAAkR,QACAtR,EAAAE,SAAAgD,QAAA,6BAAA8Q,QAaA/U,EAAAI,GAAAC,SAAAyC,SAAApD,EAAAmD,SAAA7C,EAAAI,GAAAC,SAAAyC,UACA0S,oBAAA,KACAC,mBAAA,EACAC,oBAAA,EACAjG,4BAAA,EACAkG,qBAAA,EACAC,iBAAA,iBACAnF,iBAAA,EACAoF,mBAAA,EACAC,iBAAA,KACA3E,mBAAA,EACAC,cAAA,IAIApR,EAAAI,GAAAC,SAAAwF,UAAAkQ,MACAjQ,QAAA,WACA9E,KAAAyC,YAAAiS,oBACA1U,KAAAsQ,qBAGAzJ,YAAA,SAAAjH,GAOA,MANAI,MAAAgV,qBACApV,EAAAqV,cAAAjV,KAAAgV,oBAEAhV,KAAAkV,oBACAtV,EAAAuV,aAAAnV,KAAAkV,mBAEAtV,GAEA+F,QAAA,SAAAmC,GACA9H,KAAAyC,YAAA2N,eACAtI,EAAAlC,QAGA5F,KAAAE,QAAAC,KAAA,4BAAA4F,WAAA,YACAqP,EAAArQ,KAAA/E,OAHAA,KAAAE,QAAAC,KAAA,4BAAAiF,KAAA,WAAA,cAOAiI,WAAA,SAAAvF,EAAAC,GACA/H,KAAAgV,mBAAA,KACAhV,KAAAkV,kBAAA,KACAlV,KAAAqV,yBAAAC,IACAtV,KAAAoS,mBAAAzN,SAAA3E,KAAAyC,YAAA2N,aAAA7F,MAAAvK,KAAAyC,YAAA2N,aAAA7F,MAAA,GACAvK,KAAAuV,cAAA,EACAxN,KAEA/D,OAAA,WACAwR,EAAAzQ,KAAA/E,KAAAA,KAAAC,SAAAE,KAAA,4CACAH,KAAAyC,YAAA2N,cACApQ,KAAAyS,yBAEAzS,KAAAyC,YAAA0N,oBAAA,UAAAnQ,KAAAyC,YAAAgN,kBACAzP,KAAAoR,yBAEApR,KAAAyC,YAAAiS,oBACA1U,KAAAsQ,qBAGArH,SAAA,WACA,GACA1E,GADAkR,EAAAzV,KAAAyC,YAAAkS,mBAGA3U,MAAA0V,kBAAA,EACA1V,KAAAO,QAAAmF,SAAA,YAEA+P,IACAlR,EAAA,gBAAAkR,GAAAA,KACAzV,KAAA8G,mBAAA,EAAAvC,KAGAoG,OAAA,SAAA7C,GACA,GAEAyI,GAFAoF,EAAA7N,EAAA4C,UAAAvK,KAAA,kBACAJ,EAAAC,IA+BA,OA3BA8H,GAAAtE,KAAA2E,MAAA,EACAnI,KAAAuV,cAAA,EAEAvV,KAAAuV,cAAA,EAGAI,EAAAvY,OAAA,IACAuY,EAAA3W,EAAA,6BAAAgB,KAAAqV,yBAAA,gNACAM,EAAAxV,KAAA,0BAAAe,GAAA,yBAAA,WACAnB,EAAA0C,YAAAiS,oBACA3U,EAAAgP,2BAGAhP,EAAA0C,YAAA0N,oBAAApQ,EAAA0C,YAAA2N,cAAA,UAAArQ,EAAA0C,YAAAgN,kBACA3H,EAAA4C,UAAAxJ,GAAA,yBAAA,WACAnB,EAAAuR,yBAIAxJ,EAAA4C,UAAA7B,OAAA8M,IAEA7N,EAAA4C,UAAA5E,YAAA,wDAEAyK,EAAAoF,EAAAxV,KAAA,SACAyV,EAAA7Q,KAAA/E,KAAAuQ,EAAAzI,EAAAtE,MACAqS,EAAA9Q,KAAA/E,KAAAuQ,EAAAzI,EAAAtE,OAEA,GAEAwH,WAAA,SAAAlD,GAEA,MADAgO,GAAA/Q,KAAA/E,KAAA8H,EAAA4C,UAAA5C,EAAAmD,OAAAnD,EAAA8D,QACA,GAEAC,MAAA,WACA,GAAAkK,EA0BA,QAxBA/V,KAAAyC,YAAA0N,oBAAA,UAAAnQ,KAAAyC,YAAAgN,iBAAAzP,KAAAuV,cACAvV,KAAAyQ,wBAGAzQ,KAAAyC,YAAA2N,eAAApQ,KAAAuV,eACAvV,KAAA8R,yBACA9R,KAAAyS,0BAGAzS,KAAAyC,YAAA0N,qBAAAnQ,KAAAyC,YAAA2N,cAAA,UAAApQ,KAAAyC,YAAAgN,iBAAAzP,KAAAuV,eACAvV,KAAAsR,uBACAtR,KAAA0T,gCAGA1T,KAAAyC,YAAAiS,qBACA1U,KAAAsQ,oBACAtQ,KAAA+O,yBAGAgH,EAAA/V,KAAAE,QAAAC,KAAA,gEACA4V,EAAA3Y,OAAA,GACA4C,KAAAsO,qBAAAyH,EAAAvS,KAAA,mBAGA,IAMA,IAAAwS,GAAA,SAAAC,EAAAC,GACA,IAAAA,EACA,OAAA,CAEA,KAAAD,GAAAC,EAAA9Y,SAAA6Y,EAAA7Y,OACA,OAAA,CAEA,KAAA,GAAAD,GAAA,EAAAgZ,EAAAD,EAAA9Y,OAAAD,EAAAgZ,EAAAhZ,IAAA,CACA,IAAA8Y,EAAA9Y,GACA,OAAA,CAGA,KAAA,GAAAiZ,KAAAF,GAAA/Y,GACA,GAAA+Y,EAAA/Y,GAAAc,eAAAmY,IAAAH,EAAA9Y,GAAAiZ,KAAAF,EAAA/Y,GAAAiZ,GACA,OAAA,EAIA,OAAA,GAGAC,EAAA,SAAAC,EAAA1D,EAAAhD,EAAA2G,EAAAC,GACA,GAAAC,GAAAF,EAAAC,GAAAC,UACAC,EAAA9D,EAAAhD,GAAA2G,EAAAC,GAAA3G,UACA8G,EAAA3X,EAAA,aACAuL,EAAAgM,EAAAC,GAAAI,YAEA/G,EAAA0G,EAAAC,GAAA3G,QAcA,IAbA7P,KAAAyC,YAAA2N,gBAAA,GAAA,gBAAAP,IACA6G,EAAA,gEAAA1W,KAAAoS,mBAAA,cAGAsE,EAAA/R,SAAA+R,EAAAA,EAAA,GAEAC,EAAAjR,SAAAf,SAAA8R,EAAAA,EAAA,IAAA5N,OAAA6N,GACA/R,SAAA4F,GACAoM,EAAAnM,WAAAD,GAGA+L,EAAAzN,OAAA8N,GAEA,UAAA3W,KAAAyC,YAAAgN,iBAAA,iBAAA8G,EAAAC,GAAA3G,SAAA,CACA,GAAAgH,GAAA,oBAAAjH,EAAA,kIAGA+G,GAAAzQ,KAAA2Q,GAGA,MAAAF,IAGAG,EAAA,SAAAC,EAAAR,EAAA3K,GACA,GAeAoL,GACAP,EACAQ,EACAC,EACAC,EAnBAC,EAAA,yBACAC,EAAA,uBACAC,EAAA,uBACAC,EAAAvY,EAAA,gFACAwY,GAAAxX,KAAAC,SAAAmF,KAAA,MAAA,KAAA,IAAA,WAEAyR,EAAA,iEACAW,EAAA,qJAMAC,EAAAzY,EAAA,aACAe,EAAAC;AAqBA,GAdAuX,EAAA/T,KAAA,gBAAAoI,GACA2L,EAAAlH,QAAAkG,EAAA3K,GAAA0G,OACAmF,EAAAvR,KAAAqR,EAAArR,QAAA/F,KAAA,QAAA4F,WAAA,MAEA,iBAAAwQ,EAAA3K,GAAAiE,SACA4H,EAAA5O,OAAA0O,GAEAE,EAAA5O,OAAAgO,GAGAG,EAAAS,EAAAC,IAAAH,GACAL,EAAAK,EAAApX,KAAAkX,GACAF,EAAAD,EAAAQ,IAAAD,EAAAtX,KAAAkX,IAEArX,KAAAyC,YAAA2N,cAAA,gBAAAmG,EAAA3K,GAAAiE,SAAA,CACA,GAAAtF,GAAAvK,KAAAoS,kBACAqF,GAAAtQ,IAAA,QAAAoD,GACAgN,EAAApQ,IAAA,QAAAoD,GAGAkM,EAAAF,EAAA3K,GAAA6K,UACA9R,SAAA8R,GACAO,EAAAtR,SAAA+Q,GAGAQ,EAAAV,EAAA3K,GAAAqL,SACAA,IACAD,EAAAtR,SAAA,YACA6R,EAAArW,GAAA,wBAAA,WACAnB,EAAAuB,aACAvB,EAAAmV,kBAAA,gBAAA+B,GAAAA,EAAAV,EAAA3K,GAAAiE,SACA0H,EAAAvR,SAAA,UACAkR,EAAAlR,SAAAsR,IACAH,EAAArR,YAAAwR,GAAA5R,SAAA0R,GACArX,EAAAiV,mBAAA,QACAjV,EAAA0C,YAAAoS,mBAIAmC,EAAAlR,YAAA,UACAqR,EAAArR,YAAAsR,GACArX,EAAAiV,mBAAA,KACAjV,EAAAmV,kBAAA,OANAiC,EAAArR,YAAAsR,GAAA1R,SAAA4R,GACAvX,EAAAiV,mBAAA,QAQA+B,EAAA5W,KAAA,8BAAA2F,YAAA,UACAqR,EAAArR,YAAAsR,GAAA1R,SAAA4R,GACAvX,EAAAiV,mBAAA,MACAgC,EAAAtR,SAAA,WAGA3F,EAAAmD,QACAC,eAAA,EACApB,cAAA,WAMA,QAAAwU,EAAA3K,GAAAqJ,eAAA,SAAAsB,EAAA3K,GAAAqJ,gBACA8B,EAAA5W,KAAA,8BAAA2F,YAAA,UACAkR,EAAAtR,SAAA,mBACA,QAAA6Q,EAAA3K,GAAAqJ,eACAkC,EAAAzR,SAAA4R,GACAtX,KAAAgV,mBAAA,QAEAmC,EAAAzR,SAAA0R,GACApX,KAAAgV,mBAAA,QAGAhV,KAAAkV,kBAAA,gBAAA+B,GAAAA,EAAAV,EAAA3K,GAAAiE,UAGAkH,EAAAlO,OAAA4O,IAGAE,EAAA,SAAAtY,GACA,GAAAuY,GAAA,UAAAvY,EAAAoD,YAAAgN,gBACAoI,EAAAxY,EAAAoD,YAAA2N,aACA0H,EAAAzY,EAAAY,QAEA,KAAAZ,EAAAiC,WAAA,CACA,GAAAuN,GAAA7P,EAAAgB,MACA4L,EAAA5M,EAAAgB,MAAA4L,QAAA,EACAmM,EAAAD,EAAA3X,KAAA,uCAAAyL,EAAA,KACAoM,EAAAF,EAAA3X,KAAA,wCAAAyL,EAAA,KACAqM,EAAAH,EAAA3X,KAAA,uCAAAyL,EAAA,qBAEAiD,GAAA/F,GAAA,cACA+F,EAAA/I,YAAA,YACA8R,GACAK,EAAA5G,QACA0G,EAAAjS,YAAA,YACA+R,GACAG,EAAAlS,YAAA,aAGA+I,EAAA1O,KAAA,wBAAAoF,SAGAuS,EAAA7U,QAAA,6BAAA4L,KAEA+I,GAUAK,EAAA5G,QACAxC,EAAAnJ,SAAA,YACAqS,EAAArS,SAAA,YACAmS,GACAG,EAAAtS,SAAA,cAbArG,EAAAa,QAAAC,KAAA,wBAAAoF,SACAlG,EAAAa,QAAAC,KAAA,oCAAAgF,KAAA,WACAnG,EAAAgB,MAAA8F,YAAA,YACAgS,EAAA7U,QAAA,6BAAAjE,EAAAgB,SAEA6O,EAAA1O,KAAA,YAAAkQ,QAAA,uFACAxB,EAAAnJ,SAAA,YACAqS,EAAArS,SAAA,aASAoS,EAAA7U,QAAA,2BAAA4L,IAGAuG,EAAArQ,KAAA1F,KAIAyW,EAAA,SAAAoC,EAAAtF,EAAAhH,GACA,GAAA0K,GAAAtX,EAAA,YAEA,IAAAgB,KAAAyC,YAAAgN,kBACA6G,EAAA9S,KAAA,YAAAoP,EAAAhH,IAEA,WAAA5L,KAAAyC,YAAAgN,iBAAA,CACA6G,EAAA5Q,SAAA,cACA4Q,EAAAlR,KAAA,WAAA,EAEA,IAAA/F,GAAAW,IACAsW,GAAApV,GAAA,wBAAA,WACAyW,EAAA5S,KAAA/E,KAAAX,KAIAiX,EAAA6B,MAAA,SAAAhX,GACA,KAAAA,EAAAyC,SAEA0S,EAAArT,QAAA,2BAMAjD,KAAAyC,YAAA2N,eAAApQ,KAAAyC,YAAAgN,iBACA6G,EAAA9S,KAAA,YAAAoP,EAAAhH,GAIA,KAAA,GADA2K,MACApZ,EAAA,EAAAC,EAAA4C,KAAAoY,aAAAhb,OAAAD,EAAAC,EAAAD,IACAoZ,EAAAlZ,KAAAgZ,EAAAtR,KAAA/E,KAAAsW,EAAA1D,EAAAhH,EAAA5L,KAAAoY,aAAAjb,GAKA,IAFA+a,EAAArP,OAAAyN,GAEAtW,KAAAyC,YAAA+R,oBACA,IAAA,GAAAgC,GAAA,EAAA6B,EAAA9B,EAAAnZ,OAAAoZ,EAAA6B,EAAA7B,IACA,iBAAAxW,KAAAoY,aAAA5B,GAAA3G,UAAA,gBAAA7P,KAAAoY,aAAA5B,GAAA3G,UACA7P,KAAAyC,YAAA+R,qBACA9J,UAAA4L,EACAgC,WAAAtY,KAAAoY,aAAA5B,GAAA3G,SACAlD,KAAA4J,EAAAC,GACAlD,QAAAV,EAAAhH,IACA,aAKA5L,MAAAyC,YAAAqS,kBACA9U,KAAAyC,YAAAqS,kBACApK,UAAAwN,EACAvL,KAAA2J,EACAhD,QAAAV,EAAAhH,IACA,eAIAiK,EAAA,SAAAtF,EAAA/M,GACA,GACA+U,GADAL,EAAA3H,EAAApQ,KAAA,QAGA+X,GAAA9a,OAAA,IACA8a,EAAAlZ,EAAA,yCACAuR,EAAA1H,OAAAqP,IAGA,gBAAA1U,GAAAgV,OAAAhV,EAAAgV,MAAApb,OAAA,GACAmb,EAAAvZ,EAAA,8CAAAgB,KAAAoY,aAAAhb,OAAA,gBACAmb,EAAApY,KAAA,MAAA0I,OAAArF,EAAAgV,OACAN,EAAArP,OAAA0P,IACA/U,EAAA0K,OAAA1K,EAAA0K,MAAA9Q,OAAA,IACAmb,EAAAvZ,EAAA,kCAAAgB,KAAAoY,aAAAhb,OAAA,gBACAmb,EAAApY,KAAA,MAAA0I,OAAA7I,KAAAyC,YAAAmS,kBACAsD,EAAArP,OAAA0P,KAIA3C,EAAA,SAAArF,EAAA/M,GACA,GAEArG,GACAC,EACA2Z,EAJAR,EAAA/S,EAAA+S,YACAkC,EAAAlI,EAAApQ,KAAA,QAKA,IAAAH,KAAA0V,kBAAAM,EAAAhW,KAAAoY,aAAA7B,IAAA,IAAAkC,EAAArb,OAAA,CAKA,GAJAqb,EAAAlT,SAIA,UAAAvF,KAAAyC,YAAAgN,kBAAAzP,KAAAuV,aAAA,CACA,GAAAmD,IACApG,MAAA,IACAzC,SAAA,eACAoH,UAAA,EAEAV,GAAAoC,OAAA,EAAA,EAAAD,GAQA,GALA1Y,KAAAoY,aAAA7B,EACAvW,KAAA0V,kBAAA,EACA1V,KAAAO,QAAAuF,YAAA,YAGA9F,KAAAyC,YAAA2N,aAAA,CACA,GAAAwI,IACAtG,MAAAtS,KAAAyC,YAAA2N,aAAAkC,OAAA,wCACAzC,SAAA,cACAoH,UAAA,EACA1M,MAAAvK,KAAAoS,mBAEAmE,GAAAlZ,KAAAub,GAMA,IAFAH,EAAAzZ,EAAA,iDACA+X,EAAA0B,EAAAtY,KAAA,MACAhD,EAAA,EAAAC,EAAAmZ,EAAAnZ,OAAAD,EAAAC,EAAAD,IACA2Z,EAAA/R,KAAA/E,KAAA+W,EAAAR,EAAApZ,EAIA,IAFAoT,EAAAF,QAAAoI,GAEA,UAAAzY,KAAAyC,YAAAgN,kBAAAzP,KAAAuV,aAAA,CAGA,GAAAsD,GAAA7Y,KAAAC,SAAAE,KAAA,2CAAAqK,aACAsO,EAAA9Z,EAAAkU,KAAAqD,EAAA,SAAAwC,GACA,MAAA,iBAAAA,EAAAlJ,WACA,EACAiJ,GAAAvO,MAAAsO,EAEArD,EAAAzQ,KAAA/E,KAAA+W,KAIAvB,EAAA,SAAAuB,GACA,GAEA5Z,GACAC,EACA4b,EACAC,EALAC,KACAnZ,EAAAC,IAMA,IAAAA,KAAAyC,YAAAgS,oBACAtX,EAAA,EACA8b,EAAA,EACAlC,EAAA5W,KAAA,MAAAgF,KAAA,WACA,GACAoF,GADAiG,EAAAxR,EAAAgB,KAEA,IAAA2E,SAAA5E,EAAAqY,aAAAjb,GAAAoN,MACAA,EAAAxK,EAAAqY,aAAAjb,GAAAoN,MACAiG,EAAAhG,WAAAD,GACA0O,GAAAzI,EAAAhG,aACAzK,EAAAqY,aAAAjb,GAAAyZ,YAAArM,MACA,CACA,GAAAC,GAAAgG,EAAArQ,KAAA,0BAAAqK,YACA0O,GAAA7b,MACAqR,IAAA8B,EACA5E,MAAAzO,EACAgc,SAAA3O,IAIArN,MAGAC,EAAA8b,EAAA9b,OACAA,EAAA,GAAA,CACA,GAAAsU,GAAA1R,KAAAE,QAAAC,KAAA,0BAAAqK,YAEA,KADAwO,EAAA5W,KAAAC,OAAAqP,EAAAuH,GAAA7b,GACAD,EAAA,EAAAA,EAAAC,EAAAD,IACA+b,EAAA/b,GAAAgc,SAAAH,IACAA,EAAAE,EAAA/b,GAAAgc,UAEAD,EAAA/b,GAAAuR,IAAAlE,WAAAwO,GACAhZ,KAAAoY,aAAAc,EAAA/b,GAAAyO,OAAAgL,YAAAoC,IAMA1D,EAAA,WACA,GAAA8D,GAAA7a,OAAA8a,UAAAC,UACAC,EAAAH,EAAAI,QAAA,SACAC,EAAAL,EAAAI,QAAA,UAEA,OAAAD,GAAA,EACA,MAAAtT,SAAAmT,EAAAM,UAAAH,EAAA,EAAAH,EAAAI,QAAA,IAAAD,IAAA,IACAE,EAAA,EACA,UAGA,IAGArE,EAAA,WACA,GAEAlJ,GAFAyN,EAAA,2CACAtH,EAAArS,KAAAC,SAAAE,KAAA,iBAGA,YAAAH,KAAAyC,YAAAgN,kBACAkK,EAAA,qCAGAzN,EAAAlM,KAAAE,QAAAC,KAAAwZ,GAEAzN,EAAA9O,OAAA,EACAiV,EAAAlS,KAAA,cAAA4F,WAAA,YAEAsM,EAAAlS,KAAA,cAAAiF,KAAA,WAAA,eAMA7H,EAAA,0CACA,sBACA,wBACA,wBACA,sBACA,qBACA,sBACA,cACA,SAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,GAkMA,QAAA4a,GAAAC,EAAAC,GAGA,QAAAC,KACA,GAAA9S,GAAAmB,EAAAzE,CAEAyE,GAAA0R,EAAAN,QAAA,MACAvS,EAAA6S,EAAAN,QAAA,KAAApR,EAAA,GAEAA,MAAAnB,MACAtD,EAAAjF,EAAAsb,KAAAF,EAAAJ,UAAAtR,EAAA,EAAAnB,IACAtD,EAAAgB,SAAAkV,EAAAlW,GAAAkW,EAAAlW,GAAA,GACAmW,EAAAA,EAAAJ,UAAA,EAAAtR,GAAAzE,EAAAmW,EAAAJ,UAAAzS,EAAA,IAEAgT,GAAA,EAIA,IAjBA,GAAAA,IAAA,GAiBAA,GAAAH,EAAAjX,OAAA,OAAA,GACAkX,EAAAD,EAGA,OAAAA,GA9MA9a,EAAAI,GAAAC,WAEAL,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAwM,6BAAA,WACAla,KAAAE,QAAAC,KAAA,iDAAA2F,YAAA,aAGA9G,EAAAI,GAAAC,SAAA8O,YAAAT,UAAAyM,2BAAA,WACA,GAAAlR,KAIA,OAHAjJ,MAAAE,QAAAC,KAAA,iDAAAgF,KAAA,WACA8D,EAAA5L,KAAA2B,EAAAgB,SAEAiJ,GAGAjK,EAAAI,GAAAC,SAAA8O,YAAAT,UAAA0M,2BAAA,SAAAlM,EAAAK,GAMA,QAAA8L,KACA,MAAAC,KAAApM,EAAA/Q,GAAAyO,OACAiD,EAAA7P,EAAAgB,OACA,OAEAsa,KAKA,QAAAC,KACA1L,EAAA7P,EAAAgB,MACA6O,EAAA/F,GAAAoF,EAAA/Q,GAAA2V,WACAhD,EAAAjB,EAAAX,EAAA/Q,GAAA8L,UAIA,QAAA6G,GAAAC,EAAAG,GACAA,EAAAvL,SAAAuL,GAAAA,EACAA,GACA3B,GAAA,UAAAiB,GACAzP,EAAAma,+BAGAnK,EAAArK,SAAA,aAEAqK,EAAAjK,YAAA,YA/BA,GAEA3I,GAAA0R,EAAAjG,EAAA0R,EAFA9K,EAAAxP,KAAAyC,YAAA+X,qBACAza,EAAAC,IA8CA,KAZAhB,EAAA0Q,QAAAxB,KACAA,GAAAA,IAIAtF,EADA2F,KAAA,GAAA,UAAAiB,EACAtB,EAAA9Q,OACAoS,GACAtB,EAAA9Q,OAAA,EAAA,EAEA,EAGAD,EAAA,EAAAA,EAAAyL,EAAAzL,IACAwH,SAAAuJ,EAAA/Q,GAAAyO,OACAiD,EAAA7P,IACAsb,EAAA,EACAta,KAAAE,QAAAC,KAAA,wCAAAgF,KAAAkV,GACAxL,EAAAzR,OAAA,GACA0S,EAAAjB,EAAAX,EAAA/Q,GAAA8L,WAGAiF,EAAA/Q,GAAA2V,UACA9S,KAAAE,QAAAC,KAAA,wCAAAgF,KAAAoV,IAMAvb,EAAAI,GAAAC,SAAAyC,SAAApD,EAAAmD,SAAA7C,EAAAI,GAAAC,SAAAyC,UACA2Y,oBAAA,OACAC,0BAAA,EACAC,uBAAA,KACAC,sBAAA,iBACAJ,sBAAA,EACAK,mBAAA,oHAIA7b,EAAAI,GAAAC,SAAAwF,UAAAiW,WACA7R,SAAA,WACA,GACA1E,GADAkR,EAAAzV,KAAAyC,YAAAiY,wBAEAjF,KACAlR,EAAA,gBAAAkR,GAAAA,KACAzV,KAAA8G,mBAAA,EAAAvC,KAGAoG,OAAA,SAAA7C,GACA,GAIAyQ,GAAAwC,EAJAC,EAAAhb,KAAAyC,YAAAgY,oBACAQ,EAAAjb,KAAAE,QAAAC,KAAA,4BACAqD,EAAAsE,EAAAtE,KACAuJ,IA+BA,OA5BAkO,GAAA7d,OAAA,GACA6d,EAAAjc,EAAA,2HACAgc,GAAA,SAAAA,GACAD,GACAG,OAAA,EACAC,QAAA,EACAhM,KAAA,EACAiM,MAAA,GAEAJ,EAAAD,EAAAC,GAAAA,EAAA,UACAC,EAAAvV,SAAA,SAAAsV,GACAhb,KAAAqb,yBAAA,GAEArb,KAAAqb,yBAAA,EAEAtO,EAAAJ,KAAAsO,GAEAlO,EAAAC,OAAA,OAGAxJ,EAAA0K,OAAA1K,EAAA0K,MAAA9Q,OAAA,GACAmb,EAAAvZ,EAAA,6BACAuZ,EAAA1P,OAAA7I,KAAAyC,YAAAmY,uBACAK,EAAApS,OAAA0P,IAEA0C,EAAA9a,KAAA,gBAAAoF,SAGAwH,GAEA/B,WAAA,SAAAlD,GACA,GAAA0H,GAAAxP,KAAAyC,YAAA+X,qBACAvR,EAAA,WACAlJ,EAAAC,KACAsb,EAAAtc,EAAA4a,EAAA9R,EAAAmD,OAAAnD,EAAA8D,OAAA5L,KAAAyC,YAAAoY,oBAwCA,OAtCAS,GAAA9X,KAAA,YAAAsE,EAAAtE,KAAA0K,MAAApG,EAAA8D,QAEA4D,IACA8L,EAAA5V,SAAA,cACA4V,EAAApa,GAAA,QAAA,WACAnB,EAAAuB,aAEAga,EAAAtV,SAAAiD,IAYAqS,EAAAxV,YAAAmD,GACAlJ,EAAAE,SAAAgD,QAAA,kCAAAqY,KAZA,UAAA9L,GACAzP,EAAAG,QAAAC,KAAA,iDAAAgF,KAAA,WACA,GAAA4K,GAAA/Q,EAAAgB,KACA+P,GAAAjK,YAAAmD,GACAlJ,EAAAE,SAAAgD,QAAA,kCAAA8M,KAIAuL,EAAA5V,SAAAuD,GACAlJ,EAAAE,SAAAgD,QAAA,gCAAAqY,QAQAxT,EAAA4C,UAAA7B,OAAAyS,GACAtb,KAAAqb,yBACAC,EAAAzP,MAAA,sCAGA7L,KAAAyC,YAAAkY,wBACA3a,KAAAyC,YAAAkY,wBACAjQ,UAAA5C,EAAA4C,UACAiC,KAAA2O,EACAzB,SAAA/R,EAAAmD,OAAAnD,EAAA8D,QACA,eAGA,OAgCArO,EAAA,4BACA,sBACA,aACA,kBACA,wBACA,SAAAyB,GACA,MAAAA,KAEAzB,EAAA,uBAAA,4BAAA,SAAAge,GAAA,MAAAA,MA8EEvb","file":"../skylark-ui-repeater.js","sourcesContent":["define('skylark-ui-repeater/repeater',[\r\n  \"skylark-utils/skylark\",\r\n  \"skylark-utils/langx\",\r\n  \"skylark-utils/browser\",\r\n  \"skylark-utils/eventer\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/geom\",\r\n  \"skylark-utils/velm\",\r\n  \"skylark-utils/query\",\r\n  \"skylark-utils/widgets\",\r\n  \"skylark-fuelux/loader\",\r\n  \"skylark-fuelux/selectlist\",\r\n  \"skylark-fuelux/combobox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,velm,$,widgets){\r\n\r\n\tvar ui = skylark.ui = skylark.ui || {};\r\n\r\n\t/*\r\n\t * Repeater\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tvar old = $.fn.repeater;\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = ui.Repeater = widgets.Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tinit : function(element,options) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\tthis.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.selectlist();\r\n\t\t\tthis.$pageSize.selectlist();\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox();\r\n\t\t\tthis.$search.search({\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.fu.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.fu.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.fu.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.fu.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.fu.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\tthis.$loader.loader();\r\n\t\t\tthis.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'list';\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewOptions(currentView);\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').combobox('destroy');\r\n\t\t\tthis.$element.find('.selectlist').selectlist('destroy');\r\n\t\t\tthis.$element.find('.search').search('destroy');\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.fu.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('disable');\r\n\t\t\tthis.$filters.selectlist('disable');\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('disable');\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.search('enable');\r\n\t\t\tthis.$filters.selectlist('enable');\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\tthis.$primaryPaging.find('.combobox').combobox('enable');\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.combobox('disable');\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.selectlist('enable');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.selectlist('disable');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.selectlist('selectedItem');\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.selectlist('selectedItem').value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypes.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.fu.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.viewOptions.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\t\t\t\tthis.setViewOptions(this.currentView);\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.fu.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\tthis.$loader.show().loader('play');\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.viewOptions.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.viewOptions.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.viewOptions.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.viewType) {\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem.call(this, {\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after.call(this, {\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render.call(this, {\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\tthis.$loader.hide().loader('pause');\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.fu.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\t// For backwards compatibility.\r\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\r\n\r\n\t// REPEATER PLUGIN DEFINITION\r\n\r\n\t$.fn.repeater = function fnrepeater (option) {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\t\tvar methodReturn;\r\n\r\n\t\tvar $set = this.each(function eachThis () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('fu.repeater');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('fu.repeater', (data = new Repeater(this, options)));\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof option === 'string') {\r\n\t\t\t\tmethodReturn = data[option].apply(data, args);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (methodReturn === undefined) ? $set : methodReturn;\r\n\t};\r\n\r\n\t$.fn.repeater.defaults = {\r\n\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t},\r\n\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\tdropPagingCap: 10,\r\n\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\tsearchOnKeyPress: false,\r\n\t\tallowCancel: true\r\n\t};\r\n\r\n\t$.fn.repeater.viewTypes = {};\r\n\r\n\t$.fn.repeater.Constructor = Repeater;\r\n\r\n\t$.fn.repeater.noConflict = function noConflict () {\r\n\t\t$.fn.repeater = old;\r\n\t\treturn this;\r\n\t};\r\n\r\n\r\n\treturn $.fn.repeater;\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-list',[\r\n  \"skylark-utils/langx\",\r\n  \"skylark-utils/browser\",\r\n  \"skylark-utils/eventer\",\r\n  \"skylark-utils/noder\",\r\n  \"skylark-utils/geom\",\r\n  \"skylark-utils/query\",\r\n  \"./repeater\"\r\n],function(langx,browser,eventer,noder,geom,$){\r\n\r\n\t/*\r\n\t * Fuel UX Checkbox\r\n\t * https://github.com/ExactTarget/fuelux\r\n\t *\r\n\t * Copyright (c) 2014 ExactTarget\r\n\t * Licensed under the BSD New license.\r\n\t */\r\n\r\n\tif ($.fn.repeater) {\r\n\t\t// ADDITIONAL METHODS\r\n\t\t$.fn.repeater.Constructor.prototype.list_clearSelectedItems = function listClearSelectedItems () {\r\n\t\t\tthis.$canvas.find('.repeater-list-check').remove();\r\n\t\t\tthis.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_highlightColumn = function listHighlightColumn (index, force) {\r\n\t\t\tvar tbody = this.$canvas.find('.repeater-list-wrapper > table tbody');\r\n\t\t\tif (this.viewOptions.list_highlightSortedColumn || force) {\r\n\t\t\t\ttbody.find('td.sorted').removeClass('sorted');\r\n\t\t\t\ttbody.find('tr').each(function eachTR () {\r\n\t\t\t\t\tvar col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n\t\t\t\t\tcol.addClass('sorted');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getSelectedItems = function listGetSelectedItems () {\r\n\t\t\tvar selected = [];\r\n\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n\t\t\t\tvar $item = $(this);\r\n\t\t\t\tselected.push({\r\n\t\t\t\t\tdata: $item.data('item_data'),\r\n\t\t\t\t\telement: $item\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn selected;\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.getValue = $.fn.repeater.Constructor.prototype.list_getSelectedItems;\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionHeadings = function listPositionHeadings () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-list-wrapper');\r\n\t\t\tvar offsetLeft = $wrapper.offset().left;\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\tvar $heading = $(this);\r\n\t\t\t\t\tvar left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n\t\t\t\t\t$heading.addClass('shifted').css('left', left);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n\t\t\t\t\t$(this).removeClass('shifted').css('left', '');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setSelectedItems = function listSetSelectedItems (itms, force) {\r\n\t\t\tvar selectable = this.viewOptions.list_selectable;\r\n\t\t\tvar self = this;\r\n\t\t\tvar data;\r\n\t\t\tvar i;\r\n\t\t\tvar $item;\r\n\t\t\tvar length;\r\n\r\n\t\t\tvar items = itms;\r\n\t\t\tif (!$.isArray(items)) {\r\n\t\t\t\titems = [items];\r\n\t\t\t}\r\n\r\n\t\t\t// this function is necessary because lint yells when a function is in a loop\r\n\t\t\tvar checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n\t\t\t\t$item = $(this);\r\n\r\n\t\t\t\tdata = $item.data('item_data') || {};\r\n\t\t\t\tif (data[items[i].property] === items[i].value) {\r\n\t\t\t\t\tselectItem($item, items[i].selected, rowIndex);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar selectItem = function selectItem ($itm, slct, index) {\r\n\t\t\t\tvar $frozenCols;\r\n\r\n\t\t\t\tvar select = (slct !== undefined) ? slct : true;\r\n\t\t\t\tif (select) {\r\n\t\t\t\t\tif (!force && selectable !== 'multi') {\r\n\t\t\t\t\t\tself.list_clearSelectedItems();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$itm.hasClass('selected')) {\r\n\t\t\t\t\t\t$itm.addClass('selected');\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns) {\r\n\t\t\t\t\t\t$frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n\t\t\t\t\t\t$frozenCols.addClass('selected');\r\n\t\t\t\t\t\t$frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (self.viewOptions.list_actions) {\r\n\t\t\t\t\t\tself.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$itm.find('.repeater-list-check').remove();\r\n\t\t\t\t\t$itm.removeClass('selected');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (force === true || selectable === 'multi') {\r\n\t\t\t\tlength = items.length;\r\n\t\t\t} else if (selectable) {\r\n\t\t\t\tlength = (items.length > 0) ? 1 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tlength = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\tif (items[i].index !== undefined) {\r\n\t\t\t\t\t$item = this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n\t\t\t\t\tif ($item.length > 0) {\r\n\t\t\t\t\t\tselectItem($item, items[i].selected, items[i].index);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n\t\t\t\t\tthis.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeHeadings = function listSizeHeadings () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list table');\r\n\t\t\t$table.find('thead th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar $heading = $th.find('.repeater-list-heading');\r\n\t\t\t\t$heading.css({ height: $th.outerHeight() });\r\n\t\t\t\t$heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_setFrozenColumns = function listSetFrozenColumns () {\r\n\t\t\tvar frozenTable = this.$canvas.find('.table-frozen');\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar repeaterWrapper = this.$element.find('.repeater-list');\r\n\t\t\tvar numFrozenColumns = this.viewOptions.list_frozenColumns;\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\tnumFrozenColumns = numFrozenColumns + 1;\r\n\t\t\t\t$wrapper.addClass('multi-select-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tif (frozenTable.length < 1) {\r\n\t\t\t\t// setup frozen column markup\r\n\t\t\t\t// main wrapper and remove unneeded columns\r\n\t\t\t\tvar $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n\t\t\t\tvar $frozenColumn = $table.clone().addClass('table-frozen');\r\n\t\t\t\t$frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n\t\t\t\t$frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n\t\t\t\t// need to set absolute heading for vertical scrolling\r\n\t\t\t\tvar $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n\t\t\t\t$frozenThead.find('tbody').remove();\r\n\t\t\t\tvar $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n\t\t\t\t// this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n\t\t\t\t// attribs are unique for the 'top most' cloned checkbox\r\n\t\t\t\tvar $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n\t\t\t\t$checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n\t\t\t\t$frozenColumnWrapper.append($frozenColumn);\r\n\t\t\t\trepeaterWrapper.append($frozenTheadWrapper);\r\n\t\t\t\tthis.$canvas.addClass('frozen-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeFrozenColumns();\r\n\r\n\t\t\t$('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n\t\t\t\tvar index = $(this).parent('th').index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tself.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_positionColumns = function listPositionColumns () {\r\n\t\t\tvar $wrapper = this.$element.find('.repeater-canvas');\r\n\t\t\tvar scrollTop = $wrapper.scrollTop();\r\n\t\t\tvar scrollLeft = $wrapper.scrollLeft();\r\n\t\t\tvar frozenEnabled = this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi';\r\n\t\t\tvar actionsEnabled = this.viewOptions.list_actions;\r\n\r\n\t\t\tvar canvasWidth = this.$element.find('.repeater-canvas').outerWidth();\r\n\t\t\tvar tableWidth = this.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n\t\t\tvar actionsWidth = this.$element.find('.table-actions') ? this.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n\t\t\tvar shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n\t\t\tif (scrollTop > 0) {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n\t\t\t} else {\r\n\t\t\t\t$wrapper.find('.repeater-list-heading').css('top', '0');\r\n\t\t\t}\r\n\r\n\t\t\tif (scrollLeft > 0) {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled && shouldScroll) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (frozenEnabled) {\r\n\t\t\t\t\t$wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n\t\t\t\t\t$wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n\t\t\t\t}\r\n\t\t\t\tif (actionsEnabled) {\r\n\t\t\t\t\t$wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n\t\t\t\t\t$wrapper.find('.actions-column-wrapper').css('right', '0');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_createItemActions = function listCreateItemActions () {\r\n\t\t\tvar actionsHtml = '';\r\n\t\t\tvar self = this;\r\n\t\t\tvar i;\r\n\t\t\tvar length;\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\t\t\tvar $actionsTable = this.$canvas.find('.table-actions');\r\n\r\n\t\t\tfor (i = 0, length = this.viewOptions.list_actions.items.length; i < length; i++) {\r\n\t\t\t\tvar action = this.viewOptions.list_actions.items[i];\r\n\t\t\t\tvar html = action.html;\r\n\r\n\t\t\t\tactionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n\t\t\t}\r\n\r\n\t\t\tvar actionsDropdown = '<div class=\"btn-group\">' +\r\n\t\t\t\t'<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n\t\t\t\t'<span class=\"caret\"></span>' +\r\n\t\t\t\t'</button>' +\r\n\t\t\t\t'<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n\t\t\t\tactionsHtml +\r\n\t\t\t\t'</ul></div>';\r\n\r\n\t\t\tif ($actionsTable.length < 1) {\r\n\t\t\t\tvar $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.list_actions_width + 'px\"></div>').insertBefore($table);\r\n\t\t\t\tvar $actionsColumn = $table.clone().addClass('table-actions');\r\n\t\t\t\t$actionsColumn.find('th:not(:last-child)').remove();\r\n\t\t\t\t$actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n\t\t\t\t// Dont show actions dropdown in header if not multi select\r\n\t\t\t\tif (this.viewOptions.list_selectable === 'multi' || this.viewOptions.list_selectable === 'action') {\r\n\t\t\t\t\t$actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n\t\t\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t\t\t// disable the header dropdown until an item is selected\r\n\t\t\t\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar label = this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>';\r\n\t\t\t\t\t$actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create Actions dropdown for each cell in actions table\r\n\t\t\t\tvar $actionsCells = $actionsColumn.find('td');\r\n\r\n\t\t\t\t$actionsCells.each(function addActionsDropdown (rowNumber) {\r\n\t\t\t\t\t$(this).html(actionsDropdown);\r\n\t\t\t\t\t$(this).find('a').attr('data-row', rowNumber + 1);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$actionsColumnWrapper.append($actionsColumn);\r\n\r\n\t\t\t\tthis.$canvas.addClass('actions-enabled');\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sizeActionsTable();\r\n\r\n\t\t\t// row level actions click\r\n\t\t\tthis.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar row = $(this).data('row');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: [row]\r\n\t\t\t\t\t};\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// bulk actions click\r\n\t\t\tthis.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tvar actionName = $(this).data('action');\r\n\t\t\t\t\tvar selected = {\r\n\t\t\t\t\t\tactionName: actionName,\r\n\t\t\t\t\t\trows: []\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar selector = '.repeater-list-wrapper > table .selected';\r\n\r\n\t\t\t\t\tif ( self.viewOptions.list_selectable === 'action' ) {\r\n\t\t\t\t\t\tselector = '.repeater-list-wrapper > table tr';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n\t\t\t\t\t\tselected.rows.push(selectorIndex + 1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tself.list_getActionItems(selected, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_getActionItems = function listGetActionItems (selected, e) {\r\n\t\t\tvar selectedObj = [];\r\n\t\t\tvar actionObj = $.grep(this.viewOptions.list_actions.items, function matchedActions (actions) {\r\n\t\t\t\treturn actions.name === selected.actionName;\r\n\t\t\t})[0];\r\n\t\t\tfor (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n\t\t\t\tvar clickedRow = this.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n\t\t\t\tselectedObj.push({\r\n\t\t\t\t\titem: clickedRow,\r\n\t\t\t\t\trowData: clickedRow.data('item_data')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (selectedObj.length === 1) {\r\n\t\t\t\tselectedObj = selectedObj[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (actionObj.clickAction) {\r\n\t\t\t\tvar callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n\t\t\t\tactionObj.clickAction(selectedObj, callback, e);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeActionsTable = function listSizeActionsTable () {\r\n\t\t\tvar $actionsTable = this.$element.find('.repeater-list table.table-actions');\r\n\t\t\tvar $actionsTableHeader = $actionsTable.find('thead tr th');\r\n\t\t\tvar $table = this.$element.find('.repeater-list-wrapper > table');\r\n\r\n\t\t\t$actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n\t\t\t$actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n\t\t\t$actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n\t\t\t\t$(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_sizeFrozenColumns = function listSizeFrozenColumns () {\r\n\t\t\tvar $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n\t\t\tthis.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n\t\t\t\t$(this).height($table.find('tr:eq(' + i + ')').height());\r\n\t\t\t});\r\n\r\n\t\t\tvar columnWidth = $table.find('td:eq(0)').outerWidth();\r\n\t\t\tthis.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n\t\t};\r\n\r\n\t\t$.fn.repeater.Constructor.prototype.list_frozenOptionsInitialize = function listFrozenOptionsInitialize () {\r\n\t\t\tvar $checkboxes = this.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n\t\t\tvar $headerCheckbox = this.$element.find('.header-checkbox .checkbox-custom');\r\n\t\t\tvar $everyTable = this.$element.find('.repeater-list table');\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t// Make sure if row is hovered that it is shown in frozen column as well\r\n\t\t\tthis.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n\t\t\t\tvar index = $(this).index();\r\n\t\t\t\tindex = index + 1;\r\n\t\t\t\tif (e.type === 'mouseover') {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$headerCheckbox.checkbox();\r\n\t\t\t$checkboxes.checkbox();\r\n\r\n\t\t\t// Row checkboxes\r\n\t\t\tvar $rowCheckboxes = this.$element.find('.table-frozen tbody .checkbox-inline');\r\n\t\t\tvar $checkAll = this.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n\t\t\t$rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar row = $(this).attr('data-row');\r\n\t\t\t\t\t\trow = parseInt(row, 10) + 1;\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n\t\t\t\t\t\tvar numSelected = self.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n\t\t\t\t\t\tif (numSelected === 0) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else if (numSelected === $rowCheckboxes.length) {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', true);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$checkAll.prop('checked', false);\r\n\t\t\t\t\t\t\t$checkAll.prop('indeterminate', true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// \"Check All\" checkbox\r\n\t\t\t$checkAll.on('change', function onChangeCheckAll (e) {\r\n\t\t\t\tif (!self.list_revertingCheckbox) {\r\n\t\t\t\t\tif (self.isDisabled) {\r\n\t\t\t\t\t\trevertCheckbox($(e.currentTarget));\r\n\t\t\t\t\t} else if ($(this).is(':checked')) {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n\t\t\t\t\t\tself.$element.trigger('selected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n\t\t\t\t\t\tself.$element.trigger('deselected.fu.repeaterList', $checkboxes);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction revertCheckbox ($checkbox) {\r\n\t\t\t\tself.list_revertingCheckbox = true;\r\n\t\t\t\t$checkbox.checkbox('toggle');\r\n\t\t\t\tdelete self.list_revertingCheckbox;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// ADDITIONAL DEFAULT OPTIONS\r\n\t\t$.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n\t\t\tlist_columnRendered: null,\r\n\t\t\tlist_columnSizing: true,\r\n\t\t\tlist_columnSyncing: true,\r\n\t\t\tlist_highlightSortedColumn: true,\r\n\t\t\tlist_infiniteScroll: false,\r\n\t\t\tlist_noItemsHTML: 'no items found',\r\n\t\t\tlist_selectable: false,\r\n\t\t\tlist_sortClearing: false,\r\n\t\t\tlist_rowRendered: null,\r\n\t\t\tlist_frozenColumns: 0,\r\n\t\t\tlist_actions: false\r\n\t\t});\r\n\r\n\t\t// EXTENSION DEFINITION\r\n\t\t$.fn.repeater.viewTypes.list = {\r\n\t\t\tcleared: function cleared () {\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdataOptions: function dataOptions (options) {\r\n\t\t\t\tif (this.list_sortDirection) {\r\n\t\t\t\t\toptions.sortDirection = this.list_sortDirection;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.list_sortProperty) {\r\n\t\t\t\t\toptions.sortProperty = this.list_sortProperty;\r\n\t\t\t\t}\r\n\t\t\t\treturn options;\r\n\t\t\t},\r\n\t\t\tenabled: function enabled (helpers) {\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tif (!helpers.status) {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n\t\t\t\t\t\ttoggleActionsHeaderButton.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinitialize: function initialize (helpers, callback) {\r\n\t\t\t\tthis.list_sortDirection = null;\r\n\t\t\t\tthis.list_sortProperty = null;\r\n\t\t\t\tthis.list_specialBrowserClass = specialBrowserClass();\r\n\t\t\t\tthis.list_actions_width = (this.viewOptions.list_actions.width !== undefined) ? this.viewOptions.list_actions.width : 37;\r\n\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\tcallback();\r\n\t\t\t},\r\n\t\t\tresize: function resize () {\r\n\t\t\t\tsizeColumns.call(this, this.$element.find('.repeater-list-wrapper > table thead tr'));\r\n\t\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\tthis.list_sizeFrozenColumns();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselected: function selected () {\r\n\t\t\t\tvar infScroll = this.viewOptions.list_infiniteScroll;\r\n\t\t\t\tvar opts;\r\n\r\n\t\t\t\tthis.list_firstRender = true;\r\n\t\t\t\tthis.$loader.addClass('noHeader');\r\n\r\n\t\t\t\tif (infScroll) {\r\n\t\t\t\t\topts = (typeof infScroll === 'object') ? infScroll : {};\r\n\t\t\t\t\tthis.infiniteScrolling(true, opts);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbefore: function before (helpers) {\r\n\t\t\t\tvar $listContainer = helpers.container.find('.repeater-list');\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar $table;\r\n\r\n\t\t\t\t// this is a patch, it was pulled out of `renderThead`\r\n\t\t\t\tif (helpers.data.count > 0) {\r\n\t\t\t\t\tthis.list_noItems = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.list_noItems = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($listContainer.length < 1) {\r\n\t\t\t\t\t$listContainer = $('<div class=\"repeater-list ' + this.list_specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n\t\t\t\t\t$listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\tif (self.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\t\t\tself.list_positionHeadings();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (self.viewOptions.list_frozenColumns || self.viewOptions.list_actions || self.viewOptions.list_selectable === 'multi') {\r\n\t\t\t\t\t\thelpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n\t\t\t\t\t\t\tself.list_positionColumns();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thelpers.container.append($listContainer);\r\n\t\t\t\t}\r\n\t\t\t\thelpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n\t\t\t\t$table = $listContainer.find('table');\r\n\t\t\t\trenderThead.call(this, $table, helpers.data);\r\n\t\t\t\trenderTbody.call(this, $table, helpers.data);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\trenderItem: function renderItem (helpers) {\r\n\t\t\t\trenderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tafter: function after () {\r\n\t\t\t\tvar $sorted;\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_setFrozenColumns();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_actions && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_createItemActions();\r\n\t\t\t\t\tthis.list_sizeActionsTable();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((this.viewOptions.list_frozenColumns || this.viewOptions.list_actions || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n\t\t\t\t\tthis.list_positionColumns();\r\n\t\t\t\t\tthis.list_frozenOptionsInitialize();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.viewOptions.list_columnSyncing) {\r\n\t\t\t\t\tthis.list_sizeHeadings();\r\n\t\t\t\t\tthis.list_positionHeadings();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$sorted = this.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n\t\t\t\tif ($sorted.length > 0) {\r\n\t\t\t\t\tthis.list_highlightColumn($sorted.data('fu_item_index'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// ADDITIONAL METHODS\r\n\tvar areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n\t\tif (!newCols) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (!oldCols || (newCols.length !== oldCols.length)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n\t\t\tif (!oldCols[i]) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var j in newCols[i]) {\r\n\t\t\t\tif (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tvar renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n\t\tvar className = columns[columnIndex].className;\r\n\t\tvar content = rows[rowIndex][columns[columnIndex].property];\r\n\t\tvar $col = $('<td></td>');\r\n\t\tvar width = columns[columnIndex]._auto_width;\r\n\r\n\t\tvar property = columns[columnIndex].property;\r\n\t\tif (this.viewOptions.list_actions !== false && property === '@_ACTIONS_@') {\r\n\t\t\tcontent = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.list_actions_width  + 'px\"></div>';\r\n\t\t}\r\n\r\n\t\tcontent = (content !== undefined) ? content : '';\r\n\r\n\t\t$col.addClass(((className !== undefined) ? className : '')).append(content);\r\n\t\tif (width !== undefined) {\r\n\t\t\t$col.outerWidth(width);\r\n\t\t}\r\n\r\n\t\t$row.append($col);\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n\t\t\tvar checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n\t\t\t$col.html(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\treturn $col;\r\n\t};\r\n\r\n\tvar renderHeader = function renderHeader ($tr, columns, index) {\r\n\t\tvar chevDown = 'glyphicon-chevron-down';\r\n\t\tvar chevron = '.glyphicon.rlc:first';\r\n\t\tvar chevUp = 'glyphicon-chevron-up';\r\n\t\tvar $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n\t\tvar checkAllID = (this.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n\t\tvar checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n\t\t\t\t'<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n\t\t\t\t\t'<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n\t\t\t\t\t'<span class=\"checkbox-label\">&nbsp;</span>' +\r\n\t\t\t\t'</label>' +\r\n\t\t\t'</div>';\r\n\r\n\t\tvar $header = $('<th></th>');\r\n\t\tvar self = this;\r\n\t\tvar $both;\r\n\t\tvar className;\r\n\t\tvar sortable;\r\n\t\tvar $span;\r\n\t\tvar $spans;\r\n\r\n\t\t$div.data('fu_item_index', index);\r\n\t\t$div.prepend(columns[index].label);\r\n\t\t$header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n\t\tif (columns[index].property !== '@_CHECKBOX_@') {\r\n\t\t\t$header.append($div);\r\n\t\t} else {\r\n\t\t\t$header.append(checkBoxMarkup);\r\n\t\t}\r\n\r\n\t\t$both = $header.add($div);\r\n\t\t$span = $div.find(chevron);\r\n\t\t$spans = $span.add($header.find(chevron));\r\n\r\n\t\tif (this.viewOptions.list_actions && columns[index].property === '@_ACTIONS_@') {\r\n\t\t\tvar width = this.list_actions_width;\r\n\t\t\t$header.css('width', width);\r\n\t\t\t$div.css('width', width);\r\n\t\t}\r\n\r\n\t\tclassName = columns[index].className;\r\n\t\tif (className !== undefined) {\r\n\t\t\t$both.addClass(className);\r\n\t\t}\r\n\r\n\t\tsortable = columns[index].sortable;\r\n\t\tif (sortable) {\r\n\t\t\t$both.addClass('sortable');\r\n\t\t\t$div.on('click.fu.repeaterList', function onClickRepeaterList () {\r\n\t\t\t\tif (!self.isDisabled) {\r\n\t\t\t\t\tself.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t\t\t\tif ($div.hasClass('sorted')) {\r\n\t\t\t\t\t\tif ($span.hasClass(chevUp)) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevUp).addClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'desc';\r\n\t\t\t\t\t\t} else if (!self.viewOptions.list_sortClearing) {\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$both.removeClass('sorted');\r\n\t\t\t\t\t\t\t$spans.removeClass(chevDown);\r\n\t\t\t\t\t\t\tself.list_sortDirection = null;\r\n\t\t\t\t\t\t\tself.list_sortProperty = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t\t\t\t$spans.removeClass(chevDown).addClass(chevUp);\r\n\t\t\t\t\t\tself.list_sortDirection = 'asc';\r\n\t\t\t\t\t\t$both.addClass('sorted');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n\t\t\t$tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n\t\t\t$both.addClass('sortable sorted');\r\n\t\t\tif (columns[index].sortDirection === 'asc') {\r\n\t\t\t\t$spans.addClass(chevUp);\r\n\t\t\t\tthis.list_sortDirection = 'asc';\r\n\t\t\t} else {\r\n\t\t\t\t$spans.addClass(chevDown);\r\n\t\t\t\tthis.list_sortDirection = 'desc';\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n\t\t}\r\n\r\n\t\t$tr.append($header);\r\n\t};\r\n\r\n\tvar onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n\t\tvar isMulti = repeater.viewOptions.list_selectable === 'multi';\r\n\t\tvar isActions = repeater.viewOptions.list_actions;\r\n\t\tvar $repeater = repeater.$element;\r\n\r\n\t\tif (!repeater.isDisabled) {\r\n\t\t\tvar $item = $(this);\r\n\t\t\tvar index = $(this).index() + 1;\r\n\t\t\tvar $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n\t\t\tvar $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n\t\t\tif ($item.is('.selected')) {\r\n\t\t\t\t$item.removeClass('selected');\r\n\t\t\t\tif (isMulti) {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$frozenRow.removeClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.removeClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$item.find('.repeater-list-check').remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $item);\r\n\t\t\t} else {\r\n\t\t\t\tif (!isMulti) {\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list-check').remove();\r\n\t\t\t\t\trepeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n\t\t\t\t\t\t$(this).removeClass('selected');\r\n\t\t\t\t\t\t$repeater.trigger('deselected.fu.repeaterList', $(this));\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$checkBox.click();\r\n\t\t\t\t\t$item.addClass('selected');\r\n\t\t\t\t\t$frozenRow.addClass('selected');\r\n\t\t\t\t\tif (isActions) {\r\n\t\t\t\t\t\t$actionsRow.addClass('selected');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$repeater.trigger('selected.fu.repeaterList', $item);\r\n\t\t\t}\r\n\r\n\t\t\ttoggleActionsHeaderButton.call(repeater);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderRow = function renderRow ($tbody, rows, index) {\r\n\t\tvar $row = $('<tr></tr>');\r\n\r\n\t\tif (this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable !== 'action') {\r\n\t\t\t\t$row.addClass('selectable');\r\n\t\t\t\t$row.attr('tabindex', 0);\t// allow items to be tabbed to / focused on\r\n\r\n\t\t\t\tvar repeater = this;\r\n\t\t\t\t$row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\r\n\t\t\t\t\tonClickRowRepeaterList.call(this, repeater);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// allow selection via enter key\r\n\t\t\t\t$row.keyup(function onRowKeyup (e) {\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\t// triggering a standard click event to be caught by the row click handler above\r\n\t\t\t\t\t\t$row.trigger('click.fu.repeaterList');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_actions && !this.viewOptions.list_selectable) {\r\n\t\t\t$row.data('item_data', rows[index]);\r\n\t\t}\r\n\r\n\t\tvar columns = [];\r\n\t\tfor (var i = 0, length = this.list_columns.length; i < length; i++) {\r\n\t\t\tcolumns.push(renderColumn.call(this, $row, rows, index, this.list_columns, i));\r\n\t\t}\r\n\r\n\t\t$tbody.append($row);\r\n\r\n\t\tif (this.viewOptions.list_columnRendered) {\r\n\t\t\tfor (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n\t\t\t\tif (!(this.list_columns[columnIndex].property === '@_CHECKBOX_@' || this.list_columns[columnIndex].property === '@_ACTIONS_@')) {\r\n\t\t\t\t\tthis.viewOptions.list_columnRendered({\r\n\t\t\t\t\t\tcontainer: $row,\r\n\t\t\t\t\t\tcolumnAttr: this.list_columns[columnIndex].property,\r\n\t\t\t\t\t\titem: columns[columnIndex],\r\n\t\t\t\t\t\trowData: rows[index]\r\n\t\t\t\t\t}, function noop () {});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.viewOptions.list_rowRendered) {\r\n\t\t\tthis.viewOptions.list_rowRendered({\r\n\t\t\t\tcontainer: $tbody,\r\n\t\t\t\titem: $row,\r\n\t\t\t\trowData: rows[index]\r\n\t\t\t}, function noop () {});\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderTbody = function renderTbody ($table, data) {\r\n\t\tvar $tbody = $table.find('tbody');\r\n\t\tvar $empty;\r\n\r\n\t\tif ($tbody.length < 1) {\r\n\t\t\t$tbody = $('<tbody data-container=\"true\"></tbody>');\r\n\t\t\t$table.append($tbody);\r\n\t\t}\r\n\r\n\t\tif (typeof data.error === 'string' && data.error.length > 0) {\r\n\t\t\t$empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(data.error);\r\n\t\t\t$tbody.append($empty);\r\n\t\t} else if (data.items && data.items.length < 1) {\r\n\t\t\t$empty = $('<tr class=\"empty\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n\t\t\t$empty.find('td').append(this.viewOptions.list_noItemsHTML);\r\n\t\t\t$tbody.append($empty);\r\n\t\t}\r\n\t};\r\n\r\n\tvar renderThead = function renderThead ($table, data) {\r\n\t\tvar columns = data.columns || [];\r\n\t\tvar $thead = $table.find('thead');\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar $tr;\r\n\r\n\t\tif (this.list_firstRender || areDifferentColumns(this.list_columns, columns) || $thead.length === 0) {\r\n\t\t\t$thead.remove();\r\n\r\n\t\t\t// list_noItems is set in `before` method\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\tvar checkboxColumn = {\r\n\t\t\t\t\tlabel: 'c',\r\n\t\t\t\t\tproperty: '@_CHECKBOX_@',\r\n\t\t\t\t\tsortable: false\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.splice(0, 0, checkboxColumn);\r\n\t\t\t}\r\n\r\n\t\t\tthis.list_columns = columns;\r\n\t\t\tthis.list_firstRender = false;\r\n\t\t\tthis.$loader.removeClass('noHeader');\r\n\r\n\t\t\t// keep action column header even when empty, you'll need it later....\r\n\t\t\tif (this.viewOptions.list_actions) {\r\n\t\t\t\tvar actionsColumn = {\r\n\t\t\t\t\tlabel: this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>',\r\n\t\t\t\t\tproperty: '@_ACTIONS_@',\r\n\t\t\t\t\tsortable: false,\r\n\t\t\t\t\twidth: this.list_actions_width\r\n\t\t\t\t};\r\n\t\t\t\tcolumns.push(actionsColumn);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t$thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n\t\t\t$tr = $thead.find('tr');\r\n\t\t\tfor (i = 0, length = columns.length; i < length; i++) {\r\n\t\t\t\trenderHeader.call(this, $tr, columns, i);\r\n\t\t\t}\r\n\t\t\t$table.prepend($thead);\r\n\r\n\t\t\tif (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n\t\t\t\t// after checkbox column is created need to get width of checkbox column from\r\n\t\t\t\t// its css class\r\n\t\t\t\tvar checkboxWidth = this.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n\t\t\t\tvar selectColumn = $.grep(columns, function grepColumn (column) {\r\n\t\t\t\t\treturn column.property === '@_CHECKBOX_@';\r\n\t\t\t\t})[0];\r\n\t\t\t\tselectColumn.width = checkboxWidth;\r\n\t\t\t}\r\n\t\t\tsizeColumns.call(this, $tr);\r\n\t\t}\r\n\t};\r\n\r\n\tvar sizeColumns = function sizeColumns ($tr) {\r\n\t\tvar automaticallyGeneratedWidths = [];\r\n\t\tvar self = this;\r\n\t\tvar i;\r\n\t\tvar length;\r\n\t\tvar newWidth;\r\n\t\tvar widthTaken;\r\n\r\n\t\tif (this.viewOptions.list_columnSizing) {\r\n\t\t\ti = 0;\r\n\t\t\twidthTaken = 0;\r\n\t\t\t$tr.find('th').each(function eachTH () {\r\n\t\t\t\tvar $th = $(this);\r\n\t\t\t\tvar width;\r\n\t\t\t\tif (self.list_columns[i].width !== undefined) {\r\n\t\t\t\t\twidth = self.list_columns[i].width;\r\n\t\t\t\t\t$th.outerWidth(width);\r\n\t\t\t\t\twidthTaken += $th.outerWidth();\r\n\t\t\t\t\tself.list_columns[i]._auto_width = width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n\t\t\t\t\tautomaticallyGeneratedWidths.push({\r\n\t\t\t\t\t\tcol: $th,\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tminWidth: outerWidth\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\r\n\t\t\tlength = automaticallyGeneratedWidths.length;\r\n\t\t\tif (length > 0) {\r\n\t\t\t\tvar canvasWidth = this.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n\t\t\t\tnewWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n\t\t\t\tfor (i = 0; i < length; i++) {\r\n\t\t\t\t\tif (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n\t\t\t\t\t\tnewWidth = automaticallyGeneratedWidths[i].minWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tautomaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n\t\t\t\t\tthis.list_columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar specialBrowserClass = function specialBrowserClass () {\r\n\t\tvar ua = window.navigator.userAgent;\r\n\t\tvar msie = ua.indexOf('MSIE ');\r\n\t\tvar firefox = ua.indexOf('Firefox');\r\n\r\n\t\tif (msie > 0 ) {\r\n\t\t\treturn 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n\t\t} else if (firefox > 0) {\r\n\t\t\treturn 'firefox';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t};\r\n\r\n\tvar toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n\t\tvar selectedSelector = '.repeater-list-wrapper > table .selected';\r\n\t\tvar $actionsColumn = this.$element.find('.table-actions');\r\n\t\tvar $selected;\r\n\r\n\t\tif (this.viewOptions.list_selectable === 'action') {\r\n\t\t\tselectedSelector = '.repeater-list-wrapper > table tr';\r\n\t\t}\r\n\r\n\t\t$selected = this.$canvas.find( selectedSelector );\r\n\r\n\t\tif ($selected.length > 0) {\r\n\t\t\t$actionsColumn.find('thead .btn').removeAttr('disabled');\r\n\t\t} else {\r\n\t\t\t$actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n\t\t}\r\n\t};\r\n\r\n});\r\n\ndefine('skylark-ui-repeater/repeater-thumbnail',[\r\n    \"skylark-utils/langx\",\r\n    \"skylark-utils/browser\",\r\n    \"skylark-utils/eventer\",\r\n    \"skylark-utils/noder\",\r\n    \"skylark-utils/geom\",\r\n    \"skylark-utils/query\",\r\n    \"./repeater\"\r\n], function(langx, browser, eventer, noder, geom, $) {\r\n\r\n    /*\r\n     * Fuel UX Checkbox\r\n     * https://github.com/ExactTarget/fuelux\r\n     *\r\n     * Copyright (c) 2014 ExactTarget\r\n     * Licensed under the BSD New license.\r\n     */\r\n\r\n    if ($.fn.repeater) {\r\n        //ADDITIONAL METHODS\r\n        $.fn.repeater.Constructor.prototype.thumbnail_clearSelectedItems = function() {\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_getSelectedItems = function() {\r\n            var selected = [];\r\n            this.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                selected.push($(this));\r\n            });\r\n            return selected;\r\n        };\r\n\r\n        $.fn.repeater.Constructor.prototype.thumbnail_setSelectedItems = function(items, force) {\r\n            var selectable = this.viewOptions.thumbnail_selectable;\r\n            var self = this;\r\n            var i, $item, l, n;\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemIndex() {\r\n                if (n === items[i].index) {\r\n                    $item = $(this);\r\n                    return false;\r\n                } else {\r\n                    n++;\r\n                }\r\n            }\r\n\r\n            //this function is necessary because lint yells when a function is in a loop\r\n            function compareItemSelector() {\r\n                $item = $(this);\r\n                if ($item.is(items[i].selector)) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n            }\r\n\r\n            function selectItem($itm, select) {\r\n                select = (select !== undefined) ? select : true;\r\n                if (select) {\r\n                    if (!force && selectable !== 'multi') {\r\n                        self.thumbnail_clearSelectedItems();\r\n                    }\r\n\r\n                    $itm.addClass('selected');\r\n                } else {\r\n                    $itm.removeClass('selected');\r\n                }\r\n            }\r\n\r\n            if (!$.isArray(items)) {\r\n                items = [items];\r\n            }\r\n\r\n            if (force === true || selectable === 'multi') {\r\n                l = items.length;\r\n            } else if (selectable) {\r\n                l = (items.length > 0) ? 1 : 0;\r\n            } else {\r\n                l = 0;\r\n            }\r\n\r\n            for (i = 0; i < l; i++) {\r\n                if (items[i].index !== undefined) {\r\n                    $item = $();\r\n                    n = 0;\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\r\n                    if ($item.length > 0) {\r\n                        selectItem($item, items[i].selected);\r\n                    }\r\n\r\n                } else if (items[i].selector) {\r\n                    this.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\r\n                }\r\n            }\r\n        };\r\n\r\n        //ADDITIONAL DEFAULT OPTIONS\r\n        $.fn.repeater.defaults = langx.mixin({}, $.fn.repeater.defaults, {\r\n            thumbnail_alignment: 'left',\r\n            thumbnail_infiniteScroll: false,\r\n            thumbnail_itemRendered: null,\r\n            thumbnail_noItemsHTML: 'no items found',\r\n            thumbnail_selectable: false,\r\n            thumbnail_template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        });\r\n\r\n        //EXTENSION DEFINITION\r\n        $.fn.repeater.viewTypes.thumbnail = {\r\n            selected: function() {\r\n                var infScroll = this.viewOptions.thumbnail_infiniteScroll;\r\n                var opts;\r\n                if (infScroll) {\r\n                    opts = (typeof infScroll === 'object') ? infScroll : {};\r\n                    this.infiniteScrolling(true, opts);\r\n                }\r\n            },\r\n            before: function(helpers) {\r\n                var alignment = this.viewOptions.thumbnail_alignment;\r\n                var $cont = this.$canvas.find('.repeater-thumbnail-cont');\r\n                var data = helpers.data;\r\n                var response = {};\r\n                var $empty, validAlignments;\r\n\r\n                if ($cont.length < 1) {\r\n                    $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\r\n                    if (alignment && alignment !== 'none') {\r\n                        validAlignments = {\r\n                            'center': 1,\r\n                            'justify': 1,\r\n                            'left': 1,\r\n                            'right': 1\r\n                        };\r\n                        alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                        $cont.addClass('align-' + alignment);\r\n                        this.thumbnail_injectSpacers = true;\r\n                    } else {\r\n                        this.thumbnail_injectSpacers = false;\r\n                    }\r\n                    response.item = $cont;\r\n                } else {\r\n                    response.action = 'none';\r\n                }\r\n\r\n                if (data.items && data.items.length < 1) {\r\n                    $empty = $('<div class=\"empty\"></div>');\r\n                    $empty.append(this.viewOptions.thumbnail_noItemsHTML);\r\n                    $cont.append($empty);\r\n                } else {\r\n                    $cont.find('.empty:first').remove();\r\n                }\r\n\r\n                return response;\r\n            },\r\n            renderItem: function(helpers) {\r\n                var selectable = this.viewOptions.thumbnail_selectable;\r\n                var selected = 'selected';\r\n                var self = this;\r\n                var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.viewOptions.thumbnail_template));\r\n\r\n                $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n                if (selectable) {\r\n                    $thumbnail.addClass('selectable');\r\n                    $thumbnail.on('click', function() {\r\n                        if (self.isDisabled) return;\r\n\r\n                        if (!$thumbnail.hasClass(selected)) {\r\n                            if (selectable !== 'multi') {\r\n                                self.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                                    var $itm = $(this);\r\n                                    $itm.removeClass(selected);\r\n                                    self.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\r\n                                });\r\n                            }\r\n\r\n                            $thumbnail.addClass(selected);\r\n                            self.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\r\n                        } else {\r\n                            $thumbnail.removeClass(selected);\r\n                            self.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                helpers.container.append($thumbnail);\r\n                if (this.thumbnail_injectSpacers) {\r\n                    $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n                }\r\n\r\n                if (this.viewOptions.thumbnail_itemRendered) {\r\n                    this.viewOptions.thumbnail_itemRendered({\r\n                        container: helpers.container,\r\n                        item: $thumbnail,\r\n                        itemData: helpers.subset[helpers.index]\r\n                    }, function() {});\r\n                }\r\n\r\n                return false;\r\n            }\r\n        };\r\n    }\r\n\r\n    //ADDITIONAL METHODS\r\n    function fillTemplate(itemData, template) {\r\n        var invalid = false;\r\n\r\n        function replace() {\r\n            var end, start, val;\r\n\r\n            start = template.indexOf('{{');\r\n            end = template.indexOf('}}', start + 2);\r\n\r\n            if (start > -1 && end > -1) {\r\n                val = langx.trim(template.substring(start + 2, end));\r\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                template = template.substring(0, start) + val + template.substring(end + 2);\r\n            } else {\r\n                invalid = true;\r\n            }\r\n        }\r\n\r\n        while (!invalid && template.search('{{') >= 0) {\r\n            replace(template);\r\n        }\r\n\r\n        return template;\r\n    }\r\n\r\n});\ndefine('skylark-ui-repeater/main',[\r\n    \"skylark-utils/query\",\r\n    \"./repeater\",\r\n    \"./repeater-list\",\r\n    \"./repeater-thumbnail\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-ui-repeater', ['skylark-ui-repeater/main'], function (main) { return main; });\n\n"]}