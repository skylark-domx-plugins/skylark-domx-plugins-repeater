{"version":3,"sources":["skylark-domx-repeater.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","SearchBox","Plugin","inherit","klassName","pluginName","options","clearOnEmpty","searchOnKeyPress","allowCancel","_construct","elm","this","overrided","$element","_elm","$repeater","closest","attr","$button","find","$input","$icon","on","proxy","buttonclicked","keypress","length","clearPending","activeSearch","_destroy","remove","each","val","outerHTML","search","searchText","hasClass","removeClass","addClass","trigger","clear","action","e","preventDefault","currentTarget","is","which","disable","enable","removeAttr","register","skylark","elmx","fx","SelectList","ComboBox","Repeater","dataSource","callback","count","end","items","page","pages","start","defaultView","dropPagingCap","staticHeight","views","addons","throb","params","$btn","currentView","self","$canvas","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","plugin","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","value","render","clearInfinite","next","previous","evt","data","pageInputChange","text","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","initViewTypes","changeView","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","scall","infinitescroll","off","enabled","status","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","mixin","returnOptions","view","pageIndex","filter","selectedItem","pageSize","searchValue","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","isArray","i","setting","constructor","Error","ctor","push","isPlainObject","name","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","append","focus","prevView","split","selected","syncViewButtonState","_throbber","className","beforeRender","repeaterPrototypeContext","viewTypeObj","dataSourceReturnedData","doRender","call","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","$selected","target","parents","$itemToCheck","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","toLowerCase","test","parseJSON","ignore","getItemProperty","msg","console","warn","keep","children","item","pres","detach","$parent","response","state","d","renderOptions","attach","ViewBase","Evented","controlsClass","fullScreen","_create$Item","template","itemData","invalid","indexOf","trim","substring","init","repeater","hasControls","that","initOptions","cache","defaults","ctors","unshift","superclass","prototype","hasOwnProperty","Object","defineProperty","close","getValue","getSelectedItems","LinearView","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","clearSelectedItems","setSelectedItems","force","$item","n","compareItemIndex","compareItemSelector","selector","selectItem","$itm","select","thumbnail_clearSelectedItems","infScroll","$cont","$thumbnail","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onslide","onslideend","onslidecomplete","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","indicators","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","helper","list","num","initStartIndex","initView","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","dist","translateX","x","y","slides","translateY","from","timer","setInterval","timeElap","left","clearInterval","time","interval","animationFrameId","pause","add","concat","Array","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","slideHeight","ontouchcancel","onkeydown","toggleControls","toggleSlideshow","handleClick","srcElement","parent","parentNode","getNodeIndex","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","setActiveIndicator","firstChild","title","alt","createTextNode","func","args","wait","apply","loadElement","elements","proxyListener","limit","min","j","unloadSlide","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","activeIndicator","slidePrototype","reload","imagePrototype","elementPrototype","clientWidth","clientHeight","len","getItemUrl","type","destroyEventListeners","first","log","bodyOverflowStyle","overflow","display","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","highlightColumn","tbody","col","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","itms","checkIfItemMatchesValue","rowIndex","slct","$frozenCols","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","$actionsColumnWrapper","$actionsColumn","$actionsCells","rowNumber","id","exceptActionRows","inArray","actionsDropdown","label","sizeActionsTable","actionName","row","rows","getActionItems","selectorIndex","createItemActions_1","actions_width","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","initialize","specialBrowserClass","noItems","sizeColumns","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","firefox","selectedSelector","TileView","center","justify","right","thumbnail_injectSpacers","main"],"mappings":"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","file":"../skylark-domx-repeater.js","sourcesContent":["define('skylark-domx-repeater/SearchBox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\"\n],function(langx,browser,eventer,noder,geom,$,plugins){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = plugins.Plugin.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n    \t_construct : function(elm,options) {\n      \t\tthis.overrided(elm,options);\n      \t\t\n      \t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.lark.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.lark.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.lark.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\n\t\t_destroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.lark.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.lark.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.lark.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n    plugins.register(SearchBox);\n\n\treturn \tSearchBox;\n});\n\ndefine('skylark-domx-repeater/Repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-domx-popups/SelectList\",\r\n  \"skylark-domx-popups/ComboBox\",\r\n  \"./SearchBox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,fx,plugins,SelectList,ComboBox){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = plugins.Plugin.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"domx.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t    throb: function(params) {\r\n\t      return fx.throb(this._elm,params);\r\n\t    },\r\n\r\n//\t\t_init : function(element,options) {\r\n\t    _construct : function(elm,options) {\r\n\t\t    this.overrided(elm,options);\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).plugin(\"domx.dropdown\");\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n//\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"domx.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"domx.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"domx.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.lark.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.lark.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.lark.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.lark.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.lark.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.lark.search cleared.lark.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.lark.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.lark.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.lark.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.lark.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tlangx.scall(this.$element.find('.combobox').plugin(\"lark.combobox\"),\"destroy\");\r\n\t\t\tlangx.scall(this.$element.find('.selectlist').plugin(\"domx.selectlist\"),\"destroy\");\r\n\t\t\tlangx.scall(this.$element.find('.search').plugin(\"lark.searchbox\"),\"destroy\");\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.lark.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tlangx.scall(this.$search.plugin(\"lark.searchbox\"),\"disable\");\r\n\t\t\tlangx.scall(this.$filters.plugin(\"domx.selectlist\"),\"disable\");\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tlangx.scall(this.$pageSize.plugin(\"domx.selectlist\"),\"disable\");\r\n\t\t\tlangx.scall(this.$primaryPaging.find('.combobox').plugin(\"domx.combobox\"),\"disable\");\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tlangx.scall(this.$search.plugin(\"lark.searchbox\"),\"enable\");\r\n\t\t\tlangx.scall(this.$filters.plugin(\"domx.selectlist\"),\"enable\")\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tlangx.scall(this.$pageSize.plugin(\"domx.selectlist\"),\"enable\")\r\n\t\t\tlangx.scall(this.$primaryPaging.find('.combobox').plugin(\"domx.combobox\"),\"enable\");\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tlangx.scall(this.$primaryPaging.plugin(\"domx.combobox\"),\"disable\");\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tlangx.scall(this.$pageSize.plugin(\"domx.selectlist\"),\"enable\");\r\n\t\t\t} else {\r\n\t\t\t\tlangx.scall(this.$pageSize.plugin(\"domx.selectlist\"),\"disable\");\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"domx.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"domx.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('lark.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\t/*\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tif (langx.isArray(viewTypes)) {\r\n\t\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\t\tvar setting = this.constructor.addons.views[viewTypes[i]];\r\n\t\t\t\t\tif (!setting) {\r\n\t\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t\t} \r\n\t\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t} else if (langx.isPlainObject(viewTypes)) {\r\n\t\t\t\tfor (var name in viewTypes) {\r\n\t\t\t\t\tvar setting = this.constructor.addons.views[name];\r\n\t\t\t\t\tif (!setting) {\r\n\t\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t\t} \r\n\t\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\t\tthis._views.push(this._views[name] = new ctor(this,viewTypes[name]));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/*\r\n\t\t\tif (views.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tcallback();\t\t\t\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.lark.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.lark.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* lwf\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"throbWrap\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem({\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render({\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* // by lwf\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\t\t*/\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t}\r\n\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\t//this.$loader.hide().loader('pause');\r\n\t\tif (this._throbber) {\r\n\t\t\tthis._throbber.remove();\r\n\t\t\tthis._throbber = null;\r\n\t\t}\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.lark.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tRepeater.addons = {};\r\n\r\n   plugins.register(Repeater);\r\n\r\n\r\n\treturn skylark.attach(\"domx.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-domx-repeater/views',[\r\n\t\"./Repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.addons.views = {};\r\n});\ndefine('skylark-domx-repeater/views/ViewBase',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"../views\",\t\r\n],function(langx,noder,$,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t    // Defines if the gallery should open in fullscreen mode:\r\n\t\t    fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n  \t\tinit : function (repeater,options) {\r\n  \t\t\tvar that = this,\r\n  \t\t\t\thasControls;\r\n  \t\t\tthis.repeater = repeater;\r\n  \t\t\tthis.initOptions(options);\r\n  \t        if (this.options.fullScreen) {\r\n  \t          noder.fullScreen(this.container[0]);\r\n  \t        }\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (that.container.hasClass(that.options.controlsClass)) {\r\n  \t              hasControls = true\r\n  \t              that.container.removeClass(that.options.controlsClass);\r\n  \t            } else {\r\n  \t              hasControls = false\r\n  \t            }\r\n  \t        });\r\n\r\n  \t        this.repeater.on(\"item.running\",function(e){\r\n  \t            if (hasControls) {\r\n  \t              that.container.addClass(that.options.controlsClass);\r\n  \t            }\r\n  \t        });\r\n  \t\t},\r\n\r\n\t    //initOptions: function (options) {\r\n\t    //  // Create a copy of the prototype options:\r\n\t    //  this.options = langx.mixin({}, this.options,options);\r\n\t    //},\r\n\r\n      initOptions : function(options) {\r\n        var ctor = this.constructor,\r\n            cache = ctor.cache = ctor.cache || {},\r\n            defaults = cache.defaults;\r\n        if (!defaults) {\r\n          var  ctors = [];\r\n          do {\r\n            ctors.unshift(ctor);\r\n            if (ctor === Plugin) {\r\n              break;\r\n            }\r\n            ctor = ctor.superclass;\r\n          } while (ctor);\r\n\r\n          defaults = cache.defaults = {};\r\n          for (var i=0;i<ctors.length;i++) {\r\n            ctor = ctors[i];\r\n            if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.prototype.options,true);\r\n            }\r\n            if (ctor.hasOwnProperty(\"options\")) {\r\n              langx.mixin(defaults,ctor.options,true);\r\n            }\r\n          }\r\n        }\r\n        Object.defineProperty(this,\"options\",{\r\n          value :langx.mixin({},defaults,options,true)\r\n        });\r\n\r\n        //return this.options = langx.mixin({},defaults,options);\r\n        return this.options;\r\n      },\r\n\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n    \t},\r\n\r\n    \tgetValue : function() {\r\n    \t\treturn this.getSelectedItems();\r\n    \t},\r\n\r\n    \tcleared : function() {\r\n\r\n    \t},\r\n\r\n    \tselected : function() {\r\n\r\n    \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\ndefine('skylark-domx-repeater/views/LinearView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var LinearView = ViewBase.inherit({\r\n    klassName : \"LinearView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n\r\n        template : '<ul class=\"clearfix repeater-linear\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></ul>',\r\n        item : {\r\n            template: '<li class=\"repeater-item\"><img  src=\"{{ThumbnailImage}}\" class=\"thumb\"/><h4 class=\"title\">{{name}}</h4></div>'\r\n        },\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-linear');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        return response;\r\n    },\r\n\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $item = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $item.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $item.addClass('selectable');\r\n            $item.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$item.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterList', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $item.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $item);\r\n                } else {\r\n                    $item.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $item);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($item);\r\n\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"linear\"] = {\r\n        name : \"linear\",\r\n        ctor : LinearView\r\n    };\r\n\r\n    return LinearView;\r\n    \r\n});\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-domx-repeater/views/SliderView',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../views\", \r\n  \"./ViewBase\"\r\n],function (langx,noder,$,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the repeater view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div.slides',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'slider-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'slider-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'slider-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'slider-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'slider-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: true,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'ThumbnailImage',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n      indicators : {\r\n            // Hide the page scrollbars:\r\n          hidePageScrollbars: false,\r\n\r\n          // The tag name, Id, element or querySelector of the indicator container:\r\n          indicatorContainer: 'ol',\r\n          // The class for the active indicator:\r\n          activeIndicatorClass: 'active',\r\n          // The list object property (or data attribute) with the thumbnail URL,\r\n          // used as alternative to a thumbnail child element:\r\n          thumbnailProperty: 'thumbnail',\r\n          // Defines if the gallery indicators should display a thumbnail:\r\n          thumbnailIndicators: true\r\n      },\r\n\r\n\r\n\r\n      \"template\" :'<div class=\"repeater-slider\">' + \r\n                  '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>' +\r\n                  \"</div>\",\r\n\r\n      \"item\" : {\r\n        \"template\" : '<img height=\"75\" src=\"{{ThumbnailImage}}\" width=\"65\"/>' \r\n      }\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    render: function (helper){\r\n      //this.overrided(repeater,options);\r\n\r\n      this.container = this.repeater.$canvas.find('.repeater-slider');\r\n\r\n      if (this.container.length < 1) {\r\n        this.container = $(this.options.template);\r\n        this.repeater.$canvas.append(this.container);\r\n      } \r\n      this.list = helper.data.items;\r\n      //this.options.container = helper.container;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      this.initView();\r\n\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval;\r\n      this.timeout = this.setTimeout(\r\n        (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n        [this.index + 1, this.options.slideshowTransitionSpeed],\r\n        this.interval\r\n      )\r\n\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target))\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n      } else {\r\n        function isTarget (className) {\r\n          return $(target).hasClass(className) || $(parent).hasClass(className)\r\n        }\r\n\r\n\r\n        if (isTarget(options.toggleClass)) {\r\n          // Click on \"toggle\" control\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        } else if (isTarget(options.prevClass)) {\r\n          // Click on \"prev\" control\r\n          this.preventDefault(event)\r\n          this.prev()\r\n        } else if (isTarget(options.nextClass)) {\r\n          // Click on \"next\" control\r\n          this.preventDefault(event)\r\n          this.next()\r\n        } else if (isTarget(options.playPauseClass)) {\r\n          // Click on \"play-pause\" control\r\n          this.preventDefault(event)\r\n          this.toggleSlideshow()\r\n        } else if (parent === this.slidesContainer[0]) {\r\n          // Click on slide background\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        } else if (\r\n          parent.parentNode &&\r\n          parent.parentNode === this.slidesContainer[0]\r\n        ) {\r\n          // Click on displayed element\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n\r\n      this.setActiveIndicator(index)\r\n\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var $item = this._create$Item(this.options.item.template,obj);\r\n      $item.find(\"img\").on('load error', callback);\r\n\r\n      $item.addClass(this.options.slideContentClass);\r\n      return $item;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).append(            \r\n            this.createElement(this.list[index], this.proxyListener)\r\n          );\r\n          //$(this.slides[index]).addClass(this.options.slideLoadingClass).append(            \r\n          //  this.createElement(this.list[index], this.proxyListener)\r\n          //);\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    createIndicator: function (obj) {\r\n      var repeater = this.repeater,\r\n          indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = repeater.getItemProperty(obj,\"title\")\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = repeater.getItemProperty(obj, thumbnailProperty)\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n\r\n      this.addIndicator(index)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        // indicator\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var repeater = this.repeater,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || repeater.getItemUrl(this.list[i]) ===  repeater.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n\r\n    initView: function () {\r\n      var that = this\r\n\r\n      /*\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      */\r\n\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView\r\n  };\r\n\r\n  return SliderView;\r\n\r\n});\r\n\ndefine('skylark-domx-repeater/views/TableView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$element.find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n        var len = this.options.actions.items.length;\r\n        if (len == 1) {\r\n            var action = this.options.actions.items[0];\r\n            actionsHtml = '<a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + action.html + '</a>'\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function (rowNumber) {\r\n                    var id = $(this).parent().attr(\"id\");\r\n                    var data = $(\"#\" + id).data(\"item_data\")\r\n                    if (self.options.exceptActionRows && data && langx.inArray(self.options.exceptActionRows, data.name)) {\r\n                        $(this).html(\"-\");\r\n                    } else {\r\n                        $(this).html(actionsHtml);\r\n                    }\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        } else {\r\n            for (i = 0; i < len; i++) {\r\n                var action = this.options.actions.items[i];\r\n                var html = action.html;\r\n\r\n                actionsHtml += '<li class=\"' + action.name + '\"><a href=\"javascript:void(0)\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n            }\r\n            var actionsDropdown = '<ul class=\"ul-inline list-unstyled ul-horizontally\" role=\"menu\">' +\r\n                actionsHtml + '</ul>';\r\n            if ($actionsTable.length < 1) {\r\n                var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.options.actions.width + 'px\"></div>').insertBefore($table);\r\n                var $actionsColumn = $table.clone().addClass('table-actions');\r\n                $actionsColumn.find('th:not(:last-child)').remove();\r\n                $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n                // Dont show actions dropdown in header if not multi select\r\n                if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                    $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                    if (this.options.selectable !== 'action') {\r\n                        // disable the header dropdown until an item is selected\r\n                        $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                    }\r\n                } else {\r\n                    var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                    $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n                }\r\n\r\n                // Create Actions dropdown for each cell in actions table\r\n                var $actionsCells = $actionsColumn.find('td');\r\n\r\n                $actionsCells.each(function addActionsDropdown(rowNumber) {\r\n                    $(this).html(actionsDropdown).addClass(\"r-list-action\");\r\n                    $(this).find('a').attr('data-row', rowNumber + 1);\r\n                });\r\n            }\r\n        }\r\n\r\n        $actionsColumnWrapper.append($actionsColumn);\r\n\r\n        this.repeater.$canvas.addClass('actions-enabled');\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick(e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n\r\n                self.repeater.$element.find(selector).each(function eachSelector(selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n    createItemActions_1: function  () {\r\n\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html(`<th><div class=\"${this.options.headingClass}\">` + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + `<div class=\"${this.options.headingClass}\">` + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$element.find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find(`.${this.options.checkClass}`).remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n                    repeater.$canvas.find(`.${this.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});\ndefine('skylark-domx-repeater/views/TileView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        viewClass: \"repeater-tile\",\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        },\r\n        renderItem : null\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .selectable`).each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .selectable`).each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find(`.${this.options.viewClass}`);\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n            $cont.addClass(this.options.viewClass);\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        if (this.options.renderItem) {\r\n            return this.options.renderItem.call(this,helpers);\r\n        }\r\n\r\n        var selectable = this.options.selectable;\r\n\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find(`.${this.options.viewClass} .selectable.selected`).each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n\r\n    return TileView;\r\n    \r\n});\ndefine('skylark-domx-repeater/main',[\r\n    \"./Repeater\",\r\n    \"./views\",\r\n    \"./views/ViewBase\",\r\n    \"./views/LinearView\",\r\n    \"./views/SliderView\",\r\n    \"./views/TableView\",\r\n    \"./views/TileView\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-domx-repeater', ['skylark-domx-repeater/main'], function (main) { return main; });\n\n"]}