{"version":3,"sources":["skylark-widgets-repeater.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","elmx","$","Widget","Repeater","inherit","klassName","pluginName","options","dataSource","callback","count","end","items","page","pages","start","defaultView","dropPagingCap","staticHeight","views","searchOnKeyPress","allowCancel","addons","_init","$btn","currentView","self","this","$element","_elm","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","e","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","plugin","value","trigger","render","clearInfinite","proxy","next","previous","evt","data","pageInputChange","text","val","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","length","initViewTypes","changeView","clear","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","each","attr","outerHTML","infinitescroll","remove","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","mixin","returnOptions","view","pageIndex","filter","selectedItem","pageSize","searchValue","search","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","i","setting","Error","ctor","push","initViewType","call","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","append","is","focus","prevView","split","selected","syncViewButtonState","_throbber","throb","className","beforeRender","repeaterPrototypeContext","viewTypeObj","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","$selected","target","parents","$itemToCheck","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","prototype","runRenderer","attach","ViewBase","Evented","controlsClass","fullScreen","init","repeater","hasControls","that","initOptions","close","getValue","getSelectedItems","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onopen","onopened","onslide","onslideend","onslidecomplete","onclose","onclosed","log","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","hasOwnProperty","name","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","album","overrided","list","el","num","initStartIndex","initWidget","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","time","interval","elements","animationFrameId","pause","add","concat","Array","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","slides","handleClose","destroyEventListeners","display","overflow","bodyOverflowStyle","closeHandler","dist","translateX","x","y","translateY","from","timer","setInterval","timeElap","left","clearInterval","preventDefault","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","which","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","isValidClose","slideHeight","ontouchcancel","oncomplete","srcElement","parent","parentNode","getNodeIndex","type","clientHeight","maxHeight","onload","onerror","onkeydown","toggleControls","stopImmediatePropagation","toggleSlideshow","handleClick","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","firstChild","title","alt","createTextNode","func","args","wait","apply","obj","loadElement","proxyListener","limit","min","j","unloadSlide","slidePrototype","cloneNode","setAttribute","reload","imagePrototype","elementPrototype","clientWidth","len","getAttribute","getItemUrl","handleOpen","first","openHandler","templates","default","slider","CarouselView","LightBoxView","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","getItemTitle","Album","getItemProperty","getElementsByTagName","src","backgroundImage","addIndicator","indicators","setActiveIndicator","activeIndicator","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","infiniteScroll","noItemsHTML","selectable","sortClearing","rowRendered","frozenColumns","actions","clearSelectedItems","highlightColumn","force","tbody","col","$item","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","setSelectedItems","itms","isArray","checkIfItemMatchesValue","rowIndex","property","selectItem","$itm","slct","$frozenCols","select","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","actionsDropdown","$actionsColumnWrapper","actions_width","$actionsColumn","label","$actionsCells","rowNumber","sizeActionsTable","actionName","row","rows","getActionItems","selector","selectorIndex","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","currentTarget","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","specialBrowserClass","noItems","sizeColumns","infScroll","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","TileView","alignment","itemRendered","template","n","compareItemIndex","compareItemSelector","thumbnail_clearSelectedItems","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","itemData","invalid","replace","trim","fillTemplate","main"],"mappings":"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","file":"../skylark-widgets-repeater.js","sourcesContent":["define('skylark-widgets-repeater/Repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-widgets-swt/Widget\",\r\n  \"skylark-widgets-swt/SelectList\",\r\n  \"skylark-widgets-swt/ComboBox\",\r\n  \"skylark-widgets-swt/SearchBox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,Widget){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"lark.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n//\t\t_init : function(element,options) {\r\n\t\t_init : function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n//\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.fu.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.fu.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.fu.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.fu.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.fu.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.fu.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.fu.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').plugin(\"lark.combobox\").destroy();\r\n\t\t\tthis.$element.find('.selectlist').plugin(\"lark.selectlist\").destroy();\r\n\t\t\tthis.$element.find('.search').plugin(\"lark.searchbox\").destroy();\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.fu.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").disable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").disable();\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").enable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").enable();\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.plugin(\"lark.combobox\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable();\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.fu.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"lark.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"lark.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\t/*\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\tvar setting = Repeater.views[viewTypes[i]];\r\n\t\t\t\tif (!setting) {\r\n\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t} \r\n\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (views.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.fu.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.fu.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.fu.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* lwf\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"loader\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem({\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render.call(this, {\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* // by lwf\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\t\t*/\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t}\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\t//this.$loader.hide().loader('pause');\r\n\t\tif (this._throbber) {\r\n\t\t\tthis._throbber.remove();\r\n\t\t\tthis._throbber = null;\r\n\t\t}\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.fu.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.fu.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\t// For backwards compatibility.\r\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\r\n\r\n\r\n\r\n\treturn skylark.attach(\"ui.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views',[\r\n\t\"./Repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.views = {};\r\n});\ndefine('skylark-widgets-repeater/views/ViewBase',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"../views\",\t\r\n],function(langx,noder,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t  // Defines if the gallery should open in fullscreen mode:\r\n\t\t  fullScreen: false\r\n\r\n\t    },\r\n\t    \r\n\t\tinit : function (repeater,options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.repeater = repeater;\r\n\t\t\tthis.initOptions(options);\r\n\t        if (this.options.fullScreen) {\r\n\t          noder.fullScreen(this.container[0]);\r\n\t        }\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (that.container.hasClass(that.options.controlsClass)) {\r\n\t              hasControls = true\r\n\t              that.container.removeClass(that.options.controlsClass);\r\n\t            } else {\r\n\t              hasControls = false\r\n\t            }\r\n\t        });\r\n\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (hasControls) {\r\n\t              that.container.addClass(that.options.controlsClass);\r\n\t            }\r\n\t        });\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t      // Create a copy of the prototype options:\r\n\t      this.options = langx.mixin({}, this.options,options);\r\n\t    },\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n      \t},\r\n\r\n      \tgetValue : function() {\r\n      \t\treturn this.getSelectedItems();\r\n      \t},\r\n\r\n      \tcleared : function() {\r\n\r\n      \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-widgets-repeater/views/slider',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"../views\", \r\n  \"./ViewBase\"\r\n],function (langx,noder,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the album view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'skylarkui-album-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'skylarkui-album-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'skylarkui-album-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'skylarkui-album-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'skylarkui-album-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: false,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n      // Callback function executed when the Gallery is initialized.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopen: undefined,\r\n      // Callback function executed when the Gallery has been initialized\r\n      // and the initialization transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopened: undefined,\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n      // Callback function executed when the Gallery is about to be closed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclose: undefined,\r\n      // Callback function executed when the Gallery has been closed\r\n      // and the closing transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclosed: undefined\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    console:\r\n      window.console && typeof window.console.log === 'function'\r\n        ? window.console\r\n        : { log: function () {} },\r\n\r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    init: function (album,options){\r\n      this.overrided(album,options);\r\n\r\n      this.list = this.album.items;\r\n      this.options.container = this.album.el;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      if (this.initWidget() === false) {\r\n        return false\r\n      }\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval\r\n      if (this.elements[this.index] > 1) {\r\n        this.timeout = this.setTimeout(\r\n          (!this.requestAnimationFrame && this.slide) ||\r\n            function (to, speed) {\r\n              that.animationFrameId = that.requestAnimationFrame.call(\r\n                window,\r\n                function () {\r\n                  that.slide(to, speed)\r\n                }\r\n              )\r\n            },\r\n          [this.index + 1, this.options.slideshowTransitionSpeed],\r\n          this.interval\r\n        )\r\n      }\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n    },\r\n\r\n    handleClose: function () {\r\n      var options = this.options\r\n      this.destroyEventListeners()\r\n      // Cancel the slideshow:\r\n      this.pause()\r\n      this.container[0].style.display = 'none'\r\n      this.container\r\n        .removeClass(options.displayClass)\r\n        .removeClass(options.singleClass)\r\n        .removeClass(options.leftEdgeClass)\r\n        .removeClass(options.rightEdgeClass)\r\n      if (options.hidePageScrollbars) {\r\n        document.body.style.overflow = this.bodyOverflowStyle\r\n      }\r\n      if (this.options.clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      if (this.options.onclosed) {\r\n        this.options.onclosed.call(this)\r\n      }\r\n    },\r\n\r\n    close: function () {\r\n      var that = this\r\n      function closeHandler (event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, closeHandler)\r\n          that.handleClose()\r\n        }\r\n      }\r\n      if (this.options.onclose) {\r\n        this.options.onclose.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, closeHandler)\r\n        this.container.removeClass(this.options.displayClass)\r\n      } else {\r\n        this.handleClose()\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !$.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (isValidClose) {\r\n          this.close()\r\n        } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    oncomplete: function (event) {\r\n      var target = event.target || event.srcElement\r\n      var parent = target && target.parentNode\r\n      var index\r\n      if (!target || !parent) {\r\n        return\r\n      }\r\n      index = this.getNodeIndex(parent)\r\n      $(parent).removeClass(this.options.slideLoadingClass)\r\n      if (event.type === 'error') {\r\n        $(parent).addClass(this.options.slideErrorClass)\r\n        this.elements[index] = 3 // Fail\r\n      } else {\r\n        this.elements[index] = 2 // Done\r\n      }\r\n      // Fix for IE7's lack of support for percentage max-height:\r\n      if (target.clientHeight > this.container[0].clientHeight) {\r\n        target.style.maxHeight = this.container[0].clientHeight\r\n      }\r\n      if (this.interval && this.slides[this.index] === parent) {\r\n        this.play()\r\n      }\r\n      this.setTimeout(this.options.onslidecomplete, [index, parent])\r\n    },\r\n\r\n    onload: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onerror: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          if (this.options.closeOnEscape) {\r\n            this.close()\r\n            // prevent Esc from closing other things\r\n            event.stopImmediatePropagation()\r\n          }\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n      function isTarget (className) {\r\n        return $(target).hasClass(className) || $(parent).hasClass(className)\r\n      }\r\n      if (isTarget(options.toggleClass)) {\r\n        // Click on \"toggle\" control\r\n        this.preventDefault(event)\r\n        this.toggleControls()\r\n      } else if (isTarget(options.prevClass)) {\r\n        // Click on \"prev\" control\r\n        this.preventDefault(event)\r\n        this.prev()\r\n      } else if (isTarget(options.nextClass)) {\r\n        // Click on \"next\" control\r\n        this.preventDefault(event)\r\n        this.next()\r\n      } else if (isTarget(options.closeClass)) {\r\n        // Click on \"close\" control\r\n        this.preventDefault(event)\r\n        this.close()\r\n      } else if (isTarget(options.playPauseClass)) {\r\n        // Click on \"play-pause\" control\r\n        this.preventDefault(event)\r\n        this.toggleSlideshow()\r\n      } else if (parent === this.slidesContainer[0]) {\r\n        // Click on slide background\r\n        if (options.closeOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.close()\r\n        } else if (options.toggleControlsOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        }\r\n      } else if (\r\n        parent.parentNode &&\r\n        parent.parentNode === this.slidesContainer[0]\r\n      ) {\r\n        // Click on displayed element\r\n        if (options.toggleControlsOnSlideClick) {\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var element = this.album.renderItem(obj,callback);\r\n      $(element).addClass(this.options.slideContentClass);\r\n      return element;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).addClass(this.options.slideLoadingClass)\r\n          this.slides[index].appendChild(\r\n            this.createElement(this.list[index], this.proxyListener)\r\n          )\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var album = this.album,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || album.getItemUrl(this.list[i]) ===  album.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n    handleOpen: function () {\r\n      if (this.options.onopened) {\r\n        this.options.onopened.call(this)\r\n      }\r\n    },\r\n\r\n    initWidget: function () {\r\n      var that = this\r\n      function openHandler (event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, openHandler)\r\n          that.handleOpen()\r\n        }\r\n      }\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        this.console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        this.console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.onopen) {\r\n        this.options.onopen.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, openHandler)\r\n      } else {\r\n        this.handleOpen()\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  return views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView,\r\n    \"templates\" : {\r\n      \"default\" : '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"close\">×</a>' + \r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>'\r\n\r\n    } \r\n  };\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views/carousel',[\r\n  \"../views\",\t\r\n  './slider'\r\n],function (views,slider) {\r\n\r\n\tvar CarouselView = slider.ctor.inherit({\r\n\t\tklassName : \"CarouselView\",\r\n\r\n\t\toptions : {\r\n\t      hidePageScrollbars: false,\r\n\t      toggleControlsOnReturn: false,\r\n\t      toggleSlideshowOnSpace: false,\r\n\t      enableKeyboardNavigation: false,\r\n\t      closeOnEscape: false,\r\n\t      closeOnSlideClick: false,\r\n\t      closeOnSwipeUpOrDown: false,\r\n\t      disableScroll: false,\r\n\t      startSlideshow: true\t\t\t\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t    \tvar options = langx.mixin({},CarouselView.prototype.options,options);\r\n\t\t\tthis.overrided(options);\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views[\"carousel\"] = {\r\n\t\t\"name\" :  \"carousel\",\r\n\t\t\"ctor\" :  CarouselView,\r\n\t\t\"templates\" : {\r\n\t\t\t\"default\" : '<div class=\"slides\"></div>' +\r\n\t\t\t          '<h3 class=\"title\"></h3>' +\r\n\t\t\t          '<a class=\"prev\">‹</a>' +\r\n\t\t\t          '<a class=\"next\">›</a>' +\r\n\t\t\t          '<a class=\"close\">×</a>' + \r\n\t\t\t          '<a class=\"play-pause\"></a>' +\r\n\t\t\t          '<ol class=\"indicator\"></ol>'\r\n\r\n\t\t} \r\n\t};\r\n\r\n});\ndefine('skylark-widgets-repeater/views/flipbook',[],function(){\r\n\t// TODO : This module is in developping.\r\n});\ndefine('skylark-widgets-repeater/views/lightbox',[\r\n  'skylark-langx/langx',\r\n  \"../views\",\t\r\n  './slider'\r\n],function (langx,views,slider) {\r\n\r\n\tvar LightBoxView = slider.ctor.inherit({\r\n\t\tklassName : \"LightBoxView\",\r\n\t\toptions : {\r\n\t        // Hide the page scrollbars:\r\n\t        hidePageScrollbars: false,\r\n\r\n\t\t    // The tag name, Id, element or querySelector of the indicator container:\r\n\t\t    indicatorContainer: 'ol',\r\n\t\t    // The class for the active indicator:\r\n\t\t    activeIndicatorClass: 'active',\r\n\t\t    // The list object property (or data attribute) with the thumbnail URL,\r\n\t\t    // used as alternative to a thumbnail child element:\r\n\t\t    thumbnailProperty: 'thumbnail',\r\n\t\t    // Defines if the gallery indicators should display a thumbnail:\r\n\t\t    thumbnailIndicators: true\r\n\t\t},\r\n\r\n\r\n\t    initOptions: function (options) {\r\n\t    \tvar options = langx.mixin({},LightBoxView.prototype.options,options);\r\n\t\t\tthis.overrided(options);\r\n\t    },\r\n\r\n\t    createIndicator: function (obj) {\r\n\t      var album = this.album,\r\n\t      \t\tindicator = this.indicatorPrototype.cloneNode(false)\r\n\t      var title = album.getItemTitle(obj)\r\n\t      var thumbnailProperty = this.options.thumbnailProperty\r\n\t      var thumbnailUrl\r\n\t      var thumbnail\r\n\t      if (this.options.thumbnailIndicators) {\r\n\t        if (thumbnailProperty) {\r\n\t          thumbnailUrl = Album.getItemProperty(obj, thumbnailProperty)\r\n\t        }\r\n\t        if (thumbnailUrl === undefined) {\r\n\t          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n\t          if (thumbnail) {\r\n\t            thumbnailUrl = thumbnail.src\r\n\t          }\r\n\t        }\r\n\t        if (thumbnailUrl) {\r\n\t          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n\t        }\r\n\t      }\r\n\t      if (title) {\r\n\t        indicator.title = title;\r\n\t      }\r\n\t      return indicator;\r\n\t    },\r\n\r\n\t    addIndicator: function (index) {\r\n\t      if (this.indicatorContainer.length) {\r\n\t        var indicator = this.createIndicator(this.list[index])\r\n\t        indicator.setAttribute('data-index', index)\r\n\t        this.indicatorContainer[0].appendChild(indicator)\r\n\t        this.indicators.push(indicator)\r\n\t      }\r\n\t    },\r\n\r\n\t    setActiveIndicator: function (index) {\r\n\t      if (this.indicators) {\r\n\t        if (this.activeIndicator) {\r\n\t          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t        }\r\n\t        this.activeIndicator = $(this.indicators[index])\r\n\t        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n\t      }\r\n\t    },\r\n\r\n\t    initSlides: function (reload) {\r\n\t      if (!reload) {\r\n\t        this.indicatorContainer = this.container.find(\r\n\t          this.options.indicatorContainer\r\n\t        )\r\n\t        if (this.indicatorContainer.length) {\r\n\t          this.indicatorPrototype = document.createElement('li')\r\n\t          this.indicators = this.indicatorContainer[0].children\r\n\t        }\r\n\t      }\r\n\t      this.overrided(reload);\r\n\t    },\r\n\r\n\t    addSlide: function (index) {\r\n\t      this.overrided(index);\r\n\t      this.addIndicator(index)\r\n\t    },\r\n\r\n\t    resetSlides: function () {\r\n\t    \tthis.overrided();\r\n\t    \tthis.indicatorContainer.empty();\r\n\t    \tthis.indicators = [];\r\n\t    },\r\n\r\n\t    handleClick: function (event) {\r\n\t      var target = event.target || event.srcElement\r\n\t      var parent = target.parentNode\r\n\t      if (parent === this.indicatorContainer[0]) {\r\n\t        // Click on indicator element\r\n\t        this.preventDefault(event)\r\n\t        this.slide(this.getNodeIndex(target))\r\n\t      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n\t        // Click on indicator child element\r\n\t        this.preventDefault(event)\r\n\t        this.slide(this.getNodeIndex(parent))\r\n\t      } else {\r\n\t        return this.overrided(event)\r\n\t      }\r\n\t    },\r\n\r\n\t    handleSlide: function (index) {\r\n\t      this.overrided(index)\r\n\t      this.setActiveIndicator(index)\r\n\t    },\r\n\r\n\t    handleClose: function () {\r\n\t      if (this.activeIndicator) {\r\n\t        this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t      }\r\n\t      this.overrided();\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views[\"lightbox\"] = {\r\n\t\t\"name\" :  \"lightbox\",\r\n\t\t\"ctor\" :  LightBoxView,\r\n\t\t\"templates\" : {\r\n\t\t\t\"default\" : '<div class=\"slides\"></div>' +\r\n\t\t\t          '<h3 class=\"title\"></h3>' +\r\n\t\t\t          '<a class=\"prev\">‹</a>' +\r\n\t\t\t          '<a class=\"next\">›</a>' +\r\n\t\t\t          '<a class=\"close\">×</a>' + \r\n\t\t\t          '<ol class=\"indicator\"></ol>'\r\n\r\n\t\t} \r\n\t};\r\n\r\n});\ndefine('skylark-widgets-repeater/views/masonory',[],function(){\r\n\t// TODO : This module is in developping.\r\n});\ndefine('skylark-widgets-repeater/views/table',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find('.repeater-list-check').remove();\r\n        this.repeater.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find('.repeater-list-wrapper > table tbody');\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-list-wrapper');\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find('.repeater-list-check').remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find('.repeater-list table');\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find('.repeater-list-heading');\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var repeaterWrapper = this.repeater.$element.find('.repeater-list');\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = '.repeater-list-wrapper > table .selected';\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = '.repeater-list-wrapper > table tr';\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find('.repeater-list table.table-actions');\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find('.repeater-list-wrapper > table');\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n        this.repeater.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find('.repeater-list table');\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n                    self.repeater.$element.trigger('selected.fu.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n                    self.repeater.$element.trigger('deselected.fu.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find('.repeater-list-wrapper > table thead tr'));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find('.repeater-list');\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $('<div class=\"repeater-list ' + this.specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n            $listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.fu.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find('.repeater-list-check').remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.fu.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find('.repeater-list-check').remove();\r\n                    repeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.fu.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.fu.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.fu.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = '.repeater-list-wrapper > table .selected';\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = '.repeater-list-wrapper > table tr';\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     return views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    };   \r\n\r\n});\ndefine('skylark-widgets-repeater/views/tile',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-thumbnail-cont');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.options.template));\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.fu.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.fu.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.fu.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    //ADDITIONAL METHODS\r\n    function fillTemplate(itemData, template) {\r\n        var invalid = false;\r\n\r\n        function replace() {\r\n            var end, start, val;\r\n\r\n            start = template.indexOf('{{');\r\n            end = template.indexOf('}}', start + 2);\r\n\r\n            if (start > -1 && end > -1) {\r\n                val = langx.trim(template.substring(start + 2, end));\r\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                template = template.substring(0, start) + val + template.substring(end + 2);\r\n            } else {\r\n                invalid = true;\r\n            }\r\n        }\r\n\r\n        while (!invalid && template.search('{{') >= 0) {\r\n            replace(template);\r\n        }\r\n\r\n        return template;\r\n    }\r\n\r\n    return views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n    \r\n});\ndefine('skylark-widgets-repeater/main',[\r\n    \"./Repeater\",\r\n    \"./views\",\r\n    \"./views/ViewBase\",\r\n    \"./views/carousel\",\r\n    \"./views/flipbook\",\r\n    \"./views/lightbox\",\r\n    \"./views/masonory\",\r\n    \"./views/slider\",\r\n    \"./views/table\",\r\n    \"./views/tile\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-widgets-repeater', ['skylark-widgets-repeater/main'], function (main) { return main; });\n\n"]}