{"version":3,"sources":["skylark-widgets-repeater.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","elmx","$","Widget","Repeater","inherit","klassName","pluginName","options","dataSource","callback","count","end","items","page","pages","start","defaultView","dropPagingCap","staticHeight","views","searchOnKeyPress","allowCancel","addons","_init","$btn","currentView","self","this","$element","_elm","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","e","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","plugin","value","trigger","render","clearInfinite","proxy","next","previous","evt","data","pageInputChange","text","val","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","length","initViewTypes","changeView","clear","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","each","attr","outerHTML","infinitescroll","remove","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","mixin","returnOptions","view","pageIndex","filter","selectedItem","pageSize","searchValue","search","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","i","setting","Error","ctor","push","initViewType","call","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","append","is","focus","prevView","split","selected","syncViewButtonState","_throbber","throb","className","beforeRender","repeaterPrototypeContext","viewTypeObj","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","$selected","target","parents","$itemToCheck","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","toLowerCase","test","parseJSON","ignore","getItemProperty","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","prototype","runRenderer","attach","ViewBase","Evented","controlsClass","fullScreen","_create$Item","template","itemData","invalid","indexOf","trim","substring","init","repeater","hasControls","that","initOptions","close","getValue","getSelectedItems","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onopen","onopened","onslide","onslideend","onslidecomplete","onclose","onclosed","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","indicators","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","hasOwnProperty","name","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","helper","list","num","initStartIndex","initView","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","time","interval","elements","animationFrameId","pause","add","concat","Array","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","slides","handleClose","activeIndicator","destroyEventListeners","display","overflow","bodyOverflowStyle","closeHandler","dist","translateX","x","y","translateY","from","timer","setInterval","timeElap","left","clearInterval","preventDefault","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","which","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","isValidClose","slideHeight","ontouchcancel","oncomplete","srcElement","parent","parentNode","getNodeIndex","type","clientHeight","maxHeight","onload","onerror","onkeydown","toggleControls","stopImmediatePropagation","toggleSlideshow","handleClick","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","setActiveIndicator","firstChild","title","alt","createTextNode","func","args","wait","apply","$item","loadElement","proxyListener","limit","min","j","unloadSlide","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","slidePrototype","reload","imagePrototype","elementPrototype","clientWidth","len","getItemUrl","handleOpen","first","log","openHandler","overrided","templates","default","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","infiniteScroll","noItemsHTML","selectable","sortClearing","rowRendered","frozenColumns","actions","clearSelectedItems","highlightColumn","force","tbody","col","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","setSelectedItems","itms","isArray","checkIfItemMatchesValue","rowIndex","selectItem","$itm","slct","$frozenCols","select","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","actionsDropdown","$actionsColumnWrapper","actions_width","$actionsColumn","label","$actionsCells","rowNumber","sizeActionsTable","actionName","row","rows","getActionItems","selector","selectorIndex","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","currentTarget","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","specialBrowserClass","noItems","sizeColumns","infScroll","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","firefox","selectedSelector","TileView","alignment","itemRendered","n","compareItemIndex","compareItemSelector","thumbnail_clearSelectedItems","$cont","center","justify","right","thumbnail_injectSpacers","$thumbnail","fillTemplate","main"],"mappings":";;;;;;;+zBAAAA,EAAA,qCACA,wBACA,sBACA,4BACA,4BACA,0BACA,yBACA,yBACA,0BACA,6BACA,iCACA,+BACA,iCACA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAIA,IAAAC,EAAAD,EAAAE,SACAC,UAAA,WAEAC,WAAA,gBAEAC,SACAC,WAAA,SAAAD,EAAAE,GACAA,GAAAC,MAAA,EAAAC,IAAA,EAAAC,SAAAC,KAAA,EAAAC,MAAA,EAAAC,MAAA,KAEAC,aAAA,EACAC,cAAA,GACAC,cAAA,EACAC,MAAA,KACAC,kBAAA,EACAC,aAAA,EAEAC,QACAH,OAAA,QAAA,UAKAI,MAAA,WACA,IACAC,EACAC,EAFAC,EAAAC,KAIAA,KAAAC,SAAA3B,EAAA0B,KAAAE,MAEAF,KAAAG,QAAAH,KAAAC,SAAAG,KAAA,oBACAJ,KAAAK,OAAAL,KAAAC,SAAAG,KAAA,mBACAJ,KAAAM,KAAAN,KAAAC,SAAAG,KAAA,iBACAJ,KAAAO,SAAAP,KAAAC,SAAAG,KAAA,qBACAJ,KAAAQ,QAAAR,KAAAC,SAAAG,KAAA,oBACAJ,KAAAS,UAAAT,KAAAC,SAAAG,KAAA,qCACAJ,KAAAU,SAAAV,KAAAC,SAAAG,KAAA,kBACAJ,KAAAW,OAAAX,KAAAC,SAAAG,KAAA,mBACAJ,KAAAY,SAAAZ,KAAAC,SAAAG,KAAA,kBACAJ,KAAAa,eAAAb,KAAAC,SAAAG,KAAA,2BACAJ,KAAAc,QAAAd,KAAAC,SAAAG,KAAA,oBAAAA,KAAA,WACAJ,KAAAe,iBAAAf,KAAAC,SAAAG,KAAA,6BACAJ,KAAAgB,OAAAhB,KAAAC,SAAAG,KAAA,mBACAJ,KAAAiB,UAAAjB,KAAAC,SAAAG,KAAA,sBACAJ,KAAAkB,OAAAlB,KAAAC,SAAAG,KAAA,mBAEAJ,KAAAC,SAAAkB,GAAA,iCAAA,2BAAA,SAAAC,GACA9C,EAAA0B,MAAAqB,aAGArB,KAAAsB,YAAA,EACAtB,KAAAF,YAAA,KACAE,KAAAuB,YAAA,EACAvB,KAAAwB,0BAAA,aACAxB,KAAAyB,sBAAA,KACAzB,KAAA0B,0BAAA,EACA1B,KAAA2B,qBAAA,KACA3B,KAAA4B,4BACA5B,KAAA6B,cAAA,EAEA7B,KAAA8B,cAAA,EACA9B,KAAA+B,iBACA/B,KAAAgC,OAAA,IAAAC,MAAAC,WAAAC,KAAAC,MAAA,IAAAD,KAAAE,UAAA,GACArC,KAAAsC,qBAAA,KACAtC,KAAAuC,wBAAA,EA/EAvC,KAAAwC,SAAA,KAEAxC,KAAAO,SAAAkC,OAAA,mBACAzC,KAAAS,UAAAgC,OAAA,mBACAzC,KAAAa,eAAAT,KAAA,aAAAqC,OAAA,iBACAzC,KAAAc,QAAA2B,OAAA,kBACAhD,iBAAAO,KAAApB,QAAAa,iBACAC,YAAAM,KAAApB,QAAAc,cAGAM,KAAAO,SAAAY,GAAA,wBAAA,SAAAC,EAAAsB,GACA3C,EAAAE,SAAA0C,QAAA,yBAAAD,GACA3C,EAAA6C,QACAC,eAAA,EACAf,cAAA,SAGA9B,KAAAU,SAAAS,GAAA,sBAAAnD,EAAA8E,MAAA9C,KAAA+C,KAAA/C,OACAA,KAAAS,UAAAU,GAAA,wBAAA,SAAAC,EAAAsB,GACA3C,EAAAE,SAAA0C,QAAA,gCAAAD,GACA3C,EAAA6C,QACAd,cAAA,SAGA9B,KAAAY,SAAAO,GAAA,sBAAAnD,EAAA8E,MAAA9C,KAAAgD,SAAAhD,OACAA,KAAAa,eAAAT,KAAA,aAAAe,GAAA,sBAAA,SAAA8B,EAAAC,GACAnD,EAAAoD,gBAAAD,EAAAE,KAAAF,KAEAlD,KAAAc,QAAAK,GAAA,uCAAA,SAAAC,EAAAsB,GACA3C,EAAAE,SAAA0C,QAAA,8BAAAD,GACA3C,EAAA6C,QACAC,eAAA,EACAf,cAAA,SAGA9B,KAAAc,QAAAK,GAAA,qBAAA,SAAAC,EAAAsB,GACA3C,EAAAE,SAAA0C,QAAA,yBAAAD,GACA3C,EAAA6C,QACAC,eAAA,EACAf,cAAA,SAIA9B,KAAAe,iBAAAI,GAAA,qBAAA,WACApB,EAAAoD,gBAAApD,EAAAgB,iBAAAsC,SAEArD,KAAAe,iBAAAI,GAAA,QAAA,SAAAC,GACA,KAAAA,EAAAkC,SACAvD,EAAAoD,gBAAApD,EAAAgB,iBAAAsC,SAGArD,KAAAkB,OAAAd,KAAA,SAAAe,GAAA,uBAAAnD,EAAA8E,MAAA9C,KAAAuD,YAAAvD,OAEA1B,EAAAkF,QAAArC,GAAA,wBAAAnB,KAAAgC,MAAA,WACAyB,aAAA1D,EAAAgC,eACAhC,EAAAgC,cAAA2B,WAAA,WACA3D,EAAA4D,SACA5D,EAAAE,SAAA0C,QAAA,0BACA,OAKA,IAAA3C,KAAApB,QAAAS,YACAS,EAAAE,KAAApB,QAAAS,aAEAQ,EAAAG,KAAAkB,OAAAd,KAAA,sBACAN,EAAAD,EAAA+D,OAAA,EAAA/D,EAAAwD,MAAA,SAKArD,KAAA6D,cAAA,WACA9D,EAAA4D,SACA5D,EAAAE,SAAA0C,QAAA,yBACA5C,EAAA6C,QACAkB,WAAAhE,OAKAiE,MAAA,SAAAC,GACA,IAAApF,EAAAoF,MAEApF,EAAAqF,SAGAjE,KAAA0B,2BAAA9C,EAAAiE,eAEAqB,EAAAlE,KAAAG,SAHAH,KAAAG,QAAAgE,aAOAC,IAAAxF,EAAA2E,aAAA3E,EAAA2E,YASAvD,KAAAqE,OACArE,KAAAqE,MAAAC,SACA1F,QAAAA,KAKA2F,gCAAA,WACAvE,KAAAsC,qBAAA,MAGAkC,QAAA,WACA,IAAAC,EAuBA,OArBAzE,KAAAC,SAAAG,KAAA,SAAAsE,KAAA,WACApG,EAAA0B,MAAA2E,KAAA,QAAArG,EAAA0B,MAAAqD,SAIArD,KAAAG,QAAAgE,QACAM,EAAAzE,KAAAC,SAAA,GAAA2E,UAGA5E,KAAAC,SAAAG,KAAA,aAAAqC,OAAA,iBAAA+B,UACAxE,KAAAC,SAAAG,KAAA,eAAAqC,OAAA,mBAAA+B,UACAxE,KAAAC,SAAAG,KAAA,WAAAqC,OAAA,kBAAA+B,UACAxE,KAAA0B,0BACApD,EAAA0B,KAAAyB,uBAAAoD,eAAA,WAGA7E,KAAAC,SAAA6E,SAGAxG,EAAAkF,QAAAuB,IAAA,wBAAA/E,KAAAgC,OAEAyC,GAGAO,QAAA,WAGAhF,KAAAc,QAAA2B,OAAA,kBAAAuC,UACAhF,KAAAO,SAAAkC,OAAA,mBAAAuC,UACAhF,KAAAkB,OAAAd,KAAA,gBAAA6E,SAAA,YAAAN,KAAA,WAAA,YACA3E,KAAAS,UAAAgC,OAAA,mBAAAuC,UACAhF,KAAAa,eAAAT,KAAA,aAAAqC,OAAA,iBAAAuC,UACAhF,KAAAe,iBAAA4D,KAAA,WAAA,YACA3E,KAAAY,SAAA+D,KAAA,WAAA,YACA3E,KAAAU,SAAAiE,KAAA,WAAA,YASA3E,KAAAqE,OACArE,KAAAqE,MAAAa,SACAC,QAAA,IAIAnF,KAAAuB,YAAA,EACAvB,KAAAC,SAAAgF,SAAA,YACAjF,KAAAC,SAAA0C,QAAA,2BAGAyC,OAAA,WAGApF,KAAAc,QAAA2B,OAAA,kBAAA2C,SACApF,KAAAO,SAAAkC,OAAA,mBAAA2C,SACApF,KAAAkB,OAAAd,KAAA,gBAAAiF,YAAA,YAAAC,WAAA,YACAtF,KAAAS,UAAAgC,OAAA,mBAAA2C,SACApF,KAAAa,eAAAT,KAAA,aAAAqC,OAAA,iBAAA2C,SACApF,KAAAe,iBAAAuE,WAAA,YAEAtF,KAAAY,SAAA2E,SAAA,aACAvF,KAAAY,SAAA0E,WAAA,YAEAtF,KAAAU,SAAA6E,SAAA,aACAvF,KAAAU,SAAA4E,WAAA,YAKAtF,KAAAY,SAAA2E,SAAA,aAAAvF,KAAAU,SAAA6E,SAAA,aACAvF,KAAAa,eAAA4B,OAAA,iBAAAuC,UAIA,IAAAQ,SAAAxF,KAAAK,OAAAoF,OAAA,IACAzF,KAAAS,UAAAgC,OAAA,mBAAA2C,SAEApF,KAAAS,UAAAgC,OAAA,mBAAAuC,UAUAhF,KAAAqE,OACArE,KAAAqE,MAAAa,SACAC,QAAA,IAIAnF,KAAAuB,YAAA,EACAvB,KAAAC,SAAAoF,YAAA,YACArF,KAAAC,SAAA0C,QAAA,0BAGA+C,eAAA,SAAA1B,GACA,IAAApF,EAAAoF,WACAI,IAAAxF,EAAAkD,gBACA,OAAAlD,EAAAkD,cACA9B,KAAAsB,YAAA,EAEAtB,KAAAsB,aAAA1C,EAAAkD,eAIA,IAAA6D,KACA/G,EAAA+G,oBACAA,EAAA/G,EAAA+G,kBAEA/G,EAAAgH,4BACA5F,KAAAsC,qBACAtC,KAAAsC,qBAAAtE,EAAA6H,MAAA7F,KAAAsC,qBAAAqD,GAEA3F,KAAAsC,qBAAAqD,IAKA3F,KAAAsC,uBACAqD,EAAA3H,EAAA6H,MAAA7F,KAAAsC,qBAAAqD,IAGA,IAAAG,GACAC,KAAA/F,KAAAF,YACAkG,UAAAhG,KAAAsB,YACA2E,QACA7C,KAAA,MACAV,MAAA,QAGA1C,KAAAO,SAAAqD,OAAA,IACAkC,EAAAG,OAAAjG,KAAAO,SAAAkC,OAAA,mBAAAyD,gBAGAlG,KAAA0B,2BACAoE,EAAAK,SAAA,GAEAnG,KAAAS,UAAAmD,OAAA,IACAkC,EAAAK,SAAAX,SAAAxF,KAAAS,UAAAgC,OAAA,mBAAAyD,eAAAxD,MAAA,MAIA,IAAA0D,EAAApG,KAAAc,SAAAd,KAAAc,QAAAV,KAAA,UAAAJ,KAAAc,QAAAV,KAAA,SAAAiD,MAmBA,MAlBA,KAAA+C,IACAN,EAAAO,OAAAD,GAUApG,KAAAqE,QACAyB,EAAA9F,KAAAqE,MAAAiC,YAAAR,IAIAA,EAAA9H,EAAA6H,MAAAC,EAAAH,IAKAY,kBAAA,SAAAnB,EAAApB,GACA,IAAAwC,EAAAxG,KAAAC,SAAAG,KAAA,oBACAqG,EAAAzG,KAAAC,SAAAG,KAAA,sBACAxB,EAAAoF,MAEA,GAAAoB,EACApF,KAAA0B,0BAAA,EACA1B,KAAA2B,qBAAA/C,EAAAI,WACAJ,EAAAC,kBACAD,EAAAI,IACAgB,KAAA4B,yBAAAhD,EACA6H,EAAAC,KACAC,OAAAF,EAAAE,SAAAH,EAAAI,gBAEAJ,EAAAK,WACA,CACA,IAAAC,EAAA9G,KAAAyB,sBACAyB,EAAA4D,EAAA5D,cACAA,EAAA2B,eACAiC,EAAA/B,IAAA,UACA+B,EAAAzB,YAAA,kBAEArF,KAAAyB,sBAAA,KACAzB,KAAA0B,0BAAA,EACA1B,KAAA2B,qBAAA,KACA3B,KAAA4B,4BACA6E,EAAAC,KACAC,OAAAF,EAAAE,SAAAH,EAAAI,gBAEAJ,EAAAO,SAIAC,qBAAA,SAAA9D,GACA,IAAAlE,GAAA,IAAAgB,KAAA2B,qBAAA3B,KAAA2B,0BAAAyC,EACAlF,EAAAgE,EAAAhE,KACAC,EAAA+D,EAAA/D,MAEAa,KAAAsB,iBAAA8C,IAAAlF,EAAAA,EAAA+H,MAEA,IAAA/D,EAAAlE,KAAAgB,KAAAsB,YAAA,GAAAnC,IACAa,KAAAyB,sBAAAoD,eAAA,MAAA7F,IAIAkI,sBAAA,WACA,IAAAJ,EAAA9G,KAAAG,QAAAC,KAAA,gCAGA,IADA0G,EAAAA,EAAAlD,OAAA,EAAA5D,KAAAG,QAAA2G,GACA5D,KAAA,qBACA4D,EAAAjC,eAAA,cACA,CACA,IAAA9E,EAAAC,KACAgE,EAAAhG,EAAA6H,SAAA7F,KAAA4B,0BACAoC,EAAAnF,WAAA,SAAAsI,EAAArI,GACAiB,EAAAyB,0BAAA1C,EACAiB,EAAA6C,QACAd,cAAA,KAGAgF,EAAAjC,eAAAb,GACAhE,KAAAyB,sBAAAqF,IAIAjD,cAAA,SAAA/E,GAaA,IAFA,IAAAU,EAAAQ,KAAAoH,UACAC,EAAArH,KAAApB,QAAAe,OAAAH,MACA8H,EAAA,EAAAA,EAAAD,EAAAzD,OAAA0D,IAAA,CACA,IAAAC,EAAA/I,EAAAmB,OAAAH,MAAA6H,EAAAC,IACA,IAAAC,EACA,MAAA,IAAAC,MAAA,iBAAAH,EAAAC,GAAA,oBAEA,IAAAG,EAAAF,EAAAE,KACAzH,KAAAoH,OAAAM,KAAA1H,KAAAoH,OAAAC,EAAAC,IAAA,IAAAG,EAAAzH,OAIAR,EAAAoE,OAAA,EACA+D,EAAAC,KAAA5H,KAAA,EAAAqH,EAAAvI,GAEAA,KAIA+I,YAAA,SAAA3E,GACAlD,KAAAK,OAAAoF,UAAArB,IAAAlB,EAAAnE,MAAAmE,EAAAnE,MAAA,KACAiB,KAAAM,KAAAmF,UAAArB,IAAAlB,EAAAlE,IAAAkE,EAAAlE,IAAA,KACAgB,KAAAgB,OAAAyE,UAAArB,IAAAlB,EAAA9D,MAAA8D,EAAA9D,MAAA,MAGA2D,KAAA,WACA/C,KAAAU,SAAAiE,KAAA,WAAA,YACA3E,KAAAY,SAAA+D,KAAA,WAAA,YACA3E,KAAA8B,cAAA,EACA9B,KAAAC,SAAA0C,QAAA,6BACA3C,KAAA4C,QACAd,cAAA9B,KAAA8B,iBAIAqB,gBAAA,SAAAE,EAAAyE,GAGA,IAAAC,EACA,GAAA1E,IAAArD,KAAA6B,cAAA,CACA7B,KAAA6B,cAAAwB,EACA,IAAAX,EAAA8C,SAAAnC,EAAA,IAAA,EACA0E,EAAArF,EAAA1C,KAAAsB,YACAtB,KAAAC,SAAA0C,QAAA,6BAAAD,EAAAoF,IACA9H,KAAA4C,QACAd,cAAAiG,MAKAC,WAAA,SAAA9E,GACAlD,KAAAa,eAAAwE,YAAA,UACArF,KAAAe,iBAAAsE,YAAA,UAEA,IAAA4C,EAAA/E,EAAA/D,MACAa,KAAAsB,iBAAA8C,IAAAlB,EAAAhE,KAAAgE,EAAAhE,KAAA+H,IAEA,IAAAiB,EAAA,IAAAD,EAAA,EAAAjI,KAAAsB,YAAA,EAEA,GAAA2G,GAAAjI,KAAApB,QAAAU,cAAA,CACAU,KAAAa,eAAAoE,SAAA,UACA,IAAAkD,EAAAnI,KAAAa,eAAAT,KAAA,kBACA+H,EAAAhE,QACA,IAAA,IAAAmD,EAAA,EAAAA,EAAAW,EAAAX,IAAA,CACA,IAAAc,EAAAd,EAAA,EACAa,EAAAE,OAAA,mBAAAD,EAAA,iBAAAA,EAAA,aAGApI,KAAAa,eAAAT,KAAA,sBAAAiD,IAAA6E,QAEAlI,KAAAe,iBAAAkE,SAAA,UACAjF,KAAAe,iBAAAsC,IAAA6E,GAGAlI,KAAA6B,cAAA7B,KAAAsB,YAAA,EAAA,GAEAtB,KAAAW,OAAA8E,KAAA,GAAAwC,GAGAjI,KAAAsB,YAAA,EAAA2G,GACAjI,KAAAU,SAAA4E,WAAA,YACAtF,KAAAU,SAAA2E,YAAA,cAEArF,KAAAU,SAAAiE,KAAA,WAAA,YACA3E,KAAAU,SAAAuE,SAAA,aAIAjF,KAAAsB,YAAA,GAAA,GACAtB,KAAAY,SAAA0E,WAAA,YACAtF,KAAAY,SAAAyE,YAAA,cAEArF,KAAAY,SAAA+D,KAAA,WAAA,YACA3E,KAAAY,SAAAqE,SAAA,aAIA,IAAAjF,KAAA8B,gBACA9B,KAAA8B,cAAA,EACA9B,KAAAU,SAAA4H,GAAA,aAEAtI,KAAAY,SAAA2H,QAEAvI,KAAAU,SAAA6H,QAEAvI,KAAAY,SAAA0H,GAAA,aAEAtI,KAAAU,SAAA6H,QAEAvI,KAAAY,SAAA2H,UAKAvF,SAAA,WACAhD,KAAAU,SAAAiE,KAAA,WAAA,YACA3E,KAAAY,SAAA+D,KAAA,WAAA,YACA3E,KAAA8B,eAAA,EACA9B,KAAAC,SAAA0C,QAAA,iCACA3C,KAAA4C,QACAd,cAAA9B,KAAA8B,iBAKAc,OAAA,SAAAoB,GACAhE,KAAAgF,UAEA,IAAAzB,GAAA,EAEA3E,EAAAoF,MAEA,GAAApF,EAAAkF,YAAA9D,KAAAF,cAAAlB,EAAAkF,WAAA,CACA,IAAA0E,EAAAxI,KAAAF,YACAE,KAAAF,YAAAlB,EAAAkF,WACA9D,KAAAwC,SAAAxC,KAAAF,YAAA2I,MAAA,KAAA,GAEAzI,KAAAqE,MAAArE,KAAAoH,OAAApH,KAAAwC,UAIAxC,KAAAC,SAAA0E,KAAA,mBAAA3E,KAAAF,aACAE,KAAAC,SAAA0E,KAAA,gBAAA3E,KAAAwC,UACAe,GAAA,EACA3E,EAAA2E,YAAAA,EAEAvD,KAAAC,SAAA0C,QAAA,4BAAA3C,KAAAF,aAEAE,KAAA0B,0BACA1B,KAAAuG,mBAAA,GAWAvG,KAAAqE,MAAAqE,UACAF,SAAAA,IAIAxI,KAAA2I,sBAEA/J,EAAAqF,cAAAG,IAAAxF,EAAAqF,SAAArF,EAAAqF,UAAAV,EACAvD,KAAA+D,MAAAnF,KAEAoB,KAAA0B,0BAAA1B,KAAA0B,0BAAA6B,KAEAvD,KAAA4I,UAAA5I,KAAA6I,OACAC,UAAA,YAIA,IAAAxC,EAAAtG,KAAA0F,eAAA9G,GAEAmK,EAAA/I,KAAApB,QAAAC,WACAmK,EAAAhJ,KACAiJ,EAAAjJ,KAAAqE,MACA0E,EACAzC,EAGA,SAAA4C,GACAC,EAAAvB,KACAoB,GAEA9F,KAAAgG,EACA5C,YAAAA,EACA1H,QAAAA,EACA2E,YAAAA,EACA0F,YAAAA,OAOAtF,OAAA,WAaA,IAZA,IAEAgD,EACAyC,EAKAC,EARA9J,GAAA,IAAAS,KAAApB,QAAAW,aAAAS,KAAAC,SAAA0E,KAAA,qBAAA3E,KAAApB,QAAAW,aAIA+J,KACAC,KAEAC,EAAAxJ,KAAAC,SAAAwJ,aAAA,YAEAC,EAAA,EAGAA,EAAAF,EAAA5F,QAAA5D,KAAAC,SAAAqI,GAAA,YACAe,EAAAG,EAAAE,GAEApL,EAAA+K,GAAAf,GAAA,aACAiB,EAAA7B,KAAA2B,EAAAM,MAAA,SACAN,EAAAM,MAAA,QAAA,QACAL,EAAA5B,KAAA2B,IAEAK,IAOA,QAAAtF,IAAA7E,IAAA,IAAAA,GAAA,UAAAA,EAAA,CACAS,KAAAG,QAAA8E,SAAA,aACAmE,GACAQ,OAAA5J,KAAAiB,UAAAyF,IAAA,iBACAmD,IAAA7J,KAAAiB,UAAAyF,IAAA,eAGA,IAAAoD,EAAA,SAAAvK,IAAA,IAAAA,EAAAS,KAAAC,SAAA0G,SAAAnB,SAAAjG,EAAA,IACAwK,EAAA/J,KAAAC,SAAAG,KAAA,oBAAAwG,cACAoD,EAAAhK,KAAAC,SAAAG,KAAA,oBAAAwG,cACAqD,EAAA,SAAAb,EAAAQ,OAAA,EAAApE,SAAA4D,EAAAQ,OAAA,IACAM,EAAA,SAAAd,EAAAS,IAAA,EAAArE,SAAA4D,EAAAS,IAAA,IAEAlD,EAAAmD,EAAAC,EAAAC,EAAAC,EAAAC,EACAlK,KAAAiB,UAAA2F,YAAAD,QAEA3G,KAAAG,QAAAkF,YAAA,aAaArF,KAAAqE,OACArE,KAAAqE,MAAAV,QACAgD,OAAA3G,KAAAC,SAAA2G,cACAuD,MAAAnK,KAAAC,SAAAmK,eAIAd,EAAAe,QAAA,SAAAC,EAAAhD,GACAgD,EAAAX,MAAA,QAAAJ,EAAAjC,MAKAiD,YAAA,SAAAtB,EAAA/F,EAAApE,GACA,GAAAmK,EAAArG,OA4DAqG,EAAArG,QACA4H,UAAAxK,KAAAG,QACA+C,KAAAA,GACApE,GACAA,EAAAoE,OAhEA,CACA,GAAA+F,EAAAwB,OAAA,CACA,IAAAC,EAAAzB,EAAAwB,QACAD,UAAAxK,KAAAG,QACA+C,KAAAA,IAEAyH,EAAA3K,KAAAG,QAAAuK,GAGA,IAAAE,EAAA5K,KAAAG,QAAAC,KAAA,gCACAyK,EAAAD,EAAAhH,OAAA,EAAAgH,EAAA5K,KAAAG,QAKA,GAAA8I,EAAA6B,WAAA,CACA,IAAAC,EACAC,EAAA/B,EAAAgC,QAAA,aACAC,EAAAF,EAAAvC,MAAA,KACA0C,EAAAD,EAAA,GAEA,GAAA,SAAAC,GAAA,SAAAA,EAAA,CACAJ,EAAA,SAAAI,EAAAnL,KAAAkD,EAIA,IADA,IAAAkI,EAAAF,EAAAG,MAAA,GACAC,EAAA,EAAAA,EAAAF,EAAAxH,OAAA0H,IAAA,CACA,QAAAlH,IAAA2G,EAAAK,EAAAE,IAEA,CACAP,KACAQ,EAAA,uEACA,MAJAR,EAAAA,EAAAK,EAAAE,IAQA,IAAA,IAAAE,EAAA,EAAAA,EAAAT,EAAAnH,OAAA4H,IAAA,CACA,IAAAC,EAAAxC,EAAA6B,YACAN,UAAAK,EACA3H,KAAAA,EACAwI,MAAAF,EACAT,OAAAA,IAEAJ,EAAAE,EAAAY,SAGAF,EAAA,mFAIA,GAAAtC,EAAA0C,MAAA,CACA,IAAAC,EAAA3C,EAAA0C,OACAnB,UAAAxK,KAAAG,QACA+C,KAAAA,IAEAyH,EAAA3K,KAAAG,QAAAyL,GAGA9M,EAAAoE,KAwBAK,YAAA,SAAAnC,GACA,IAAAyK,EAAAvN,EAAA8C,EAAA0K,QACAzI,EAAAwI,EAAAxI,MAEArD,KAAAuC,yBACAvC,KAAAuB,YAAAsK,EAAAE,QAAA,eAAAxG,SAAA,YACAvF,KAAA2I,sBAEA3I,KAAA4C,QACAkB,WAAAT,EACAvB,cAAA,SAMA6G,oBAAA,WACA,IAAAqD,EAAAhM,KAAAkB,OAAAd,KAAA,gBAAAJ,KAAAF,YAAA,MAEAE,KAAAuC,wBAAA,EACAvC,KAAAkB,OAAAd,KAAA,SAAAkL,KAAA,WAAA,GACAtL,KAAAkB,OAAAd,KAAA,gBAAAiF,YAAA,UAEA2G,EAAApI,OAAA,IACAoI,EAAAV,KAAA,WAAA,GACAU,EAAAD,QAAA,eAAA9G,SAAA,WAEAjF,KAAAuC,wBAAA,GAGA0J,kBAAA,SAAAC,EAAAC,GAiBA,OAhBAA,EAAAC,QAIA,4DACA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAnB,EACAmB,GACAH,GACAC,GACAC,GAAAhH,SAAAgH,EAAA,IACAH,GAAAH,IACAA,EAAAA,EAAAZ,MAIAY,GAGAQ,gBAAA,SAAAR,EAAAC,GACA,IAAAQ,EACArB,EAWA,GAVAY,EAAAU,SACAD,EAAAR,EAAAC,QAAA,YAAA,SAAAS,EAAAC,GACA,OAAAA,EAAAC,gBAEAzB,EAAAY,EAAAU,QAAAD,IACAT,EAAAc,eACA1B,EAAAY,EAAAc,aACA,QAAAb,EAAAC,QAAA,WAAA,OAAAa,gBAGA,iBAAA3B,EAAA,CAEA,GACA,4DAAA4B,KAAA5B,GAEA,IACA,OAAAhN,EAAA6O,UAAA7B,GACA,MAAA8B,IAEA,OAAA9B,IAIA+B,gBAAA,SAAAnB,EAAAC,GACA,IAAAb,EAAAtL,KAAA0M,gBAAAR,EAAAC,GAOA,YANA/H,IAAAkH,IACAA,EAAAY,EAAAC,SAEA/H,IAAAkH,IACAA,EAAAtL,KAAAiM,kBAAAC,EAAAC,IAEAb,KAMAC,EAAA,SAAA+B,GACA9J,OAAA+J,SAAA/J,OAAA+J,QAAAC,MACAhK,OAAA+J,QAAAC,KAAAF,IAIApJ,EAAA,SAAAA,EAAA4C,GACA,IAAA2G,KACA3G,EAAA4G,WAAAhJ,KAAA,WACA,IAAAiJ,EAAArP,EAAA0B,MACA4N,EAAAD,EAAAhJ,KAAA,iBACA,SAAAiJ,GACAD,EAAAE,SACAJ,EAAA/F,KAAAiG,IACA,YAAAC,IACA1J,EAAAyJ,GACAA,EAAAE,SACAJ,EAAA/F,KAAAiG,MAGA7G,EAAA3C,QACA2C,EAAAuB,OAAAoF,IAGA9C,EAAA,SAAAmD,EAAAC,GACA,IAAAC,EACA,GAAAD,GAEA,UADAC,EAAAD,EAAA,OAAAA,EAAAC,OAAA,gBACA5J,IAAA2J,EAAAJ,KAAA,CACA,IAAA9C,OAAAzG,IAAA2J,EAAAvD,UAAAlM,EAAAyP,EAAAvD,WAAAsD,EACAjD,EAAAmD,GAAAD,EAAAJ,QAKAM,EAAA,SAAAC,EAAA7G,EAAAvI,GACA,IAAAqP,EAAAD,EAAA,EACAC,EAAA9G,EAAAzD,OACA+D,EAAAC,KAAA5H,KAAAmO,EAAA9G,EAAAvI,GAEAA,KAIA6I,EAAA,SAAAyG,EAAA/G,EAAAvI,GACAuI,EAAA+G,GAAAC,WACAhH,EAAA+G,GAAAC,WAAAzG,KAAA5H,QAAA,WACAiO,EAAArG,KAAA5H,KAAAoO,EAAA/G,EAAAvI,KAGAmP,EAAArG,KAAA5H,KAAAoO,EAAA/G,EAAAvI,IAuCAqK,EAAA,SAAAmF,GACA,IAAApL,EAAAoL,EAAApL,SAEAlD,KAAA0B,yBAEA1B,KAAAwB,+BAEAxB,KAAA6H,YAAA3E,GACAlD,KAAAgI,WAAA9E,IAGA,IAAAnD,EAAAC,KACAA,KAAAuK,YACA+D,EAAArF,YACA/F,EACA,SAAAqL,GACAD,EAAApL,KAAAqL,EAlDA,SAAAD,GACA,IAAApL,EAAAoL,EAAApL,SAEAlD,KAAA0B,4BACA4M,EAAA/K,aAAA+K,EAAA1P,QAAAiE,gBACA7C,KAAAkH,wBAGAlH,KAAAgH,qBAAA9D,EAAAoL,EAAA1P,UAIAoB,KAAA4I,YACA5I,KAAA4I,UAAA9D,SACA9E,KAAA4I,UAAA,MAEA5I,KAAAoF,SAEApF,KAAAc,QAAA6B,QAAA,0BACAO,KAAAA,EACAtE,QAAA0P,EAAAhI,YACAkI,cAAAF,EAAA1P,UAEAoB,KAAAC,SAAA0C,QAAA,0BACAO,KAAAA,EACAtE,QAAA0P,EAAAhI,YACAkI,cAAAF,EAAA1P,UAIAoB,KAAAC,SAAA0C,QAAA,uBAAA2L,EAAAhI,cAqBAsB,KAAA7H,EAAAuO,MAaA,OALA9P,EAAAiQ,UAAAC,YAAAlQ,EAAAiQ,UAAAlE,YAEA/L,EAAAmB,UAGA5B,EAAA4Q,OAAA,mBAAAnQ,KAIAV,EAAA,kCACA,cACA,SAAAU,GACA,OAAAA,EAAAmB,OAAAH,WAEA1B,EAAA,2CACA,sBACA,qBACA,qBACA,YACA,SAAAE,EAAAG,EAAAG,EAAAkB,GAEA,IAAAoP,EAAA5Q,EAAA6Q,QAAApQ,SACAC,UAAA,WAEAE,SAEAkQ,cAAA,8BAEAC,YAAA,GAKAC,aAAA,SAAAC,EAAAC,GACA,IAAAC,GAAA,EAEA,SAAA/C,IACA,IAAApN,EAAAI,EAAAiE,EAEAjE,EAAA6P,EAAAG,QAAA,MACApQ,EAAAiQ,EAAAG,QAAA,KAAAhQ,EAAA,GAEAA,GAAA,GAAAJ,GAAA,GACAqE,EAAArF,EAAAqR,KAAAJ,EAAAK,UAAAlQ,EAAA,EAAAJ,IACAqE,OAAAe,IAAA8K,EAAA7L,GAAA6L,EAAA7L,GAAA,GACA4L,EAAAA,EAAAK,UAAA,EAAAlQ,GAAAiE,EAAA4L,EAAAK,UAAAtQ,EAAA,IAEAmQ,GAAA,EAIA,MAAAA,GAAAF,EAAA5I,OAAA,OAAA,GACA+F,IAGA,OAAA9N,EAAA2Q,IAGAM,KAAA,SAAAC,EAAA5Q,GACA,IACA6Q,EADAC,EAAA1P,KAEAA,KAAAwP,SAAAA,EACAxP,KAAA2P,YAAA/Q,GACAoB,KAAApB,QAAAmQ,YACA5Q,EAAA4Q,WAAA/O,KAAAwK,UAAA,IAEAxK,KAAAwP,SAAArO,GAAA,eAAA,SAAAC,GACAsO,EAAAlF,UAAAjF,SAAAmK,EAAA9Q,QAAAkQ,gBACAW,GAAA,EACAC,EAAAlF,UAAAnF,YAAAqK,EAAA9Q,QAAAkQ,gBAEAW,GAAA,IAIAzP,KAAAwP,SAAArO,GAAA,eAAA,SAAAC,GACAqO,GACAC,EAAAlF,UAAAvF,SAAAyK,EAAA9Q,QAAAkQ,kBAKAa,YAAA,SAAA/Q,GAEAoB,KAAApB,QAAAZ,EAAA6H,SAAA7F,KAAApB,QAAAA,IAGAgR,MAAA,WACAzR,EAAA4Q,eAAA/O,KAAAwK,UAAA,IACArM,EAAA4Q,YAAA,IAIAc,SAAA,WACA,OAAA7P,KAAA8P,oBAGAxL,QAAA,aAIAoE,SAAA,aAIApC,YAAA,SAAA1H,GACA,OAAAA,GAGAsG,QAAA,SAAAiC,OAMA,OAAA3H,EAAAoP,SAAAA,IAKA9Q,EAAA,yCACA,sBACA,qBACA,qBACA,WACA,cACA,SAAAE,EAAAG,EAAAG,EAAAkB,EAAAoP,GACA,aAEA,IAAAmB,EAAAnB,EAAAnQ,SACAC,UAAA,aAEAE,SAEA4L,UAAA,KAEAwF,gBAAA,aAEAC,aAAA,KAEAC,aAAA,iBAEAC,YAAA,gBAEAC,cAAA,cAEAC,eAAA,eAEAC,aAAA,iBAEAC,WAAA,QAEAC,kBAAA,gBAEAC,gBAAA,cAEAC,kBAAA,gBAEAC,YAAA,SAEAC,UAAA,OAEAC,UAAA,OAEAC,WAAA,QAGAC,eAAA,aAaAC,mBAAA,EAGAC,aAAA,EAQAC,wBAAA,EAEAC,4BAAA,EAEAC,wBAAA,EAEAC,0BAAA,EAEAC,eAAA,EAEAC,mBAAA,EAEAC,sBAAA,EAEAC,oBAAA,EAEAC,4BAAA,EAEAC,oBAAA,EAEAC,eAAA,EAEAC,UAAA,EAGAC,YAAA,EAEAC,gBAAA,EAEAC,gBAAA,EAEAC,kBAAA,IAIAvG,MAAA,EAEAwG,aAAA,EAEAC,gBAAA,IAGAC,8BAAAhO,EAGAiO,WAAAjO,EAGAkO,YAAAlO,EAIAmO,cAAAnO,EAIAoO,aAAApO,EAIAqO,gBAAArO,EAIAsO,qBAAAtO,EAGAuO,aAAAvO,EAIAwO,cAAAxO,EAIAyO,mBAAA,KAEAC,qBAAA,SAGAC,kBAAA,iBAEAC,qBAAA,EAEAC,YAEAtB,oBAAA,EAGAkB,mBAAA,KAEAC,qBAAA,SAGAC,kBAAA,YAEAC,qBAAA,GAKA/D,SAAA,sLASAtB,MACAsB,SAAA,2DAmBAiE,QAAA,SAAA5I,GACA,IAuBAgB,EAvBA4H,GACAC,WACA/O,IAAAZ,OAAA4P,cACA5P,OAAA6P,eAAAC,oBAAAD,eAEAE,GACAC,kBACAxU,IAAA,sBACAyU,OAAA,YAEAC,eACA1U,IAAA,gBACAyU,OAAA,SAEAE,aACA3U,IAAA,iBACAyU,OAAA,OAEAG,YACA5U,IAAA,gBACAyU,OAAA,KAIA,IAAAnI,KAAAiI,EACA,GACAA,EAAAM,eAAAvI,SACAlH,IAAAkG,EAAAX,MAAA2B,GACA,CACA4H,EAAAU,WAAAL,EAAAjI,GACA4H,EAAAU,WAAAE,KAAAxI,EACA,MAGA,SAAAyI,IACA,IACAzI,EACA0I,EAFAJ,EAAAV,EAAAU,WAGAN,SAAAW,KAAAC,YAAA5J,GACAsJ,IACAtI,EAAAsI,EAAAE,KAAAzI,MAAA,GAAA,GAAA,gBACAjH,IAAAkG,EAAAX,MAAA2B,KACAhB,EAAAX,MAAA2B,GAAA,gBACA0I,EAAAxQ,OACA2Q,iBAAA7J,GACA8J,iBAAAR,EAAAH,OAAA,aACAP,EAAAmB,WACAZ,OAAAG,EAAAH,OACAK,KAAAxI,EACAgJ,WAAA,EACAN,aAAAA,GAAA,SAAAA,UAIA5P,IAAAkG,EAAAX,MAAA4K,iBACArB,EAAAqB,kBACAjK,EAAAX,MAAA4K,eAAA,UACArB,EAAAqB,eAAAC,QAGA,YAFAhR,OACA2Q,iBAAA7J,GACA8J,iBAAA,mBACA9J,EAAAX,MAAA4K,eAAA,QACArB,EAAAqB,eAAAE,MAGA,UAFAjR,OACA2Q,iBAAA7J,GACA8J,iBAAA,oBAEAd,SAAAW,KAAAS,YAAApK,GAOA,OALAgJ,SAAAW,KACAF,IAEAzV,EAAAgV,UAAAnS,GAAA,mBAAA4S,GAEAb,EA3EA,CA8EAI,SAAAqB,cAAA,QAEAC,sBACApR,OAAAoR,uBACApR,OAAAqR,6BACArR,OAAAsR,yBAEAC,qBACAvR,OAAAuR,sBACAvR,OAAAwR,mCACAxR,OAAAyR,4BACAzR,OAAA0R,wBAEAtS,OAAA,SAAAuS,GAGAnV,KAAAwK,UAAAxK,KAAAwP,SAAArP,QAAAC,KAAA,oBAEAJ,KAAAwK,UAAA5G,OAAA,IACA5D,KAAAwK,UAAAlM,EAAA0B,KAAApB,QAAAqQ,UACAjP,KAAAwP,SAAArP,QAAAkI,OAAArI,KAAAwK,YAEAxK,KAAAoV,KAAAD,EAAAjS,KAAAjE,MAEAe,KAAAqV,IAAArV,KAAAoV,KAAAxR,OAEA5D,KAAAsV,iBACAtV,KAAAuV,WAEAvV,KAAAwV,qBAEAxV,KAAAwS,QAAAxS,KAAA0L,OAEA1L,KAAAyV,kBAEAzV,KAAApB,QAAAoT,gBACAhS,KAAA0V,QAKAC,MAAA,SAAAC,EAAAC,GACArS,OAAAC,aAAAzD,KAAA8V,SACA,IACAC,EACAC,EACAC,EAHAvK,EAAA1L,KAAA0L,MAIA,GAAAA,IAAAkK,GAAA,IAAA5V,KAAAqV,IAAA,CAMA,GAHAQ,IACAA,EAAA7V,KAAApB,QAAAuT,iBAEAnS,KAAAkT,QAAAmB,UAAA,CAkBA,IAjBArU,KAAApB,QAAAkT,aACA8D,EAAA5V,KAAAkW,OAAAN,IAGAG,EAAA5T,KAAAgU,IAAAzK,EAAAkK,IAAAlK,EAAAkK,GAEA5V,KAAApB,QAAAkT,aACAkE,EAAAD,GACAA,GAAA/V,KAAAoW,UAAApW,KAAAkW,OAAAN,IAAA5V,KAAAqW,cAGAL,IACAJ,GAAAG,EAAA/V,KAAAqV,IAAAO,IAGAK,EAAA9T,KAAAgU,IAAAzK,EAAAkK,GAAA,EAEAK,GACAA,GAAA,EACAjW,KAAAsW,KACAtW,KAAAkW,QAAAN,EAAAlK,EAAAkK,EAAAlK,GAAAuK,EAAA,GACAjW,KAAAqW,WAAAN,EACA,GAGAH,EAAA5V,KAAAkW,OAAAN,GACA5V,KAAAsW,KAAA5K,EAAA1L,KAAAqW,WAAAN,EAAAF,GACA7V,KAAAsW,KAAAV,EAAA,EAAAC,GACA7V,KAAApB,QAAAkT,YACA9R,KAAAsW,KACAtW,KAAAkW,OAAAN,EAAAG,IACA/V,KAAAqW,WAAAN,EACA,QAIAH,EAAA5V,KAAAkW,OAAAN,GACA5V,KAAAuW,QAAA7K,GAAA1L,KAAAqW,WAAAT,GAAA5V,KAAAqW,WAAAR,GAEA7V,KAAAwS,QAAAoD,KAGAY,SAAA,WACA,OAAAxW,KAAA0L,OAGA+K,UAAA,WACA,OAAAzW,KAAAqV,KAGAqB,KAAA,YACA1W,KAAApB,QAAAkT,YAAA9R,KAAA0L,QACA1L,KAAA2V,MAAA3V,KAAA0L,MAAA,IAIA3I,KAAA,YACA/C,KAAApB,QAAAkT,YAAA9R,KAAA0L,MAAA1L,KAAAqV,IAAA,IACArV,KAAA2V,MAAA3V,KAAA0L,MAAA,IAIAgK,KAAA,SAAAiB,GACA,IAAAjH,EAAA1P,KACAwD,OAAAC,aAAAzD,KAAA8V,SACA9V,KAAA4W,SAAAD,GAAA3W,KAAApB,QAAAqT,kBACAjS,KAAA6W,SAAA7W,KAAA0L,OAAA,IACA1L,KAAA8V,QAAA9V,KAAA0D,YACA1D,KAAA4U,uBAAA5U,KAAA2V,OACA,SAAAC,EAAAC,GACAnG,EAAAoH,iBAAApH,EAAAkF,sBAAAhN,KACApE,OACA,WACAkM,EAAAiG,MAAAC,EAAAC,OAIA7V,KAAA0L,MAAA,EAAA1L,KAAApB,QAAAwT,0BACApS,KAAA4W,WAGA5W,KAAAwK,UAAAvF,SAAAjF,KAAApB,QAAA0R,eAGAyG,MAAA,WACAvT,OAAAC,aAAAzD,KAAA8V,SACA9V,KAAA4W,SAAA,KACA5W,KAAA+U,uBACA/U,KAAA+U,qBAAAnN,KAAApE,OAAAxD,KAAA8W,kBACA9W,KAAA8W,iBAAA,MAEA9W,KAAAwK,UAAAnF,YAAArF,KAAApB,QAAA0R,eAGA0G,IAAA,SAAA5B,GACA,IAAA9N,EAkBA,IAjBA8N,EAAA6B,SAEA7B,EAAA8B,MAAAzI,UAAApD,MAAAzD,KAAAwN,IAEApV,KAAAoV,KAAA6B,SAEAjX,KAAAoV,KAAA8B,MAAAzI,UAAApD,MAAAzD,KAAA5H,KAAAoV,OAEApV,KAAAoV,KAAApV,KAAAoV,KAAA6B,OAAA7B,GACApV,KAAAqV,IAAArV,KAAAoV,KAAAxR,OACA5D,KAAAqV,IAAA,GAAA,OAAArV,KAAApB,QAAAkT,aACA9R,KAAApB,QAAAkT,YAAA,EACA9R,KAAAwK,UAAAnF,YAAArF,KAAApB,QAAAwR,gBAEApQ,KAAAwK,UACAnF,YAAArF,KAAApB,QAAAyR,gBACAhL,YAAArF,KAAApB,QAAAuR,aACA7I,EAAAtH,KAAAqV,IAAAD,EAAAxR,OAAA0D,EAAAtH,KAAAqV,IAAA/N,GAAA,EACAtH,KAAAmX,SAAA7P,GACAtH,KAAAoX,cAAA9P,GAEAtH,KAAAoW,UAAAxS,OAAA5D,KAAAqV,IACArV,KAAAqX,YAAA,IAGAC,YAAA,WACAtX,KAAAgQ,gBAAA7L,QACAnE,KAAAuX,kBACAvX,KAAAwX,UAEAxX,KAAA6S,mBAAA1O,QACAnE,KAAAiT,eAIAwE,YAAA,WACA,IAAA7Y,EAAAoB,KAAApB,QACAoB,KAAA0X,iBACA1X,KAAA0X,gBAAArS,YAAArF,KAAApB,QAAAkU,sBAGA9S,KAAA2X,wBAEA3X,KAAA+W,QACA/W,KAAAwK,UAAA,GAAAb,MAAAiO,QAAA,OACA5X,KAAAwK,UACAnF,YAAAzG,EAAAsR,cACA7K,YAAAzG,EAAAuR,aACA9K,YAAAzG,EAAAwR,eACA/K,YAAAzG,EAAAyR,gBACAzR,EAAA+S,qBACA2B,SAAAW,KAAAtK,MAAAkO,SAAA7X,KAAA8X,mBAEA9X,KAAApB,QAAAqS,aACAjR,KAAAsX,cAEAtX,KAAApB,QAAAgU,UACA5S,KAAApB,QAAAgU,SAAAhL,KAAA5H,OAIA4P,MAAA,WACA,IAAAF,EAAA1P,KAOAA,KAAApB,QAAA+T,SACA3S,KAAApB,QAAA+T,QAAA/K,KAAA5H,MAEAA,KAAAkT,QAAAU,YAAA5T,KAAApB,QAAAoS,mBACAhR,KAAAwK,UAAArJ,GAAAnB,KAAAkT,QAAAU,WAAA5U,IAVA,SAAA+Y,EAAA1F,GACAA,EAAAvG,SAAA4D,EAAAlF,UAAA,KACAkF,EAAAlF,UAAAzF,IAAA2K,EAAAwD,QAAAU,WAAA5U,IAAA+Y,GACArI,EAAA+H,iBAQAzX,KAAAwK,UAAAnF,YAAArF,KAAApB,QAAAsR,eAEAlQ,KAAAyX,eAIAvB,OAAA,SAAAxK,GAEA,OAAA1L,KAAAqV,IAAA3J,EAAA1L,KAAAqV,KAAArV,KAAAqV,KAGAiB,KAAA,SAAA5K,EAAAsM,EAAAnC,GACA7V,KAAAiY,WAAAvM,EAAAsM,EAAAnC,GACA7V,KAAAoW,UAAA1K,GAAAsM,GAGA1D,UAAA,SAAA5I,EAAAwM,EAAAC,EAAAtC,GACA,IAAAlM,EAAA3J,KAAAwX,OAAA9L,GAAA/B,MACAiK,EAAA5T,KAAAkT,QAAAU,WACAS,EAAArU,KAAAkT,QAAAmB,UACA1K,EAAAiK,EAAAE,KAAA,YAAA+B,EAAA,KACAlM,EAAA0K,EAAAP,MACA,aACAoE,EACA,OACAC,EACA,OACA9D,EAAAL,WAAA,iBAAA,KAGAiE,WAAA,SAAAvM,EAAAwM,EAAArC,GACA7V,KAAAsU,UAAA5I,EAAAwM,EAAA,EAAArC,IAGAuC,WAAA,SAAA1M,EAAAyM,EAAAtC,GACA7V,KAAAsU,UAAA5I,EAAA,EAAAyM,EAAAtC,IAGAU,QAAA,SAAA8B,EAAAzC,EAAAC,GACA,GAAAA,EAIA,IAAAnG,EAAA1P,KACAZ,GAAA,IAAA6C,MAAAC,UACAoW,EAAA9U,OAAA+U,YAAA,WACA,IAAAC,GAAA,IAAAvW,MAAAC,UAAA9C,EACA,GAAAoZ,EAAA3C,EAIA,OAHAnG,EAAAM,gBAAA,GAAArG,MAAA8O,KAAA7C,EAAA,KACAlG,EAAA+F,uBACAjS,OAAAkV,cAAAJ,GAGA5I,EAAAM,gBAAA,GAAArG,MAAA8O,MACA7C,EAAAyC,IAAAlW,KAAAC,MAAAoW,EAAA3C,EAAA,KAAA,KAAAwC,EAAA,MACA,QAfArY,KAAAgQ,gBAAA,GAAArG,MAAA8O,KAAA7C,EAAA,MAkBA+C,eAAA,SAAAtG,GACAA,EAAAsG,eACAtG,EAAAsG,iBAEAtG,EAAAuG,aAAA,GAIAC,gBAAA,SAAAxG,GACAA,EAAAwG,gBACAxG,EAAAwG,kBAEAxG,EAAAyG,cAAA,GAIAC,SAAA,WACA/Y,KAAAqX,YAAA,IAGA2B,YAAA,SAAA3G,GAIAA,EAAA4G,OACA,IAAA5G,EAAA4G,OACA,UAAA5G,EAAAvG,OAAAoN,UACA,UAAA7G,EAAAvG,OAAAoN,WAIA7G,EAAAsG,kBACAtG,EAAA8G,eAAA9G,GAAA+G,UAEAC,MAAAhH,EAAAgH,MACAC,MAAAjH,EAAAiH,QAGAtZ,KAAAoT,aAAAf,KAIAkH,YAAA,SAAAlH,GACArS,KAAAwZ,cACAnH,EAAA8G,eAAA9G,GAAA+G,UAEAC,MAAAhH,EAAAgH,MACAC,MAAAjH,EAAAiH,QAGAtZ,KAAAyZ,YAAApH,KAIAqH,UAAA,SAAArH,GACArS,KAAAwZ,aACAxZ,KAAA2Z,WAAAtH,UACArS,KAAAwZ,aAIAI,WAAA,SAAAvH,GACA,GAAArS,KAAAwZ,WAAA,CACA,IAAA1N,EAAAuG,EAAAvG,OACA+N,EAAAxH,EAAAyH,cACAD,IAAAA,IAAA/N,GAAA3N,EAAA4b,SAAAjO,EAAA+N,KACA7Z,KAAA0Z,UAAArH,KAKAe,aAAA,SAAAf,GACArS,KAAApB,QAAA8S,4BACA1R,KAAA6Y,gBAAAxG,GAIA,IAAA+G,GAAA/G,EAAA8G,eAAA9G,GAAA+G,QAAA,GACApZ,KAAAwZ,YAEAtB,EAAAkB,EAAAC,MACAlB,EAAAiB,EAAAE,MAEA3C,KAAA1U,KAAA+X,OAGAha,KAAAia,iBAAA7V,EAEApE,KAAAka,eAGAT,YAAA,SAAApH,GACArS,KAAApB,QAAA8S,4BACA1R,KAAA6Y,gBAAAxG,GAIA,IAGA8H,EACAC,EAJAhB,GAAA/G,EAAA8G,eAAA9G,GAAA+G,QAAA,GACAiB,GAAAhI,EAAA8G,eAAA9G,GAAAgI,MACA3O,EAAA1L,KAAA0L,MAIA,KAAA0N,EAAAxV,OAAA,GAAAyW,GAAA,IAAAA,GAkBA,GAfAra,KAAApB,QAAAgT,eACAS,EAAAsG,iBAGA3Y,KAAAka,YACAhC,EAAAkB,EAAAC,MAAArZ,KAAAwZ,WAAAtB,EACAC,EAAAiB,EAAAE,MAAAtZ,KAAAwZ,WAAArB,GAEAgC,EAAAna,KAAAka,WAAAhC,OAEA9T,IAAApE,KAAAia,cACAja,KAAAia,YACAja,KAAAia,aACA9X,KAAAgU,IAAAgE,GAAAhY,KAAAgU,IAAAnW,KAAAka,WAAA/B,IAEAnY,KAAAia,YA6BAja,KAAAoY,WAAA1M,EAAA1L,KAAAka,WAAA/B,EAAAnY,KAAAoW,UAAA1K,GAAA,QALA,IAtBA2G,EAAAsG,iBAEAnV,OAAAC,aAAAzD,KAAA8V,SACA9V,KAAApB,QAAAkT,WACAsI,GAAApa,KAAAkW,OAAAxK,EAAA,GAAAA,EAAA1L,KAAAkW,OAAAxK,EAAA,KAIA1L,KAAAka,WAAAhC,EAAAiC,IAEAzO,GAAAyO,EAAA,GACAzO,IAAA1L,KAAAqV,IAAA,GAAA8E,EAAA,EACAhY,KAAAgU,IAAAgE,GAAAna,KAAAqW,WAAA,EACA,EACA+D,GAAA1O,GACAA,GACA0O,EAAA1S,KAAAgE,EAAA,GAEAA,EAAA1L,KAAAqV,IAAA,GACA+E,EAAAE,QAAA5O,EAAA,IAGA0O,EAAAxW,QACA8H,EAAA0O,EAAAG,MACAva,KAAAiY,WAAAvM,EAAAyO,EAAAna,KAAAoW,UAAA1K,GAAA,IAOAiO,WAAA,SAAAtH,GACArS,KAAApB,QAAA8S,4BACA1R,KAAA6Y,gBAAAxG,GAEA,IAiBA0D,EACAyE,EACAC,EACAC,EACAC,EArBAjP,EAAA1L,KAAA0L,MACAmK,EAAA7V,KAAApB,QAAAuT,gBACAkE,EAAArW,KAAAqW,WACAuE,EAAAC,OAAA5Y,KAAA+X,MAAAha,KAAAwZ,WAAA7C,MAAA,IAEAmE,EACAF,GAAAzY,KAAAgU,IAAAnW,KAAAka,WAAAhC,GAAA,IACA/V,KAAAgU,IAAAnW,KAAAka,WAAAhC,GAAA7B,EAAA,EAEA0E,GACArP,GAAA1L,KAAAka,WAAAhC,EAAA,GACAxM,IAAA1L,KAAAqV,IAAA,GAAArV,KAAAka,WAAAhC,EAAA,EACA8C,GACAF,GACA9a,KAAApB,QAAA4S,uBACAoJ,GAAAzY,KAAAgU,IAAAnW,KAAAka,WAAA/B,GAAA,IACAhW,KAAAgU,IAAAnW,KAAAka,WAAA/B,GAAAnY,KAAAib,YAAA,GAMAjb,KAAApB,QAAAkT,aACAiJ,GAAA,GAGAhF,EAAA/V,KAAAka,WAAAhC,EAAA,GAAA,EAAA,EACAlY,KAAAia,YAqCAe,EACAhb,KAAA4P,QAGA5P,KAAAoY,WAAA1M,EAAA,EAAAmK,GAxCAiF,IAAAC,GACAP,EAAA9O,EAAAqK,EACA0E,EAAA/O,EAAAqK,EACA2E,EAAArE,EAAAN,EACA4E,GAAAtE,EAAAN,EACA/V,KAAApB,QAAAkT,YACA9R,KAAAsW,KAAAtW,KAAAkW,OAAAsE,GAAAE,EAAA,GACA1a,KAAAsW,KAAAtW,KAAAkW,OAAAxK,EAAA,EAAAqK,GAAA4E,EAAA,IACAH,GAAA,GAAAA,EAAAxa,KAAAqV,KACArV,KAAAsW,KAAAkE,EAAAE,EAAA,GAEA1a,KAAAsW,KAAA5K,EAAA1L,KAAAoW,UAAA1K,GAAAgP,EAAA7E,GACA7V,KAAAsW,KACAtW,KAAAkW,OAAAuE,GACAza,KAAAoW,UAAApW,KAAAkW,OAAAuE,IAAAC,EACA7E,GAEAnK,EAAA1L,KAAAkW,OAAAuE,GACAza,KAAAwS,QAAA9G,IAGA1L,KAAApB,QAAAkT,YACA9R,KAAAsW,KAAAtW,KAAAkW,OAAAxK,EAAA,IAAA2K,EAAAR,GACA7V,KAAAsW,KAAA5K,EAAA,EAAAmK,GACA7V,KAAAsW,KAAAtW,KAAAkW,OAAAxK,EAAA,GAAA2K,EAAAR,KAEAnK,GACA1L,KAAAsW,KAAA5K,EAAA,GAAA2K,EAAAR,GAEA7V,KAAAsW,KAAA5K,EAAA,EAAAmK,GACAnK,EAAA1L,KAAAqV,IAAA,GACArV,KAAAsW,KAAA5K,EAAA,EAAA2K,EAAAR,KAcAqF,cAAA,SAAA7I,GACArS,KAAAwZ,aACAxZ,KAAA2Z,WAAAtH,UACArS,KAAAwZ,aAIA/D,gBAAA,SAAApD,GACA,IAAAsD,EAAA3V,KAAAwX,OAAAxX,KAAA0L,OACA2G,GAAAsD,IAAAtD,EAAAvG,SACA9L,KAAA4W,UACA5W,KAAA0V,OAEA1V,KAAA0D,WAAA1D,KAAApB,QAAA6T,YAAAzS,KAAA0L,MAAAiK,MAIAwF,WAAA,SAAA9I,GACA,IAEA3G,EAFAI,EAAAuG,EAAAvG,QAAAuG,EAAA+I,WACAC,EAAAvP,GAAAA,EAAAwP,WAEAxP,GAAAuP,IAGA3P,EAAA1L,KAAAub,aAAAF,GACA/c,EAAA+c,GAAAhW,YAAArF,KAAApB,QAAA4R,mBACA,UAAA6B,EAAAmJ,MACAld,EAAA+c,GAAApW,SAAAjF,KAAApB,QAAA6R,iBACAzQ,KAAA6W,SAAAnL,GAAA,GAEA1L,KAAA6W,SAAAnL,GAAA,EAGAI,EAAA2P,aAAAzb,KAAAwK,UAAA,GAAAiR,eACA3P,EAAAnC,MAAA+R,UAAA1b,KAAAwK,UAAA,GAAAiR,cAEAzb,KAAA4W,UAAA5W,KAAAwX,OAAAxX,KAAA0L,SAAA2P,GACArb,KAAA0V,OAEA1V,KAAA0D,WAAA1D,KAAApB,QAAA8T,iBAAAhH,EAAA2P,MAGAM,OAAA,SAAAtJ,GACArS,KAAAmb,WAAA9I,IAGAuJ,QAAA,SAAAvJ,GACArS,KAAAmb,WAAA9I,IAGAwJ,UAAA,SAAAxJ,GACA,OAAAA,EAAA4G,OAAA5G,EAAA/O,SACA,KAAA,GACAtD,KAAApB,QAAAsS,yBACAlR,KAAA2Y,eAAAtG,GACArS,KAAA8b,kBAEA,MACA,KAAA,GACA9b,KAAApB,QAAA0S,gBACAtR,KAAA4P,QAEAyC,EAAA0J,4BAEA,MACA,KAAA,GACA/b,KAAApB,QAAAwS,yBACApR,KAAA2Y,eAAAtG,GACArS,KAAAgc,mBAEA,MACA,KAAA,GACAhc,KAAApB,QAAAyS,2BACArR,KAAA2Y,eAAAtG,GACArS,KAAA0W,QAEA,MACA,KAAA,GACA1W,KAAApB,QAAAyS,2BACArR,KAAA2Y,eAAAtG,GACArS,KAAA+C,UAMAkZ,YAAA,SAAA5J,GACA,IAAAzT,EAAAoB,KAAApB,QACAkN,EAAAuG,EAAAvG,QAAAuG,EAAA+I,WACAC,EAAAvP,EAAAwP,WAEA,GAAAD,IAAArb,KAAA6S,mBAAA,GAEA7S,KAAA2Y,eAAAtG,GACArS,KAAA2V,MAAA3V,KAAAub,aAAAzP,SACA,GAAAuP,EAAAC,aAAAtb,KAAA6S,mBAAA,GAEA7S,KAAA2Y,eAAAtG,GACArS,KAAA2V,MAAA3V,KAAAub,aAAAF,QACA,CACA,SAAAa,EAAApT,GACA,OAAAxK,EAAAwN,GAAAvG,SAAAuD,IAAAxK,EAAA+c,GAAA9V,SAAAuD,GAIAoT,EAAAtd,EAAA+R,cAEA3Q,KAAA2Y,eAAAtG,GACArS,KAAA8b,kBACAI,EAAAtd,EAAAgS,YAEA5Q,KAAA2Y,eAAAtG,GACArS,KAAA0W,QACAwF,EAAAtd,EAAAiS,YAEA7Q,KAAA2Y,eAAAtG,GACArS,KAAA+C,QACAmZ,EAAAtd,EAAAkS,aAEA9Q,KAAA2Y,eAAAtG,GACArS,KAAA4P,SACAsM,EAAAtd,EAAAmS,iBAEA/Q,KAAA2Y,eAAAtG,GACArS,KAAAgc,mBACAX,IAAArb,KAAAgQ,gBAAA,GAEApR,EAAA2S,mBACAvR,KAAA2Y,eAAAtG,GACArS,KAAA4P,SACAhR,EAAAuS,6BACAnR,KAAA2Y,eAAAtG,GACArS,KAAA8b,kBAGAT,EAAAC,YACAD,EAAAC,aAAAtb,KAAAgQ,gBAAA,IAGApR,EAAAuS,6BACAnR,KAAA2Y,eAAAtG,GACArS,KAAA8b,oBAMAK,QAAA,SAAA9J,GACA,KACArS,KAAApB,QAAA6S,oBACAzR,KAAAka,aACA/X,KAAAgU,IAAAnW,KAAAka,WAAAhC,GAAA,IAAA/V,KAAAgU,IAAAnW,KAAAka,WAAA/B,GAAA,KAKA,OAAAnY,KAAAic,YAAA5J,UAHArS,KAAAka,YAMAkC,kBAAA,SAAA1Q,GACAA,EAGA1L,KAAAwK,UAAAnF,YAAArF,KAAApB,QAAAwR,eAFApQ,KAAAwK,UAAAvF,SAAAjF,KAAApB,QAAAwR,eAIA1E,IAAA1L,KAAAqV,IAAA,EACArV,KAAAwK,UAAAvF,SAAAjF,KAAApB,QAAAyR,gBAEArQ,KAAAwK,UAAAnF,YAAArF,KAAApB,QAAAyR,iBAIAgM,YAAA,SAAA3Q,GACA1L,KAAApB,QAAAkT,YACA9R,KAAAoc,kBAAA1Q,GAEA1L,KAAAsc,aAAA5Q,GACA1L,KAAApB,QAAAmT,gBACA/R,KAAA+R,eAAArG,GAEA1L,KAAAuc,SAAA7Q,GAEA1L,KAAAwc,mBAAA9Q,IAIA8G,QAAA,SAAA9G,GACA1L,KAAA0L,MAAAA,EACA1L,KAAAqc,YAAA3Q,GACA1L,KAAA0D,WAAA1D,KAAApB,QAAA4T,SAAA9G,EAAA1L,KAAAwX,OAAA9L,MAGA6Q,SAAA,SAAA7Q,GACA,IAAA+Q,EAAAzc,KAAAwX,OAAA9L,GAAA+Q,WACArZ,EAAAqZ,EAAAC,OAAAD,EAAAE,IACA1M,EAAAjQ,KAAAiQ,aACAA,EAAArM,SACA5D,KAAAiQ,aAAA9L,QACAf,GACA6M,EAAA,GAAAiE,YAAAZ,SAAAsJ,eAAAxZ,MAKAM,WAAA,SAAAmZ,EAAAC,EAAAC,GACA,IAAArN,EAAA1P,KACA,OACA6c,GACArZ,OAAAE,WAAA,WACAmZ,EAAAG,MAAAtN,EAAAoN,QACAC,GAAA,IAIApI,cAAA,SAAAzI,EAAApN,GACA,IAAAme,EAAAjd,KAAAgP,aAAAhP,KAAApB,QAAA+O,KAAAsB,SAAA/C,GAIA,OAHA+Q,EAAA7c,KAAA,OAAAe,GAAA,aAAArC,GAEAme,EAAAhY,SAAAjF,KAAApB,QAAA8R,mBACAuM,GAGAC,YAAA,SAAAxR,GACA1L,KAAA6W,SAAAnL,KACA1L,KAAAwX,OAAA9L,GAAA+Q,WACAzc,KAAA6W,SAAAnL,GAAApN,EAAA0B,KAAAwX,OAAA9L,IAAAnG,SACAvF,KAAApB,QAAA6R,iBAEA,EACA,GAEAzQ,KAAA6W,SAAAnL,GAAA,EACApN,EAAA0B,KAAAwX,OAAA9L,IAAArD,OACArI,KAAA2U,cAAA3U,KAAAoV,KAAA1J,GAAA1L,KAAAmd,mBASAb,aAAA,SAAA5Q,GACA,IAEApE,EAFA8V,EAAAjb,KAAAkb,IAAArd,KAAAqV,IAAA,EAAArV,KAAApB,QAAAsT,aAAA,GACAoL,EAAA5R,EAEA,IAAApE,EAAA,EAAAA,EAAA8V,EAAA9V,GAAA,EAKAgW,GAAAhW,GAAAA,EAAA,GAAA,GAAA,EAAA,GAGAgW,EAAAtd,KAAAkW,OAAAoH,GACAtd,KAAAkd,YAAAI,IAIAvL,eAAA,SAAArG,GACA,IAAApE,EAAA2O,EACA,IAAA3O,KAAAtH,KAAA6W,SACA7W,KAAA6W,SAAAhD,eAAAvM,KACA2O,EAAA9T,KAAAgU,IAAAzK,EAAApE,IAEAtH,KAAApB,QAAAsT,cACA+D,EAAAjW,KAAApB,QAAAsT,aAAAlS,KAAAqV,MAEArV,KAAAud,YAAAjW,UACAtH,KAAA6W,SAAAvP,KAOAkW,gBAAA,SAAAtR,GACA,IAIAuR,EACAC,EALAlO,EAAAxP,KAAAwP,SACAmO,EAAA3d,KAAA4d,mBAAAC,WAAA,GACAnB,EAAAlN,EAAAnC,gBAAAnB,EAAA,SACA6G,EAAA/S,KAAApB,QAAAmU,kBAoBA,OAjBA/S,KAAApB,QAAAoU,sBACAD,IACA0K,EAAAjO,EAAAnC,gBAAAnB,EAAA6G,SAEA3O,IAAAqZ,IACAC,EAAAxR,EAAA4R,sBAAAxf,EAAA4N,GAAA9L,KAAA,OAAA,MAEAqd,EAAAC,EAAAK,KAGAN,IACAE,EAAAhU,MAAAqU,gBAAA,QAAAP,EAAA,OAGAf,IACAiB,EAAAjB,MAAAA,GAEAiB,GAGAM,aAAA,SAAAvS,GACA,GAAA1L,KAAA6S,mBAAAjP,OAAA,CACA,IAAA+Z,EAAA3d,KAAAwd,gBAAAxd,KAAAoV,KAAA1J,IACAiS,EAAAO,aAAA,aAAAxS,GACA1L,KAAA6S,mBAAA,GAAAqB,YAAAyJ,GACA3d,KAAAiT,WAAAvL,KAAAiW,KAIAnB,mBAAA,SAAA9Q,GACA1L,KAAAiT,aACAjT,KAAA0X,iBACA1X,KAAA0X,gBAAArS,YAAArF,KAAApB,QAAAkU,sBAEA9S,KAAA0X,gBAAApZ,EAAA0B,KAAAiT,WAAAvH,IACA1L,KAAA0X,gBAAAzS,SAAAjF,KAAApB,QAAAkU,wBAKAqE,SAAA,SAAAzL,GACA,IAAAiK,EAAA3V,KAAAme,eAAAN,WAAA,GACAlI,EAAAuI,aAAA,aAAAxS,GACA1L,KAAAgQ,gBAAA,GAAAkE,YAAAyB,GACA3V,KAAAwX,OAAA9P,KAAAiO,GAEA3V,KAAAie,aAAAvS,IAGA0L,cAAA,SAAA1L,GACA,IAAAiK,EAAA3V,KAAAwX,OAAA9L,GACAiK,EAAAhM,MAAAQ,MAAAnK,KAAAqW,WAAA,KACArW,KAAAkT,QAAAmB,YACAsB,EAAAhM,MAAA8O,KAAA/M,GAAA1L,KAAAqW,WAAA,KACArW,KAAAsW,KACA5K,EACA1L,KAAA0L,MAAAA,GACA1L,KAAAqW,WACArW,KAAA0L,MAAAA,EAAA1L,KAAAqW,WAAA,EACA,KAKAgB,WAAA,SAAA+G,GACA,IAAAnN,EAAA3J,EA4BA,IA3BA8W,IAEApe,KAAA6S,mBAAA7S,KAAAwK,UAAApK,KACAJ,KAAApB,QAAAiU,oBAEA7S,KAAA6S,mBAAAjP,SACA5D,KAAA4d,mBAAAtK,SAAAqB,cAAA,MACA3U,KAAAiT,WAAAjT,KAAA6S,mBAAA,GAAAnF,UAGA1N,KAAAoW,aACApW,KAAAoW,UAAAxS,OAAA5D,KAAAqV,IACArV,KAAA6W,YACA7W,KAAAqe,eAAA/K,SAAAqB,cAAA,OACA3U,KAAAse,iBAAAhL,SAAAqB,cAAA,OACA3U,KAAAme,eAAA7K,SAAAqB,cAAA,OACArW,EAAA0B,KAAAme,gBAAAlZ,SAAAjF,KAAApB,QAAA2R,YACAvQ,KAAAwX,OAAAxX,KAAAgQ,gBAAA,GAAAtC,SACAuD,EACAjR,KAAApB,QAAAqS,aAAAjR,KAAAwX,OAAA5T,SAAA5D,KAAAqV,KAEArV,KAAAqW,WAAArW,KAAAwK,UAAA,GAAA+T,YACAve,KAAAib,YAAAjb,KAAAwK,UAAA,GAAAiR,aACAzb,KAAAgQ,gBAAA,GAAArG,MAAAQ,MAAAnK,KAAAqV,IAAArV,KAAAqW,WAAA,KACApF,GACAjR,KAAAsX,cAEAhQ,EAAA,EAAAA,EAAAtH,KAAAqV,IAAA/N,GAAA,EACA2J,GACAjR,KAAAmX,SAAA7P,GAEAtH,KAAAoX,cAAA9P,GAGAtH,KAAApB,QAAAkT,YAAA9R,KAAAkT,QAAAmB,YACArU,KAAAsW,KAAAtW,KAAAkW,OAAAlW,KAAA0L,MAAA,IAAA1L,KAAAqW,WAAA,GACArW,KAAAsW,KAAAtW,KAAAkW,OAAAlW,KAAA0L,MAAA,GAAA1L,KAAAqW,WAAA,IAEArW,KAAAkT,QAAAmB,YACArU,KAAAgQ,gBAAA,GAAArG,MAAA8O,KACAzY,KAAA0L,OAAA1L,KAAAqW,WAAA,OAIAkH,YAAA,SAAA7R,GACA,IAAAiK,EAAA8G,EACA9G,EAAA3V,KAAAwX,OAAA9L,GAEA,QADA+Q,EAAA9G,EAAA8G,aAEA9G,EAAAjB,YAAA+H,IAIAlF,gBAAA,WACA,IAAAjQ,EAAAkX,EACA,IAAAlX,EAAA,EAAAkX,EAAAxe,KAAAwX,OAAA5T,OAAA0D,EAAAkX,EAAAlX,IACAtH,KAAAud,YAAAjW,IAIAwU,eAAA,WAEA,IAAAhN,EAAA9O,KAAApB,QAAAkQ,cACA9O,KAAAwK,UAAAjF,SAAAuJ,GACA9O,KAAAwK,UAAAnF,YAAAyJ,GAEA9O,KAAAwK,UAAAvF,SAAA6J,IAIAkN,gBAAA,WACAhc,KAAA4W,SAGA5W,KAAA+W,QAFA/W,KAAA0V,QAMA6F,aAAA,SAAAjR,GACA,OAAA9E,SAAA8E,EAAA0C,aAAA,cAAA,KAGAsI,eAAA,WACA,IAEAhO,EAFAkI,EAAAxP,KAAAwP,SACA9D,EAAA1L,KAAApB,QAAA8M,MAGA,GAAAA,GAAA,iBAAAA,EACA,IAAApE,EAAA,EAAAA,EAAAtH,KAAAqV,IAAA/N,GAAA,EACA,GACAtH,KAAAoV,KAAA9N,KAAAoE,GAAA8D,EAAAiP,WAAAze,KAAAoV,KAAA9N,MAAAkI,EAAAiP,WAAA/S,GAAA,CACAA,EAAApE,EACA,MAKAtH,KAAA0L,MAAA1L,KAAAkW,OAAA1Q,SAAAkG,EAAA,KAAA,IAGA8J,mBAAA,WACA,IAAA9F,EAAA1P,KACAgQ,EAAAhQ,KAAAgQ,gBACA,SAAAmN,EAAA9K,GACA,IAAAmJ,EACA9L,EAAAwD,QAAAU,YAAAlE,EAAAwD,QAAAU,WAAA5U,MAAAqT,EAAAmJ,KACA,gBACAnJ,EAAAmJ,KACA9L,EAAA,KAAA8L,GAAAnJ,GAEA/T,EAAAkF,QAAArC,GAAA,SAAAgc,GACA7e,EAAAgV,SAAAW,MAAA9S,GAAA,UAAAgc,GACAnd,KAAAwK,UAAArJ,GAAA,QAAAgc,GACAnd,KAAAkT,QAAAC,MACAnD,EAAA7O,GACA,4CACAgc,GAEAnd,KAAApB,QAAA6S,oBAAAzR,KAAAkT,QAAAU,YACA5D,EAAA7O,GACA,uCACAgc,GAGAnd,KAAAkT,QAAAU,YACA5D,EAAA7O,GAAAnB,KAAAkT,QAAAU,WAAA5U,IAAAme,GAEAnd,KAAAmd,cAAAA,GAGAxF,sBAAA,WACA,IAAA3H,EAAAhQ,KAAAgQ,gBACAmN,EAAAnd,KAAAmd,cACA7e,EAAAkF,QAAAuB,IAAA,SAAAoY,GACA7e,EAAAgV,SAAAW,MAAAlP,IAAA,UAAAoY,GACAnd,KAAAwK,UAAAzF,IAAA,QAAAoY,GACAnd,KAAAkT,QAAAC,MACAnD,EAAAjL,IACA,4CACAoY,GAEAnd,KAAApB,QAAA6S,oBAAAzR,KAAAkT,QAAAU,YACA5D,EAAAjL,IACA,uCACAoY,GAGAnd,KAAAkT,QAAAU,YACA5D,EAAAjL,IAAA/E,KAAAkT,QAAAU,WAAA5U,IAAAme,IAIAuB,WAAA,WACA1e,KAAApB,QAAA2T,UACAvS,KAAApB,QAAA2T,SAAA3K,KAAA5H,OAIAuV,SAAA,WACA,IAAA7F,EAAA1P,KAsBA,GAHAA,KAAAgQ,gBAAAhQ,KAAAwK,UACApK,KAAAJ,KAAApB,QAAAoR,iBACA2O,SACA3e,KAAAgQ,gBAAApM,OAKA,OAJA2J,QAAAqR,IACA,+CACA5e,KAAApB,QAAAoR,kBAEA,EAEAhQ,KAAAiQ,aAAAjQ,KAAAwK,UAAApK,KAAAJ,KAAApB,QAAAqR,cAAA0O,QACA,IAAA3e,KAAAqV,KACArV,KAAAwK,UAAAvF,SAAAjF,KAAApB,QAAAuR,aAEAnQ,KAAApB,QAAA0T,QACAtS,KAAApB,QAAA0T,OAAA1K,KAAA5H,MAEAA,KAAAkT,QAAAU,YAAA5T,KAAApB,QAAAoS,kBACAhR,KAAAwK,UAAArJ,GAAAnB,KAAAkT,QAAAU,WAAA5U,IApCA,SAAA6f,EAAAxM,GACAA,EAAAvG,SAAA4D,EAAAlF,UAAA,KACAkF,EAAAlF,UAAAzF,IAAA2K,EAAAwD,QAAAU,WAAA5U,IAAA6f,GACAnP,EAAAgP,gBAmCA1e,KAAA0e,aAEA1e,KAAApB,QAAA+S,qBAEA3R,KAAA8X,kBAAAxE,SAAAW,KAAAtK,MAAAkO,SACAvE,SAAAW,KAAAtK,MAAAkO,SAAA,UAEA7X,KAAAwK,UAAA,GAAAb,MAAAiO,QAAA,QACA5X,KAAAqX,aACArX,KAAAwK,UAAAvF,SAAAjF,KAAApB,QAAAsR,eAGAP,YAAA,SAAA/Q,GAEAoB,KAAA8e,UAAA9gB,EAAA6H,SAAAkK,EAAAtB,UAAA7P,QAAAA,IAEAoB,KAAAqV,IAAA,IAGArV,KAAApB,QAAAkT,aAAA9R,KAAApB,QAAAkT,YAAA,MAEA9R,KAAAkT,QAAAU,aACA5T,KAAApB,QAAA6S,oBAAA,GAEAzR,KAAApB,QAAAyT,OACArS,KAAA2Y,eAAA3Y,KAAApB,QAAAyT,UAKA,OAAA7S,EAAA,QACAsU,KAAA,SACArM,KAAAsI,EACAgP,WACAC,QAAA,6KAaAlhB,EAAA,wCACA,sBACA,4BACA,4BACA,0BACA,yBACA,0BACA,WACA,cACA,SAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,EAAAkB,EAAAoP,GAEA,IAAAqQ,EAAArQ,EAAAnQ,SACAC,UAAA,YAEAE,SACAsgB,eAAA,KACAC,cAAA,EACAC,eAAA,EACAC,uBAAA,EACAC,gBAAA,EACAC,YAAA,iBACAC,YAAA,EACAC,cAAA,EACAC,YAAA,KACAC,cAAA,EACAC,SAAA,GAGAC,mBAAA,WACA7f,KAAAwP,SAAArP,QAAAC,KAAA,wBAAA0E,SACA9E,KAAAwP,SAAArP,QAAAC,KAAA,0CAAAiF,YAAA,aAGAya,gBAAA,SAAApU,EAAAqU,GACA,IAAAC,EAAAhgB,KAAAwP,SAAArP,QAAAC,KAAA,yCACAJ,KAAApB,QAAAygB,uBAAAU,KACAC,EAAA5f,KAAA,aAAAiF,YAAA,UACA2a,EAAA5f,KAAA,MAAAsE,KAAA,WACA,IAAAub,EAAA3hB,EAAA0B,MAAAI,KAAA,iBAAAsL,EAAA,GAAA,KAAAzF,OAAA,WAAA,OAAA3H,EAAA0B,MAAAqb,SAAA9V,SAAA,WACA0a,EAAAhb,SAAA,cAKA6K,iBAAA,WACA,IAAApH,KAQA,OAPA1I,KAAAwP,SAAArP,QAAAC,KAAA,mEAAAsE,KAAA,WACA,IAAAuY,EAAA3e,EAAA0B,MACA0I,EAAAhB,MACAxE,KAAA+Z,EAAA/Z,KAAA,aACAoH,QAAA2S,MAGAvU,GAGAwX,iBAAA,WACA,IAAAC,EAAAngB,KAAAwP,SAAAvP,SAAAG,KAAA,0BACAggB,EAAAD,EAAAE,SAAA5H,KACA6H,EAAAH,EAAAG,aACAA,EAAA,EACAH,EAAA/f,KAAA,0BAAAsE,KAAA,WACA,IAAA6b,EAAAjiB,EAAA0B,MACAyY,EAAA8H,EAAAxU,QAAA,YAAAsU,SAAA5H,KAAA2H,EAAA,KACAG,EAAAtb,SAAA,WAAAyB,IAAA,OAAA+R,KAGA0H,EAAA/f,KAAA,0BAAAsE,KAAA,WACApG,EAAA0B,MAAAqF,YAAA,WAAAqB,IAAA,OAAA,OAKA8Z,iBAAA,SAAAC,EAAAV,GACA,IAGAzY,EACA2V,EACArZ,EALA4b,EAAAxf,KAAApB,QAAA4gB,WACAzf,EAAAC,KAMAf,EAAAwhB,EACAniB,EAAAoiB,QAAAzhB,KACAA,GAAAA,IAIA,IAAA0hB,EAAA,SAAAC,GACA3D,EAAA3e,EAAA0B,OAEAid,EAAA/Z,KAAA,kBACAjE,EAAAqI,GAAA6E,YAAAlN,EAAAqI,GAAA5E,OACAme,EAAA5D,EAAAhe,EAAAqI,GAAAoB,SAAAkY,IAIAC,EAAA,SAAAC,EAAAC,EAAArV,GACA,IAAAsV,EAEAC,OAAA7c,IAAA2c,GAAAA,EACAE,GACAlB,GAAA,UAAAP,GACAzf,EAAA8f,qBAGAiB,EAAAvb,SAAA,cACAub,EAAA7b,SAAA,aAEAlF,EAAAnB,QAAA+gB,eAAA,UAAA5f,EAAAnB,QAAA4gB,eACAwB,EAAAjhB,EAAAyP,SAAAvP,SAAAG,KAAA,wCAAAsL,EAAA,GAAA,MAEAzG,SAAA,YACA+b,EAAA5gB,KAAA,6BAAA6E,SAAA,YAGAlF,EAAAnB,QAAAghB,SACA7f,EAAAyP,SAAAvP,SAAAG,KAAA,yCAAAsL,EAAA,GAAA,KAAAzG,SAAA,YAGA6b,EAAA1gB,KAAA,YAAA8gB,QAAA,0FAGAnhB,EAAAnB,QAAA+gB,iBACAqB,EAAAjhB,EAAAyP,SAAAvP,SAAAG,KAAA,wCAAAsL,EAAA,GAAA,MAEAzG,SAAA,YACA+b,EAAA5gB,KAAA,6BAAAiF,YAAA,YAGAtF,EAAAnB,QAAAghB,SACA7f,EAAAyP,SAAAvP,SAAAG,KAAA,yCAAAsL,EAAA,GAAA,KAAArG,YAAA,YAGAyb,EAAA1gB,KAAA,wBAAA0E,SACAgc,EAAAzb,YAAA,cAYA,IAPAzB,GADA,IAAAmc,GAAA,UAAAP,EACAvgB,EAAA2E,OACA4b,GACAvgB,EAAA2E,OAAA,EAAA,EAEA,EAGA0D,EAAA,EAAAA,EAAA1D,EAAA0D,SACAlD,IAAAnF,EAAAqI,GAAAoE,OACAuR,EAAAjd,KAAAwP,SAAArP,QAAAC,KAAA,qEAAAnB,EAAAqI,GAAAoE,MAAA,GAAA,MACA9H,OAAA,GACAid,EAAA5D,EAAAhe,EAAAqI,GAAAoB,SAAAzJ,EAAAqI,GAAAoE,YAEAtH,IAAAnF,EAAAqI,GAAA6E,eAAA/H,IAAAnF,EAAAqI,GAAA5E,OACA1C,KAAAwP,SAAArP,QAAAC,KAAA,0DAAAsE,KAAAic,IAKAQ,aAAA,WACA,IAAAC,EAAAphB,KAAAwP,SAAAvP,SAAAG,KAAA,wBACAghB,EAAAhhB,KAAA,YAAAsE,KAAA,WACA,IAAA2c,EAAA/iB,EAAA0B,MACAugB,EAAAc,EAAAjhB,KAAA,0BACAmgB,EAAA7Z,KAAAC,OAAA0a,EAAAza,gBACA2Z,EAAAnW,WAAAmW,EAAArd,KAAA,iBAAAme,EAAAjX,iBAIAkX,iBAAA,WACA,IAAAC,EAAAvhB,KAAAwP,SAAArP,QAAAC,KAAA,iBACA+f,EAAAngB,KAAAwP,SAAAvP,SAAAG,KAAA,oBACAghB,EAAAphB,KAAAwP,SAAAvP,SAAAG,KAAA,iDACAohB,EAAAxhB,KAAAwP,SAAAvP,SAAAG,KAAA,kBACAqhB,EAAAzhB,KAAApB,QAAA+gB,cACA5f,EAAAC,KAOA,GALA,UAAAA,KAAApB,QAAA4gB,aACAiC,GAAA,EACAtB,EAAAlb,SAAA,yBAGAsc,EAAA3d,OAAA,EAAA,CAGA,IAAA8d,EAAApjB,EAAA,6CAAAqjB,aAAAP,GACAQ,EAAAR,EAAAS,QAAA5c,SAAA,gBACA2c,EAAAxhB,KAAA,cAAAqhB,EAAA,MAAA3c,SACA8c,EAAAxhB,KAAA,uCAAAqhB,EAAA,MAAA3c,SAGA,IAAAgd,EAAAF,EAAAC,QAAAxc,YAAA,gBACAyc,EAAA1hB,KAAA,SAAA0E,SACA,IAAAid,EAAAzjB,EAAA,4CAAA+J,OAAAyZ,GAIAE,EAAAD,EAAA3hB,KAAA,4CACA4hB,EAAArd,KAAA,KAAAqd,EAAArd,KAAA,MAAA,WAEA+c,EAAArZ,OAAAuZ,GACAJ,EAAAnZ,OAAA0Z,GACA/hB,KAAAwP,SAAArP,QAAA8E,SAAA,kBAGAjF,KAAAiiB,oBAEA3jB,EAAA,gDAAA6C,GAAA,QAAA,WACA,IAAAuK,EAAApN,EAAA0B,MAAAqb,OAAA,MAAA3P,QACAA,GAAA,EACA3L,EAAAyP,SAAAvP,SAAAG,KAAA,qDAAAsL,EAAA,4BAAA,GAAAwW,WAIAC,gBAAA,WACA,IAAAhC,EAAAngB,KAAAwP,SAAAvP,SAAAG,KAAA,oBACAgiB,EAAAjC,EAAAiC,YACA9B,EAAAH,EAAAG,aACA+B,EAAAriB,KAAApB,QAAA+gB,eAAA,UAAA3f,KAAApB,QAAA4gB,WACA8C,EAAAtiB,KAAApB,QAAAghB,QAEA2C,EAAAviB,KAAAwP,SAAAvP,SAAAG,KAAA,oBAAAgK,aACAoY,EAAAxiB,KAAAwP,SAAAvP,SAAAG,KAAA,iDAAAgK,aAEAqY,EAAAziB,KAAAwP,SAAAvP,SAAAG,KAAA,kBAAAJ,KAAAwP,SAAAvP,SAAAG,KAAA,kBAAAgK,aAAA,EAEAsY,EAAAF,GAAAD,EAAAE,IAAAnC,EAGA8B,EAAA,EACAjC,EAAA/f,KAAA,0BAAAsG,IAAA,MAAA0b,GAEAjC,EAAA/f,KAAA,0BAAAsG,IAAA,MAAA,KAGA4Z,EAAA,GACA+B,IACAlC,EAAA/f,KAAA,yBAAAsG,IAAA,OAAA4Z,GACAH,EAAA/f,KAAA,0BAAAsG,IAAA,OAAA4Z,IAEAgC,GAAAI,IACAvC,EAAA/f,KAAA,0BAAAsG,IAAA,SAAA4Z,GACAH,EAAA/f,KAAA,2BAAAsG,IAAA,SAAA4Z,MAGA+B,IACAlC,EAAA/f,KAAA,yBAAAsG,IAAA,OAAA,KACAyZ,EAAA/f,KAAA,0BAAAsG,IAAA,OAAA,MAEA4b,IACAnC,EAAA/f,KAAA,0BAAAsG,IAAA,QAAA,KACAyZ,EAAA/f,KAAA,2BAAAsG,IAAA,QAAA,QAKAic,kBAAA,WACA,IAEArb,EACA1D,EAHAgf,EAAA,GACA7iB,EAAAC,KAGAohB,EAAAphB,KAAAwP,SAAAvP,SAAAG,KAAA,iDACAyiB,EAAA7iB,KAAAwP,SAAArP,QAAAC,KAAA,kBAEA,IAAAkH,EAAA,EAAA1D,EAAA5D,KAAApB,QAAAghB,QAAA3gB,MAAA2E,OAAA0D,EAAA1D,EAAA0D,IAAA,CACA,IAAA0G,EAAAhO,KAAApB,QAAAghB,QAAA3gB,MAAAqI,GACA7B,EAAAuI,EAAAvI,KAEAmd,GAAA,gCAAA5U,EAAA8F,KAAA,0BAAArO,EAAA,YAGA,IAAAqd,EAAA,mRAKAF,EACA,cAEA,GAAAC,EAAAjf,OAAA,EAAA,CACA,IAAAmf,EAAAzkB,EAAA,qDAAA0B,KAAAgjB,cAAA,cAAArB,aAAAP,GACA6B,EAAA7B,EAAAS,QAAA5c,SAAA,iBAKA,GAJAge,EAAA7iB,KAAA,uBAAA0E,SACAme,EAAA7iB,KAAA,0BAAA0E,SAGA,UAAA9E,KAAApB,QAAA4gB,YAAA,WAAAxf,KAAApB,QAAA4gB,WACAyD,EAAA7iB,KAAA,YAAAqF,KAAA,0CAAAqd,EAAA,eAEA,WAAA9iB,KAAApB,QAAA4gB,YAEAyD,EAAA7iB,KAAA,cAAAuE,KAAA,WAAA,gBAEA,CACA,IAAAue,EAAAljB,KAAApB,QAAAghB,QAAAsD,OAAA,wCACAD,EAAA7iB,KAAA,YAAA6E,SAAA,iBAAAQ,KAAA,OAAAyd,EAAA,sCAAAA,EAAA,eAIA,IAAAC,EAAAF,EAAA7iB,KAAA,MAEA+iB,EAAAze,KAAA,SAAA0e,GACA9kB,EAAA0B,MAAAyF,KAAAqd,GACAxkB,EAAA0B,MAAAI,KAAA,KAAAuE,KAAA,WAAAye,EAAA,KAGAL,EAAA1a,OAAA4a,GAEAjjB,KAAAwP,SAAArP,QAAA8E,SAAA,mBAGAjF,KAAAqjB,mBAGArjB,KAAAwP,SAAAvP,SAAAG,KAAA,qCAAAe,GAAA,QAAA,SAAAC,GACA,IAAArB,EAAAwB,WAAA,CACA,IAAA+hB,EAAAhlB,EAAA0B,MAAAkD,KAAA,UACAqgB,EAAAjlB,EAAA0B,MAAAkD,KAAA,OACAwF,GACA4a,WAAAA,EACAE,MAAAD,IAEAxjB,EAAA0jB,eAAA/a,EAAAtH,MAIApB,KAAAwP,SAAAvP,SAAAG,KAAA,qCAAAe,GAAA,QAAA,SAAAC,GACA,IAAArB,EAAAwB,WAAA,CACA,IAAA+hB,EAAAhlB,EAAA0B,MAAAkD,KAAA,UACAwF,GACA4a,WAAAA,EACAE,SAEAE,EAAA,2CAEA,WAAA3jB,EAAAnB,QAAA4gB,aACAkE,EAAA,qCAEA3jB,EAAAyP,SAAAvP,SAAAG,KAAAsjB,GAAAhf,KAAA,SAAAif,GACAjb,EAAA8a,KAAA9b,KAAAic,EAAA,KAGA5jB,EAAA0jB,eAAA/a,EAAAtH,OAKAqiB,eAAA,SAAA/a,EAAAtH,GAKA,IAJA,IAAAwiB,KACAC,EAAAvlB,EAAAwlB,KAAA9jB,KAAApB,QAAAghB,QAAA3gB,MAAA,SAAA2gB,GACA,OAAAA,EAAA9L,OAAApL,EAAA4a,aACA,GACAhc,EAAA,EAAAyc,EAAArb,EAAA8a,KAAA5f,OAAA0D,EAAAyc,EAAAzc,IAAA,CACA,IAAA0c,EAAAhkB,KAAAwP,SAAArP,QAAAC,KAAA,qDAAAsI,EAAA8a,KAAAlc,GAAA,KACAsc,EAAAlc,MACAiG,KAAAqW,EACAC,QAAAD,EAAA9gB,KAAA,eAOA,GAJA,IAAA0gB,EAAAhgB,SACAggB,EAAAA,EAAA,IAGAC,EAAAK,YAAA,CAEAL,EAAAK,YAAAN,EADA,aACAxiB,KAIAiiB,iBAAA,WACA,IAAAR,EAAA7iB,KAAAwP,SAAAvP,SAAAG,KAAA,sCACA+jB,EAAAtB,EAAAziB,KAAA,eACAghB,EAAAphB,KAAAwP,SAAAvP,SAAAG,KAAA,kCAEA+jB,EAAAvd,YAAAwa,EAAAhhB,KAAA,eAAAwG,eACAud,EAAA/jB,KAAA,0BAAAwG,YAAAud,EAAAvd,eACAic,EAAAziB,KAAA,2BAAAsE,KAAA,SAAA4C,GACAhJ,EAAA0B,MAAA4G,YAAAwa,EAAAhhB,KAAA,eAAAkH,EAAA,QAAAV,kBAIAqb,kBAAA,WACA,IAAAb,EAAAphB,KAAAwP,SAAAvP,SAAAG,KAAA,iDAEAJ,KAAAwP,SAAAvP,SAAAG,KAAA,wCAAAsE,KAAA,SAAA4C,GACAhJ,EAAA0B,MAAA2G,OAAAya,EAAAhhB,KAAA,SAAAkH,EAAA,KAAAX,YAGA,IAAAyd,EAAAhD,EAAAhhB,KAAA,YAAAgK,aACApK,KAAAwP,SAAAvP,SAAAG,KAAA,iDAAA+J,MAAAia,IAGAC,wBAAA,WACA,IAAAC,EAAAtkB,KAAAwP,SAAAvP,SAAAG,KAAA,2CACAmkB,EAAAvkB,KAAAwP,SAAAvP,SAAAG,KAAA,qCACAokB,EAAAxkB,KAAAwP,SAAAvP,SAAAG,KAAA,wBACAL,EAAAC,KAGAA,KAAAwP,SAAAvP,SAAAG,KAAA,iBAAAe,GAAA,uBAAA,SAAAC,GACA,IAAAsK,EAAApN,EAAA0B,MAAA0L,QACAA,GAAA,EACA,cAAAtK,EAAAoa,KACAgJ,EAAApkB,KAAA,sBAAAsL,EAAA,KAAAzG,SAAA,WAEAuf,EAAApkB,KAAA,sBAAAsL,EAAA,KAAArG,YAAA,aAIAkf,EAAAE,WACAH,EAAAG,WAGA,IAAAC,EAAA1kB,KAAAwP,SAAAvP,SAAAG,KAAA,wCACAukB,EAAA3kB,KAAAwP,SAAAvP,SAAAG,KAAA,sDA0CA,SAAAwkB,EAAAC,GACA9kB,EAAA+kB,mBAAA,EACAD,EAAAJ,SAAA,iBACA1kB,EAAA+kB,kBA5CAJ,EAAAvjB,GAAA,SAAA,SAAAC,GAGA,GAFAA,EAAAuX,kBAEA5Y,EAAA+kB,kBACA,GAAA/kB,EAAAwB,WACAqjB,EAAAtmB,EAAA8C,EAAA2jB,oBACA,CACA,IAAAxB,EAAAjlB,EAAA0B,MAAA2E,KAAA,YACA4e,EAAA/d,SAAA+d,EAAA,IAAA,EACAxjB,EAAAyP,SAAAvP,SAAAG,KAAA,qDAAAmjB,EAAA,KAAArB,QAEA,IAAA8C,EAAAjlB,EAAAyP,SAAAvP,SAAAG,KAAA,gDAAAwD,OACA,IAAAohB,GACAL,EAAArZ,KAAA,WAAA,GACAqZ,EAAArZ,KAAA,iBAAA,IACA0Z,IAAAN,EAAA9gB,QACA+gB,EAAArZ,KAAA,WAAA,GACAqZ,EAAArZ,KAAA,iBAAA,KAEAqZ,EAAArZ,KAAA,WAAA,GACAqZ,EAAArZ,KAAA,iBAAA,OAOAqZ,EAAAxjB,GAAA,SAAA,SAAAC,GACArB,EAAA+kB,oBACA/kB,EAAAwB,WACAqjB,EAAAtmB,EAAA8C,EAAA2jB,gBACAzmB,EAAA0B,MAAAsI,GAAA,aACAvI,EAAAyP,SAAAvP,SAAAG,KAAA,0DAAA8hB,QACAniB,EAAAyP,SAAAvP,SAAA0C,QAAA,6BAAA2hB,KAEAvkB,EAAAyP,SAAAvP,SAAAG,KAAA,oDAAA8hB,QACAniB,EAAAyP,SAAAvP,SAAA0C,QAAA,+BAAA2hB,QAYAhgB,QAAA,WACAtE,KAAApB,QAAAwgB,eACApf,KAAAmhB,gBAGA7a,YAAA,SAAA1H,GAOA,OANAoB,KAAAilB,gBACArmB,EAAAqmB,cAAAjlB,KAAAilB,eAEAjlB,KAAAklB,eACAtmB,EAAAsmB,aAAAllB,KAAAklB,cAEAtmB,GAEAsG,QAAA,SAAAiC,GACAnH,KAAApB,QAAAghB,UACAzY,EAAAhC,QAGAnF,KAAAwP,SAAArP,QAAAC,KAAA,4BAAAkF,WAAA,YACA6f,EAAAvd,KAAA5H,OAHAA,KAAAwP,SAAArP,QAAAC,KAAA,4BAAAuE,KAAA,WAAA,cAOA0J,WAAA,SAAAlH,EAAArI,GACAkB,KAAAilB,cAAA,KACAjlB,KAAAklB,aAAA,KACAllB,KAAAolB,oBAAAA,IACAplB,KAAAgjB,mBAAA5e,IAAApE,KAAApB,QAAAghB,QAAAzV,MAAAnK,KAAApB,QAAAghB,QAAAzV,MAAA,GACAnK,KAAAqlB,SAAA,EACAvmB,KAEA6E,OAAA,WACA2hB,EAAA1d,KAAA5H,KAAAA,KAAAwP,SAAAvP,SAAAG,KAAA,4CACAJ,KAAApB,QAAAghB,SACA5f,KAAAqjB,oBAEArjB,KAAApB,QAAA+gB,eAAA,UAAA3f,KAAApB,QAAA4gB,aACAxf,KAAAiiB,oBAEAjiB,KAAApB,QAAAwgB,eACApf,KAAAmhB,gBAGAzY,SAAA,WACA,IACA1E,EADAuhB,EAAAvlB,KAAApB,QAAA0gB,eAGAtf,KAAAwlB,aAAA,EACAxlB,KAAAwP,SAAAhP,QAAAyE,SAAA,YAEAsgB,IACAvhB,EAAA,iBAAAuhB,EAAAA,KACAvlB,KAAAwP,SAAAjJ,mBAAA,EAAAvC,KAGAyG,OAAA,SAAAtD,GACA,IAEAia,EAFAqE,EAAAte,EAAAqD,UAAApK,KAAA,kBACAL,EAAAC,KA+BA,OA3BAmH,EAAAjE,KAAAnE,MAAA,EACAiB,KAAAqlB,SAAA,EAEArlB,KAAAqlB,SAAA,EAGAI,EAAA7hB,OAAA,KACA6hB,EAAAnnB,EAAA,6BAAA0B,KAAAolB,oBAAA,iNACAhlB,KAAA,0BAAAe,GAAA,2BAAA,WACApB,EAAAnB,QAAAwgB,eACArf,EAAAmgB,sBAGAngB,EAAAnB,QAAA+gB,eAAA5f,EAAAnB,QAAAghB,SAAA,UAAA7f,EAAAnB,QAAA4gB,aACArY,EAAAqD,UAAArJ,GAAA,2BAAA,WACApB,EAAAoiB,oBAIAhb,EAAAqD,UAAAnC,OAAAod,IAEAte,EAAAqD,UAAAnF,YAAA,wDAEA+b,EAAAqE,EAAArlB,KAAA,SACAslB,EAAA9d,KAAA5H,KAAAohB,EAAAja,EAAAjE,MACAyiB,EAAA/d,KAAA5H,KAAAohB,EAAAja,EAAAjE,OAEA,GAEA4H,WAAA,SAAA3D,GAEA,OADAye,EAAAhe,KAAA5H,KAAAmH,EAAAqD,UAAArD,EAAA4D,OAAA5D,EAAAuE,QACA,GAEAC,MAAA,WACA,IAAAka,EA0BA,OAxBA7lB,KAAApB,QAAA+gB,eAAA,UAAA3f,KAAApB,QAAA4gB,YAAAxf,KAAAqlB,SACArlB,KAAAshB,mBAGAthB,KAAApB,QAAAghB,UAAA5f,KAAAqlB,UACArlB,KAAA2iB,oBACA3iB,KAAAqjB,qBAGArjB,KAAApB,QAAA+gB,gBAAA3f,KAAApB,QAAAghB,SAAA,UAAA5f,KAAApB,QAAA4gB,YAAAxf,KAAAqlB,UACArlB,KAAAmiB,kBACAniB,KAAAqkB,2BAGArkB,KAAApB,QAAAwgB,gBACApf,KAAAmhB,eACAnhB,KAAAkgB,qBAGA2F,EAAA7lB,KAAAwP,SAAArP,QAAAC,KAAA,iEACAwD,OAAA,GACA5D,KAAA8f,gBAAA+F,EAAA3iB,KAAA,mBAGA,KA8BA4iB,EAAA,SAAAC,EAAAvC,EAAA5C,EAAAoF,EAAAC,GACA,IAAAnd,EAAAkd,EAAAC,GAAAnd,UACAod,EAAA1C,EAAA5C,GAAAoF,EAAAC,GAAA9Z,UACAga,EAAA7nB,EAAA,aACA6L,EAAA6b,EAAAC,GAAAG,YAEAja,EAAA6Z,EAAAC,GAAA9Z,SAcA,IAbA,IAAAnM,KAAApB,QAAAghB,SAAA,gBAAAzT,IACA+Z,EAAA,gEAAAlmB,KAAAgjB,cAAA,cAGAkD,OAAA9hB,IAAA8hB,EAAAA,EAAA,GAEAC,EAAAlhB,cAAAb,IAAA0E,EAAAA,EAAA,IAAAT,OAAA6d,QACA9hB,IAAA+F,GACAgc,EAAA/b,WAAAD,GAGA4b,EAAA1d,OAAA8d,GAEA,UAAAnmB,KAAApB,QAAA4gB,YAAA,iBAAAwG,EAAAC,GAAA9Z,SAAA,CACA,IAAAka,EAAA,oBAAAzF,EAAA,mIAGAuF,EAAA1gB,KAAA4gB,GAGA,OAAAF,GAGAG,EAAA,SAAAC,EAAAP,EAAAta,GACA,IAeA8a,EACA1d,EACA2d,EACAC,EACAC,EAnBAC,EAAA,yBAEAC,EAAA,uBACAC,EAAAxoB,EAAA,gFACAyoB,GAAA/mB,KAAAwP,SAAAvP,SAAA0E,KAAA,MAAA,KAAA,IAAA,WAEA0hB,EAAA,iEACAU,EAAA,qJAMAC,EAAA1oB,EAAA,aACAyB,EAAAC,KAqBA,GAdA8mB,EAAA5jB,KAAA,gBAAAwI,GACAob,EAAA5F,QAAA8E,EAAAta,GAAAwX,OACA8D,EAAAvhB,KAAAqhB,EAAArhB,QAAArF,KAAA,QAAAkF,WAAA,MAEA,iBAAA0gB,EAAAta,GAAAS,SACA6a,EAAA3e,OAAAye,GAEAE,EAAA3e,OAAAge,GAGAG,EAAAQ,EAAAhQ,IAAA8P,GACAJ,EAAAI,EAAA1mB,KA/BA,wBAgCAumB,EAAAD,EAAA1P,IAAAgQ,EAAA5mB,KAhCA,yBAkCAJ,KAAApB,QAAAghB,SAAA,gBAAAoG,EAAAta,GAAAS,SAAA,CACA,IAAAhC,EAAAnK,KAAAgjB,cACAgE,EAAAtgB,IAAA,QAAAyD,GACA2c,EAAApgB,IAAA,QAAAyD,QAIA/F,KADA0E,EAAAkd,EAAAta,GAAA5C,YAEA0d,EAAAvhB,SAAA6D,IAGA2d,EAAAT,EAAAta,GAAA+a,YAEAD,EAAAvhB,SAAA,YACA6hB,EAAA3lB,GAAA,0BAAA,WACApB,EAAAwB,aACAxB,EAAAmlB,aAAA,iBAAAuB,EAAAA,EAAAT,EAAAta,GAAAS,SACA2a,EAAAvhB,SAAA,UACAmhB,EAAAnhB,SAAAshB,IACAF,EAAAthB,YAAAwhB,GAAA5hB,SAAA2hB,GACA7mB,EAAAklB,cAAA,QACAllB,EAAAnB,QAAA6gB,cAIA+G,EAAAnhB,YAAA,UACAshB,EAAAthB,YAAAuhB,GACA7mB,EAAAklB,cAAA,KACAllB,EAAAmlB,aAAA,OANAyB,EAAAthB,YAAAuhB,GAAA3hB,SAAA4hB,GACA9mB,EAAAklB,cAAA,QAQAsB,EAAAnmB,KAAA,8BAAAiF,YAAA,UACAshB,EAAAthB,YAAAuhB,GAAA3hB,SAAA4hB,GACA9mB,EAAAklB,cAAA,MACAuB,EAAAvhB,SAAA,WAGAlF,EAAAyP,SAAA5M,QACAC,eAAA,EACAf,cAAA,WAMA,QAAAkkB,EAAAta,GAAAuZ,eAAA,SAAAe,EAAAta,GAAAuZ,gBACAsB,EAAAnmB,KAAA,8BAAAiF,YAAA,UACAmhB,EAAAvhB,SAAA,mBACA,QAAA+gB,EAAAta,GAAAuZ,eACA0B,EAAA1hB,SAAA4hB,GACA7mB,KAAAilB,cAAA,QAEA0B,EAAA1hB,SAAA2hB,GACA5mB,KAAAilB,cAAA,QAGAjlB,KAAAklB,aAAA,iBAAAuB,EAAAA,EAAAT,EAAAta,GAAAS,UAGAoa,EAAAle,OAAA2e,IAqDApB,EAAA,SAAAqB,EAAAzD,EAAA9X,GACA,IAAAqa,EAAAznB,EAAA,aAEA,GAAA0B,KAAApB,QAAA4gB,aACAuG,EAAA7iB,KAAA,YAAAsgB,EAAA9X,IAEA,WAAA1L,KAAApB,QAAA4gB,YAAA,CACAuG,EAAA9gB,SAAA,cACA8gB,EAAAphB,KAAA,WAAA,GAEA,IAAA6K,EAAAxP,KACA+lB,EAAA5kB,GAAA,0BAAA,YA7DA,SAAAqO,GACA,IAAA0X,EAAA,UAAA1X,EAAA5Q,QAAA4gB,WACA2H,EAAA3X,EAAA5Q,QAAAghB,QACAwH,EAAA5X,EAAAvP,SAEA,IAAAuP,EAAAjO,WAAA,CACA,IAAA0b,EAAA3e,EAAA0B,MACA0L,EAAApN,EAAA0B,MAAA0L,QAAA,EACA2b,EAAAD,EAAAhnB,KAAA,uCAAAsL,EAAA,KACA4b,EAAAF,EAAAhnB,KAAA,wCAAAsL,EAAA,KACA6b,EAAAH,EAAAhnB,KAAA,uCAAAsL,EAAA,sBAEAuR,EAAA3U,GAAA,cACA2U,EAAA5X,YAAA,YACA6hB,GACAK,EAAArF,QACAmF,EAAAhiB,YAAA,YACA8hB,GACAG,EAAAjiB,YAAA,aAGA4X,EAAA7c,KAAA,wBAAA0E,SAGAsiB,EAAAzkB,QAAA,+BAAAsa,KAEAiK,GAUAK,EAAArF,QACAjF,EAAAhY,SAAA,YACAoiB,EAAApiB,SAAA,YACAkiB,GACAG,EAAAriB,SAAA,cAbAuK,EAAArP,QAAAC,KAAA,wBAAA0E,SACA0K,EAAArP,QAAAC,KAAA,oCAAAsE,KAAA,WACApG,EAAA0B,MAAAqF,YAAA,YACA+hB,EAAAzkB,QAAA,+BAAArE,EAAA0B,SAEAid,EAAA7c,KAAA,YAAA8gB,QAAA,uFACAjE,EAAAhY,SAAA,YACAoiB,EAAApiB,SAAA,aASAmiB,EAAAzkB,QAAA,6BAAAsa,IAGAkI,EAAAvd,KAAA4H,MAgBA5H,KAAA5H,KAAAwP,KAIAuW,EAAAyB,MAAA,SAAApmB,GACA,KAAAA,EAAAkC,SAEAyiB,EAAApjB,QAAA,6BAMA3C,KAAApB,QAAAghB,UAAA5f,KAAApB,QAAA4gB,YACAuG,EAAA7iB,KAAA,YAAAsgB,EAAA9X,IAIA,IADA,IAAAsa,KACA1e,EAAA,EAAA1D,EAAA5D,KAAAgmB,QAAApiB,OAAA0D,EAAA1D,EAAA0D,IACA0e,EAAAte,KAAAoe,EAAAle,KAAA5H,KAAA+lB,EAAAvC,EAAA9X,EAAA1L,KAAAgmB,QAAA1e,IAKA,GAFA2f,EAAA5e,OAAA0d,GAEA/lB,KAAApB,QAAAsgB,eACA,IAAA,IAAA+G,EAAA,EAAAwB,EAAAzB,EAAApiB,OAAAqiB,EAAAwB,EAAAxB,IACA,iBAAAjmB,KAAAgmB,QAAAC,GAAA9Z,UAAA,gBAAAnM,KAAAgmB,QAAAC,GAAA9Z,UACAnM,KAAApB,QAAAsgB,gBACA1U,UAAAub,EACA2B,WAAA1nB,KAAAgmB,QAAAC,GAAA9Z,SACAwB,KAAAqY,EAAAC,GACAhC,QAAAT,EAAA9X,IACA,cAKA1L,KAAApB,QAAA8gB,aACA1f,KAAApB,QAAA8gB,aACAlV,UAAAyc,EACAtZ,KAAAoY,EACA9B,QAAAT,EAAA9X,IACA,eAIAia,EAAA,SAAAvE,EAAAle,GACA,IACAykB,EADAV,EAAA7F,EAAAhhB,KAAA,SAGA6mB,EAAArjB,OAAA,IACAqjB,EAAA3oB,EAAA,yCACA8iB,EAAA/Y,OAAA4e,IAGA,iBAAA/jB,EAAA0kB,OAAA1kB,EAAA0kB,MAAAhkB,OAAA,IACA+jB,EAAArpB,EAAA,8CAAA0B,KAAAgmB,QAAApiB,OAAA,iBACAxD,KAAA,MAAAiI,OAAAnF,EAAA0kB,OACAX,EAAA5e,OAAAsf,IACAzkB,EAAAjE,OAAAiE,EAAAjE,MAAA2E,OAAA,KACA+jB,EAAArpB,EAAA,kCAAA0B,KAAAgmB,QAAApiB,OAAA,iBACAxD,KAAA,MAAAiI,OAAArI,KAAApB,QAAA2gB,aACA0H,EAAA5e,OAAAsf,KAIAjC,EAAA,SAAAtE,EAAAle,GACA,IAEAoE,EACA1D,EACA2iB,EAJAP,EAAA9iB,EAAA8iB,YACA6B,EAAAzG,EAAAhhB,KAAA,SAKA,GAAAJ,KAAAwlB,aA5RA,SAAAsC,EAAAC,GACA,IAAAA,EACA,OAAA,EAEA,IAAAD,GAAAC,EAAAnkB,SAAAkkB,EAAAlkB,OACA,OAAA,EAEA,IAAA,IAAA0D,EAAA,EAAA0gB,EAAAD,EAAAnkB,OAAA0D,EAAA0gB,EAAA1gB,IAAA,CACA,IAAAwgB,EAAAxgB,GACA,OAAA,EAGA,IAAA,IAAAgW,KAAAyK,EAAAzgB,GACA,GAAAygB,EAAAzgB,GAAAuM,eAAAyJ,IAAAwK,EAAAxgB,GAAAgW,KAAAyK,EAAAzgB,GAAAgW,GACA,OAAA,EAIA,OAAA,EA0QA2K,CAAAjoB,KAAAgmB,QAAAA,IAAA,IAAA6B,EAAAjkB,OAAA,CAKA,GAJAikB,EAAA/iB,SAIA,UAAA9E,KAAApB,QAAA4gB,aAAAxf,KAAAqlB,QAAA,CAMAW,EAAAkC,OAAA,EAAA,GAJAhF,MAAA,IACA/W,SAAA,eACAsa,UAAA,IAUA,GALAzmB,KAAAgmB,QAAAA,EACAhmB,KAAAwlB,aAAA,EACAxlB,KAAAwP,SAAAhP,QAAA6E,YAAA,YAGArF,KAAApB,QAAAghB,QAAA,CACA,IAAAuI,GACAjF,MAAAljB,KAAApB,QAAAghB,QAAAsD,OAAA,wCACA/W,SAAA,cACAsa,UAAA,EACAtc,MAAAnK,KAAAgjB,eAEAgD,EAAAte,KAAAygB,GAMA,IAFAN,EAAAvpB,EAAA,iDACAioB,EAAAsB,EAAAznB,KAAA,MACAkH,EAAA,EAAA1D,EAAAoiB,EAAApiB,OAAA0D,EAAA1D,EAAA0D,IACAgf,EAAA1e,KAAA5H,KAAAumB,EAAAP,EAAA1e,GAIA,GAFA8Z,EAAAF,QAAA2G,GAEA,UAAA7nB,KAAApB,QAAA4gB,aAAAxf,KAAAqlB,QAAA,CAGA,IAAA+C,EAAApoB,KAAAwP,SAAAvP,SAAAG,KAAA,2CAAAgK,aACAie,EAAA/pB,EAAAwlB,KAAAkC,EAAA,SAAAsC,GACA,MAAA,iBAAAA,EAAAnc,WACA,GACAkc,EAAAle,MAAAie,EAEA9C,EAAA1d,KAAA5H,KAAAumB,KAIAjB,EAAA,SAAAiB,GACA,IAEAjf,EACA1D,EACA2kB,EACAC,EALAC,KACA1oB,EAAAC,KAMA,GAAAA,KAAApB,QAAAugB,eACA7X,EAAA,EACAkhB,EAAA,EACAjC,EAAAnmB,KAAA,MAAAsE,KAAA,WACA,IACAyF,EADAkX,EAAA/iB,EAAA0B,MAEA,QAAAoE,IAAArE,EAAAimB,QAAA1e,GAAA6C,MACAA,EAAApK,EAAAimB,QAAA1e,GAAA6C,MACAkX,EAAAjX,WAAAD,GACAqe,GAAAnH,EAAAjX,aACArK,EAAAimB,QAAA1e,GAAA8e,YAAAjc,MACA,CACA,IAAAC,EAAAiX,EAAAjhB,KAAA,0BAAAgK,aACAqe,EAAA/gB,MACAuY,IAAAoB,EACA3V,MAAApE,EACAohB,SAAAte,IAIA9C,OAGA1D,EAAA6kB,EAAA7kB,QACA,GAAA,CACA,IAAA2e,EAAAviB,KAAAwP,SAAArP,QAAAC,KAAA,0BAAAgK,aAEA,IADAme,EAAApmB,KAAAC,OAAAmgB,EAAAiG,GAAA5kB,GACA0D,EAAA,EAAAA,EAAA1D,EAAA0D,IACAmhB,EAAAnhB,GAAAohB,SAAAH,IACAA,EAAAE,EAAAnhB,GAAAohB,UAEAD,EAAAnhB,GAAA2Y,IAAA7V,WAAAme,GACAvoB,KAAAgmB,QAAAyC,EAAAnhB,GAAAoE,OAAA0a,YAAAmC,IAMAnD,EAAA,WACA,IAAAuD,EAAAnlB,OAAAolB,UAAAC,UACAC,EAAAH,EAAAvZ,QAAA,SACA2Z,EAAAJ,EAAAvZ,QAAA,WAEA,OAAA0Z,EAAA,EACA,MAAAtjB,SAAAmjB,EAAArZ,UAAAwZ,EAAA,EAAAH,EAAAvZ,QAAA,IAAA0Z,IAAA,IACAC,EAAA,EACA,UAGA,IAGA5D,EAAA,WACA,IAAA6D,EAAA,2CACA/F,EAAAjjB,KAAAwP,SAAAvP,SAAAG,KAAA,kBAGA,WAAAJ,KAAApB,QAAA4gB,aACAwJ,EAAA,qCAGAhpB,KAAAwP,SAAArP,QAAAC,KAAA4oB,GAEAplB,OAAA,EACAqf,EAAA7iB,KAAA,cAAAkF,WAAA,YAEA2d,EAAA7iB,KAAA,cAAAuE,KAAA,WAAA,aAKA,OAAAnF,EAAA,OACAsU,KAAA,QACArM,KAAAwX,KAIAnhB,EAAA,uCACA,sBACA,4BACA,4BACA,0BACA,yBACA,0BACA,WACA,cACA,SAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,EAAAkB,EAAAoP,GAGA,IAAAqa,EAAAra,EAAAnQ,SACAC,UAAA,WAEAE,SACAsqB,UAAA,OACA5J,gBAAA,EACA6J,aAAA,KACA5J,YAAA,iBACAC,YAAA,EACAvQ,SAAA,mHAIA4Q,mBAAA,WACA7f,KAAAwP,SAAArP,QAAAC,KAAA,iDAAAiF,YAAA,aAGAyK,iBAAA,WACA,IAAApH,KAIA,OAHA1I,KAAAwP,SAAArP,QAAAC,KAAA,iDAAAsE,KAAA,WACAgE,EAAAhB,KAAApJ,EAAA0B,SAEA0I,GAGA8X,iBAAA,SAAAvhB,EAAA8gB,GACA,IAEAzY,EAAA2V,EAAA7U,EAAAghB,EAFA5J,EAAAxf,KAAApB,QAAA4gB,WACAzf,EAAAC,KAIA,SAAAqpB,IACA,GAAAD,IAAAnqB,EAAAqI,GAAAoE,MAEA,OADAuR,EAAA3e,EAAA0B,OACA,EAEAopB,IAKA,SAAAE,KACArM,EAAA3e,EAAA0B,OACAsI,GAAArJ,EAAAqI,GAAAoc,WACA7C,EAAA5D,EAAAhe,EAAAqI,GAAAoB,UAIA,SAAAmY,EAAAC,EAAAG,IACAA,OAAA7c,IAAA6c,GAAAA,IAEAlB,GAAA,UAAAP,GACAzf,EAAAwpB,+BAGAzI,EAAA7b,SAAA,aAEA6b,EAAAzb,YAAA,YAgBA,IAZArH,EAAA0iB,QAAAzhB,KACAA,GAAAA,IAIAmJ,GADA,IAAA2X,GAAA,UAAAP,EACAvgB,EAAA2E,OACA4b,GACAvgB,EAAA2E,OAAA,EAAA,EAEA,EAGA0D,EAAA,EAAAA,EAAAc,EAAAd,SACAlD,IAAAnF,EAAAqI,GAAAoE,OACAuR,EAAA3e,IACA8qB,EAAA,EACAppB,KAAAwP,SAAArP,QAAAC,KAAA,wCAAAsE,KAAA2kB,GACApM,EAAArZ,OAAA,GACAid,EAAA5D,EAAAhe,EAAAqI,GAAAoB,WAGAzJ,EAAAqI,GAAAoc,UACA1jB,KAAAwP,SAAArP,QAAAC,KAAA,wCAAAsE,KAAA4kB,IAKA5gB,SAAA,WACA,IACA1E,EADAuhB,EAAAvlB,KAAApB,QAAA0gB,eAEAiG,IACAvhB,EAAA,iBAAAuhB,EAAAA,KACAvlB,KAAAuG,mBAAA,EAAAvC,KAGAyG,OAAA,SAAAtD,GACA,IAIAwgB,EAJAuB,EAAAlpB,KAAApB,QAAAsqB,UACAM,EAAAxpB,KAAAwP,SAAArP,QAAAC,KAAA,4BACA8C,EAAAiE,EAAAjE,KACA6K,KA+BA,OA5BAyb,EAAA5lB,OAAA,GACA4lB,EAAAlrB,EAAA,2HACA4qB,GAAA,SAAAA,GAOAA,GALAO,OAAA,EACAC,QAAA,EACAjR,KAAA,EACAkR,MAAA,GAEAT,GAAAA,EAAA,UACAM,EAAAvkB,SAAA,SAAAikB,GACAlpB,KAAA4pB,yBAAA,GAEA5pB,KAAA4pB,yBAAA,EAEA7b,EAAAJ,KAAA6b,GAEAzb,EAAAC,OAAA,OAGA9K,EAAAjE,OAAAiE,EAAAjE,MAAA2E,OAAA,IACA+jB,EAAArpB,EAAA,8BACA+J,OAAArI,KAAApB,QAAA2gB,aACAiK,EAAAnhB,OAAAsf,IAEA6B,EAAAppB,KAAA,gBAAA0E,SAGAiJ,GAEAjD,WAAA,SAAA3D,GACA,IAAAqY,EAAAxf,KAAApB,QAAA4gB,WAEAzf,EAAAC,KACA6pB,EAAAvrB,EA+CA,SAAA4Q,EAAAD,GACA,IAAAE,GAAA,EAEA,SAAA/C,IACA,IAAApN,EAAAI,EAAAiE,EAEAjE,EAAA6P,EAAAG,QAAA,MACApQ,EAAAiQ,EAAAG,QAAA,KAAAhQ,EAAA,GAEAA,GAAA,GAAAJ,GAAA,GACAqE,EAAArF,EAAAqR,KAAAJ,EAAAK,UAAAlQ,EAAA,EAAAJ,IACAqE,OAAAe,IAAA8K,EAAA7L,GAAA6L,EAAA7L,GAAA,GACA4L,EAAAA,EAAAK,UAAA,EAAAlQ,GAAAiE,EAAA4L,EAAAK,UAAAtQ,EAAA,IAEAmQ,GAAA,EAIA,MAAAA,GAAAF,EAAA5I,OAAA,OAAA,GACA+F,IAGA,OAAA6C,EArEA6a,CAAA3iB,EAAA4D,OAAA5D,EAAAuE,OAAA1L,KAAApB,QAAAqQ,WAwCA,OAtCA4a,EAAA3mB,KAAA,YAAAiE,EAAAjE,KAAAjE,MAAAkI,EAAAuE,QAEA8T,IACAqK,EAAA5kB,SAAA,cACA4kB,EAAA1oB,GAAA,QAAA,WACApB,EAAAwB,aAEAsoB,EAAAtkB,SAXA,aAuBAskB,EAAAxkB,YAvBA,YAwBAtF,EAAAyP,SAAAvP,SAAA0C,QAAA,oCAAAknB,KAZA,UAAArK,GACAzf,EAAAyP,SAAArP,QAAAC,KAAA,iDAAAsE,KAAA,WACA,IAAAoc,EAAAxiB,EAAA0B,MACA8gB,EAAAzb,YAfA,YAgBAtF,EAAAyP,SAAAvP,SAAA0C,QAAA,oCAAAme,KAIA+I,EAAA5kB,SApBA,YAqBAlF,EAAAyP,SAAAvP,SAAA0C,QAAA,kCAAAknB,QAQA1iB,EAAAqD,UAAAnC,OAAAwhB,GACA7pB,KAAA4pB,yBACAC,EAAAle,MAAA,sCAGA3L,KAAApB,QAAAuqB,cACAnpB,KAAApB,QAAAuqB,cACA3e,UAAArD,EAAAqD,UACAmD,KAAAkc,EACA3a,SAAA/H,EAAA4D,OAAA5D,EAAAuE,QACA,eAGA,KAgCA,OAAAlM,EAAA,MACAsU,KAAA,OACArM,KAAAwhB,KAIAnrB,EAAA,iCACA,aACA,UACA,mBACA,iBACA,gBACA,gBACA,SAAAU,GACA,OAAAA,IAEAV,EAAA,4BAAA,iCAAA,SAAAisB,GAAA,OAAAA","file":"../skylark-widgets-repeater.js","sourcesContent":["define('skylark-widgets-repeater/Repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/elmx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-widgets-swt/Widget\",\r\n  \"skylark-widgets-swt/SelectList\",\r\n  \"skylark-widgets-swt/ComboBox\",\r\n  \"skylark-widgets-swt/SearchBox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,Widget){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"lark.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n//\t\t_init : function(element,options) {\r\n\t\t_init : function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n//\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.lark.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.lark.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.lark.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.lark.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.lark.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').plugin(\"lark.combobox\").destroy();\r\n\t\t\tthis.$element.find('.selectlist').plugin(\"lark.selectlist\").destroy();\r\n\t\t\tthis.$element.find('.search').plugin(\"lark.searchbox\").destroy();\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.lark.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").disable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").disable();\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").enable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").enable();\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.plugin(\"lark.combobox\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable();\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"lark.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"lark.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\t/*\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\tvar setting = Repeater.addons.views[viewTypes[i]];\r\n\t\t\t\tif (!setting) {\r\n\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t} \r\n\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (views.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.lark.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.lark.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* lwf\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"loader\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem({\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render({\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* // by lwf\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\t\t*/\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\t//this.$loader.hide().loader('pause');\r\n\t\tif (this._throbber) {\r\n\t\t\tthis._throbber.remove();\r\n\t\t\tthis._throbber = null;\r\n\t\t}\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.lark.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\t// For backwards compatibility.\r\n\tRepeater.prototype.runRenderer = Repeater.prototype.renderItems;\r\n\r\n\tRepeater.addons = {};\r\n\r\n\r\n\treturn skylark.attach(\"widgets.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views',[\r\n\t\"./Repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.addons.views = {};\r\n});\ndefine('skylark-widgets-repeater/views/ViewBase',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"../views\",\t\r\n],function(langx,noder,$,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t  // Defines if the gallery should open in fullscreen mode:\r\n\t\t  fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n\t\tinit : function (repeater,options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.repeater = repeater;\r\n\t\t\tthis.initOptions(options);\r\n\t        if (this.options.fullScreen) {\r\n\t          noder.fullScreen(this.container[0]);\r\n\t        }\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (that.container.hasClass(that.options.controlsClass)) {\r\n\t              hasControls = true\r\n\t              that.container.removeClass(that.options.controlsClass);\r\n\t            } else {\r\n\t              hasControls = false\r\n\t            }\r\n\t        });\r\n\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (hasControls) {\r\n\t              that.container.addClass(that.options.controlsClass);\r\n\t            }\r\n\t        });\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t      // Create a copy of the prototype options:\r\n\t      this.options = langx.mixin({}, this.options,options);\r\n\t    },\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n      \t},\r\n\r\n      \tgetValue : function() {\r\n      \t\treturn this.getSelectedItems();\r\n      \t},\r\n\r\n      \tcleared : function() {\r\n\r\n      \t},\r\n\r\n      \tselected : function() {\r\n\r\n      \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-widgets-repeater/views/slider',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../views\", \r\n  \"./ViewBase\"\r\n],function (langx,noder,$,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the repeater view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div.slides',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'slider-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'slider-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'slider-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'slider-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'slider-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: false,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n      // Callback function executed when the Gallery is initialized.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopen: undefined,\r\n      // Callback function executed when the Gallery has been initialized\r\n      // and the initialization transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onopened: undefined,\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n      // Callback function executed when the Gallery is about to be closed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclose: undefined,\r\n      // Callback function executed when the Gallery has been closed\r\n      // and the closing transition has been completed.\r\n      // Is called with the gallery instance as \"this\" object:\r\n      onclosed: undefined,\r\n\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'ThumbnailImage',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n      indicators : {\r\n            // Hide the page scrollbars:\r\n          hidePageScrollbars: false,\r\n\r\n          // The tag name, Id, element or querySelector of the indicator container:\r\n          indicatorContainer: 'ol',\r\n          // The class for the active indicator:\r\n          activeIndicatorClass: 'active',\r\n          // The list object property (or data attribute) with the thumbnail URL,\r\n          // used as alternative to a thumbnail child element:\r\n          thumbnailProperty: 'thumbnail',\r\n          // Defines if the gallery indicators should display a thumbnail:\r\n          thumbnailIndicators: true\r\n      },\r\n\r\n\r\n\r\n      \"template\" :'<div class=\"repeater-slider\">' + \r\n                  '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>' +\r\n                  \"</div>\",\r\n\r\n      \"item\" : {\r\n        template : '<img height=\"75\" src=\"{{ThumbnailImage}}\" width=\"65\"/>' \r\n      }\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    render: function (helper){\r\n      //this.overrided(repeater,options);\r\n\r\n      this.container = this.repeater.$canvas.find('.repeater-slider');\r\n\r\n      if (this.container.length < 1) {\r\n        this.container = $(this.options.template);\r\n        this.repeater.$canvas.append(this.container);\r\n      } \r\n      this.list = helper.data.items;\r\n      //this.options.container = helper.container;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      this.initView();\r\n\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval\r\n      if (this.elements[this.index] > 1) {\r\n        this.timeout = this.setTimeout(\r\n          (!this.requestAnimationFrame && this.slide) ||\r\n            function (to, speed) {\r\n              that.animationFrameId = that.requestAnimationFrame.call(\r\n                window,\r\n                function () {\r\n                  that.slide(to, speed)\r\n                }\r\n              )\r\n            },\r\n          [this.index + 1, this.options.slideshowTransitionSpeed],\r\n          this.interval\r\n        )\r\n      }\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    handleClose: function () {\r\n      var options = this.options\r\n      if (this.activeIndicator) {\r\n         this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n      }\r\n\r\n      this.destroyEventListeners()\r\n      // Cancel the slideshow:\r\n      this.pause()\r\n      this.container[0].style.display = 'none'\r\n      this.container\r\n        .removeClass(options.displayClass)\r\n        .removeClass(options.singleClass)\r\n        .removeClass(options.leftEdgeClass)\r\n        .removeClass(options.rightEdgeClass)\r\n      if (options.hidePageScrollbars) {\r\n        document.body.style.overflow = this.bodyOverflowStyle\r\n      }\r\n      if (this.options.clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      if (this.options.onclosed) {\r\n        this.options.onclosed.call(this)\r\n      }\r\n    },\r\n\r\n    close: function () {\r\n      var that = this\r\n      function closeHandler (event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, closeHandler)\r\n          that.handleClose()\r\n        }\r\n      }\r\n      if (this.options.onclose) {\r\n        this.options.onclose.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, closeHandler)\r\n        this.container.removeClass(this.options.displayClass)\r\n      } else {\r\n        this.handleClose()\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (isValidClose) {\r\n          this.close()\r\n        } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    oncomplete: function (event) {\r\n      var target = event.target || event.srcElement\r\n      var parent = target && target.parentNode\r\n      var index\r\n      if (!target || !parent) {\r\n        return\r\n      }\r\n      index = this.getNodeIndex(parent)\r\n      $(parent).removeClass(this.options.slideLoadingClass)\r\n      if (event.type === 'error') {\r\n        $(parent).addClass(this.options.slideErrorClass)\r\n        this.elements[index] = 3 // Fail\r\n      } else {\r\n        this.elements[index] = 2 // Done\r\n      }\r\n      // Fix for IE7's lack of support for percentage max-height:\r\n      if (target.clientHeight > this.container[0].clientHeight) {\r\n        target.style.maxHeight = this.container[0].clientHeight\r\n      }\r\n      if (this.interval && this.slides[this.index] === parent) {\r\n        this.play()\r\n      }\r\n      this.setTimeout(this.options.onslidecomplete, [index, parent])\r\n    },\r\n\r\n    onload: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onerror: function (event) {\r\n      this.oncomplete(event)\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          if (this.options.closeOnEscape) {\r\n            this.close()\r\n            // prevent Esc from closing other things\r\n            event.stopImmediatePropagation()\r\n          }\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target))\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n      } else {\r\n        function isTarget (className) {\r\n          return $(target).hasClass(className) || $(parent).hasClass(className)\r\n        }\r\n\r\n\r\n        if (isTarget(options.toggleClass)) {\r\n          // Click on \"toggle\" control\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        } else if (isTarget(options.prevClass)) {\r\n          // Click on \"prev\" control\r\n          this.preventDefault(event)\r\n          this.prev()\r\n        } else if (isTarget(options.nextClass)) {\r\n          // Click on \"next\" control\r\n          this.preventDefault(event)\r\n          this.next()\r\n        } else if (isTarget(options.closeClass)) {\r\n          // Click on \"close\" control\r\n          this.preventDefault(event)\r\n          this.close()\r\n        } else if (isTarget(options.playPauseClass)) {\r\n          // Click on \"play-pause\" control\r\n          this.preventDefault(event)\r\n          this.toggleSlideshow()\r\n        } else if (parent === this.slidesContainer[0]) {\r\n          // Click on slide background\r\n          if (options.closeOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.close()\r\n          } else if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        } else if (\r\n          parent.parentNode &&\r\n          parent.parentNode === this.slidesContainer[0]\r\n        ) {\r\n          // Click on displayed element\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n\r\n      this.setActiveIndicator(index)\r\n\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var $item = this._create$Item(this.options.item.template,obj);\r\n      $item.find(\"img\").on('load error', callback);\r\n\r\n      $item.addClass(this.options.slideContentClass);\r\n      return $item;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).append(            \r\n            this.createElement(this.list[index], this.proxyListener)\r\n          );\r\n          //$(this.slides[index]).addClass(this.options.slideLoadingClass).append(            \r\n          //  this.createElement(this.list[index], this.proxyListener)\r\n          //);\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    createIndicator: function (obj) {\r\n      var repeater = this.repeater,\r\n          indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = repeater.getItemProperty(obj,\"title\")\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = repeater.getItemProperty(obj, thumbnailProperty)\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n\r\n      this.addIndicator(index)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        // indicator\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var repeater = this.repeater,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || repeater.getItemUrl(this.list[i]) ===  repeater.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n    handleOpen: function () {\r\n      if (this.options.onopened) {\r\n        this.options.onopened.call(this)\r\n      }\r\n    },\r\n\r\n    initView: function () {\r\n      var that = this\r\n      function openHandler (event) {\r\n        if (event.target === that.container[0]) {\r\n          that.container.off(that.support.transition.end, openHandler)\r\n          that.handleOpen()\r\n        }\r\n      }\r\n\r\n      /*\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      */\r\n\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.onopen) {\r\n        this.options.onopen.call(this)\r\n      }\r\n      if (this.support.transition && this.options.displayTransition) {\r\n        this.container.on(this.support.transition.end, openHandler)\r\n      } else {\r\n        this.handleOpen()\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  return views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView,\r\n    \"templates\" : {\r\n      \"default\" : '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"close\">×</a>' + \r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>'\r\n\r\n    } \r\n  };\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views/table',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find('.repeater-list-check').remove();\r\n        this.repeater.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find('.repeater-list-wrapper > table tbody');\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-list-wrapper');\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find('.repeater-list-check').remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find('.repeater-list table');\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find('.repeater-list-heading');\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var repeaterWrapper = this.repeater.$element.find('.repeater-list');\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = '.repeater-list-wrapper > table .selected';\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = '.repeater-list-wrapper > table tr';\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find('.repeater-list table.table-actions');\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find('.repeater-list-wrapper > table');\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n        this.repeater.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find('.repeater-list table');\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find('.repeater-list-wrapper > table thead tr'));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find('.repeater-list');\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $('<div class=\"repeater-list ' + this.specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n            $listContainer.find('.repeater-list-wrapper').on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find('.repeater-list-check').remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find('.repeater-list-check').remove();\r\n                    repeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = '.repeater-list-wrapper > table .selected';\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = '.repeater-list-wrapper > table tr';\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     return views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    };   \r\n\r\n});\ndefine('skylark-widgets-repeater/views/tile',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-thumbnail-cont .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-thumbnail-cont');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $('<div class=\"clearfix repeater-thumbnail-cont\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>');\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = $(fillTemplate(helpers.subset[helpers.index], this.options.template));\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-thumbnail-cont .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    //ADDITIONAL METHODS\r\n    function fillTemplate(itemData, template) {\r\n        var invalid = false;\r\n\r\n        function replace() {\r\n            var end, start, val;\r\n\r\n            start = template.indexOf('{{');\r\n            end = template.indexOf('}}', start + 2);\r\n\r\n            if (start > -1 && end > -1) {\r\n                val = langx.trim(template.substring(start + 2, end));\r\n                val = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                template = template.substring(0, start) + val + template.substring(end + 2);\r\n            } else {\r\n                invalid = true;\r\n            }\r\n        }\r\n\r\n        while (!invalid && template.search('{{') >= 0) {\r\n            replace(template);\r\n        }\r\n\r\n        return template;\r\n    }\r\n\r\n    return views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n    \r\n});\ndefine('skylark-widgets-repeater/main',[\r\n    \"./Repeater\",\r\n    \"./views\",\r\n    \"./views/ViewBase\",\r\n    \"./views/slider\",\r\n    \"./views/table\",\r\n    \"./views/tile\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-widgets-repeater', ['skylark-widgets-repeater/main'], function (main) { return main; });\n\n"]}