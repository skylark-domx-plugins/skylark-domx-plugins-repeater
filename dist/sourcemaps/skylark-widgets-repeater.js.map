{"version":3,"sources":["skylark-widgets-repeater.js"],"names":["define","langx","browser","eventer","noder","geom","$","Dropdown","Widget","ComboBox","inherit","klassName","pluginName","widgetClass","options","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","list","predicate","self","visible","$dropMenu","find","remove","each","i","$li","this","text","trim","removeClass","addClass","substr","length","append","_init","$element","_elm","$input","$button","plugin","$inputGroupBtn","on","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","items","children","val","_destroy","attr","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","item","data","txt","mixin","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","value","selector","selectBySelector","selectByIndex","index","removeData","removeAttr","enable","disable","e","target","parent","trigger","synthetic","preventDefault","focus","IS_NAVIGATIONAL","which","hasClass","toggle","selected","$selected","next","prev","previousKeyPress","extra","prototype","getValue","plugins","SearchBox","Plugin","clearOnEmpty","searchOnKeyPress","allowCancel","_construct","elm","overrided","$repeater","closest","$icon","buttonclicked","clearPending","activeSearch","search","searchText","clear","action","currentTarget","is","register","skylark","elmx","SelectList","Repeater","dataSource","callback","count","end","page","pages","start","defaultView","dropPagingCap","staticHeight","views","addons","$btn","currentView","$canvas","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","render","clearInfinite","previous","evt","pageInputChange","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","initViewTypes","changeView","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","infinitescroll","off","enabled","status","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","returnOptions","view","pageIndex","pageSize","searchValue","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","setting","constructor","Error","ctor","push","initViewType","call","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","prevView","split","syncViewButtonState","_throbber","throb","className","beforeRender","repeaterPrototypeContext","viewTypeObj","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","after","addAfter","parents","$itemToCheck","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","test","parseJSON","ignore","getItemProperty","msg","console","warn","keep","pres","detach","$parent","response","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","attach","ViewBase","Evented","controlsClass","fullScreen","_create$Item","template","itemData","invalid","indexOf","substring","init","repeater","hasControls","that","initOptions","cache","defaults","ctors","unshift","superclass","hasOwnProperty","Object","defineProperty","close","getSelectedItems","LinearView","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","clearSelectedItems","setSelectedItems","force","n","compareItemIndex","compareItemSelector","selectItem","$itm","select","thumbnail_clearSelectedItems","isArray","infScroll","$cont","$thumbnail","name","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onslide","onslideend","onslidecomplete","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","indicators","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","helper","num","initStartIndex","initView","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","dist","translateX","x","y","slides","translateY","from","timer","setInterval","timeElap","left","clearInterval","time","interval","animationFrameId","pause","add","concat","Array","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","slideHeight","ontouchcancel","onkeydown","toggleControls","toggleSlideshow","handleClick","srcElement","parentNode","getNodeIndex","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","setActiveIndicator","firstChild","title","alt","createTextNode","func","args","wait","apply","loadElement","elements","proxyListener","limit","min","j","unloadSlide","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","activeIndicator","slidePrototype","reload","imagePrototype","elementPrototype","clientWidth","clientHeight","len","getItemUrl","type","destroyEventListeners","first","log","bodyOverflowStyle","overflow","display","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","highlightColumn","tbody","col","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","itms","checkIfItemMatchesValue","rowIndex","slct","$frozenCols","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","actionsDropdown","$actionsColumnWrapper","actions_width","$actionsColumn","label","$actionsCells","rowNumber","sizeActionsTable","actionName","row","rows","getActionItems","selectorIndex","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","specialBrowserClass","noItems","sizeColumns","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","firefox","selectedSelector","TileView","center","justify","right","thumbnail_injectSpacers","main"],"mappings":"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","file":"../skylark-widgets-repeater.js","sourcesContent":["define('skylark-widgets-repeater/ComboBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-popups/Dropdown\",\r\n  \"skylark-widgets-base/Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,Dropdown,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = Widget.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.plugin(\"domx.dropdown\");\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.plugin(\"domx.dropdown\").toggle();\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn ComboBox;\r\n});\r\n\ndefine('skylark-widgets-repeater/SearchBox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\"\n],function(langx,browser,eventer,noder,geom,$,plugins){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = plugins.Plugin.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n    \t_construct : function(elm,options) {\n      \t\tthis.overrided(elm,options);\n      \t\t\n      \t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.fu.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.fu.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.fu.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\n\t\t_destroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.fu.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.fu.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.fu.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n    plugins.register(SearchBox);\n\n\treturn \tSearchBox;\n});\n\ndefine('skylark-widgets-repeater/Repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-popups/SelectList\",\r\n  \"skylark-widgets-base/Widget\",\r\n  \"./ComboBox\",\r\n  \"./SearchBox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,SelectList,Widget){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"lark.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n//\t\t_init : function(element,options) {\r\n\t\t_init : function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).plugin(\"domx.dropdown\");\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n//\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"domx.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"domx.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.lark.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.lark.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.lark.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.lark.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.lark.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').plugin(\"lark.combobox\").destroy();\r\n\t\t\tthis.$element.find('.selectlist').plugin(\"domx.selectlist\").destroy();\r\n\t\t\tthis.$element.find('.search').plugin(\"lark.searchbox\").destroy();\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.lark.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").disable();\r\n\t\t\tthis.$filters.plugin(\"domx.selectlist\").disable();\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").disable();\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").disable();\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").enable();\r\n\t\t\tthis.$filters.plugin(\"domx.selectlist\").enable()\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").enable()\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").enable();\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.plugin(\"lark.combobox\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").enable();\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"domx.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"domx.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\t/*\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\tvar setting = this.constructor.addons.views[viewTypes[i]];\r\n\t\t\t\tif (!setting) {\r\n\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t} \r\n\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (views.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.lark.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.lark.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* lwf\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"throbWrap\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem({\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render({\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* // by lwf\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\t\t*/\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t}\r\n\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\t//this.$loader.hide().loader('pause');\r\n\t\tif (this._throbber) {\r\n\t\t\tthis._throbber.remove();\r\n\t\t\tthis._throbber = null;\r\n\t\t}\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.lark.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tRepeater.addons = {};\r\n\r\n\r\n\treturn skylark.attach(\"widgets.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views',[\r\n\t\"./Repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.addons.views = {};\r\n});\ndefine('skylark-widgets-repeater/views/ViewBase',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"../views\",\t\r\n],function(langx,noder,$,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t  // Defines if the gallery should open in fullscreen mode:\r\n\t\t  fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n\t\tinit : function (repeater,options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.repeater = repeater;\r\n\t\t\tthis.initOptions(options);\r\n\t        if (this.options.fullScreen) {\r\n\t          noder.fullScreen(this.container[0]);\r\n\t        }\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (that.container.hasClass(that.options.controlsClass)) {\r\n\t              hasControls = true\r\n\t              that.container.removeClass(that.options.controlsClass);\r\n\t            } else {\r\n\t              hasControls = false\r\n\t            }\r\n\t        });\r\n\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (hasControls) {\r\n\t              that.container.addClass(that.options.controlsClass);\r\n\t            }\r\n\t        });\r\n\t\t},\r\n\r\n\t    //initOptions: function (options) {\r\n\t    //  // Create a copy of the prototype options:\r\n\t    //  this.options = langx.mixin({}, this.options,options);\r\n\t    //},\r\n\r\n       initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n      \t},\r\n\r\n      \tgetValue : function() {\r\n      \t\treturn this.getSelectedItems();\r\n      \t},\r\n\r\n      \tcleared : function() {\r\n\r\n      \t},\r\n\r\n      \tselected : function() {\r\n\r\n      \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\ndefine('skylark-widgets-repeater/views/LinearView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var LinearView = ViewBase.inherit({\r\n    klassName : \"LinearView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n\r\n        template : '<ul class=\"clearfix repeater-linear\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></ul>',\r\n        item : {\r\n            template: '<li class=\"repeater-item\"><img  src=\"{{ThumbnailImage}}\" class=\"thumb\"/><h4 class=\"title\">{{name}}</h4></div>'\r\n        },\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-linear');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        return response;\r\n    },\r\n\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $item = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $item.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $item.addClass('selectable');\r\n            $item.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$item.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterList', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $item.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $item);\r\n                } else {\r\n                    $item.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $item);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($item);\r\n\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"linear\"] = {\r\n        name : \"linear\",\r\n        ctor : LinearView\r\n    };\r\n\r\n    return LinearView;\r\n    \r\n});\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-widgets-repeater/views/SliderView',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../views\", \r\n  \"./ViewBase\"\r\n],function (langx,noder,$,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the repeater view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div.slides',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'slider-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'slider-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'slider-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'slider-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'slider-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: true,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'ThumbnailImage',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n      indicators : {\r\n            // Hide the page scrollbars:\r\n          hidePageScrollbars: false,\r\n\r\n          // The tag name, Id, element or querySelector of the indicator container:\r\n          indicatorContainer: 'ol',\r\n          // The class for the active indicator:\r\n          activeIndicatorClass: 'active',\r\n          // The list object property (or data attribute) with the thumbnail URL,\r\n          // used as alternative to a thumbnail child element:\r\n          thumbnailProperty: 'thumbnail',\r\n          // Defines if the gallery indicators should display a thumbnail:\r\n          thumbnailIndicators: true\r\n      },\r\n\r\n\r\n\r\n      \"template\" :'<div class=\"repeater-slider\">' + \r\n                  '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>' +\r\n                  \"</div>\",\r\n\r\n      \"item\" : {\r\n        template : '<img height=\"75\" src=\"{{ThumbnailImage}}\" width=\"65\"/>' \r\n      }\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    render: function (helper){\r\n      //this.overrided(repeater,options);\r\n\r\n      this.container = this.repeater.$canvas.find('.repeater-slider');\r\n\r\n      if (this.container.length < 1) {\r\n        this.container = $(this.options.template);\r\n        this.repeater.$canvas.append(this.container);\r\n      } \r\n      this.list = helper.data.items;\r\n      //this.options.container = helper.container;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      this.initView();\r\n\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval;\r\n      this.timeout = this.setTimeout(\r\n        (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n        [this.index + 1, this.options.slideshowTransitionSpeed],\r\n        this.interval\r\n      )\r\n\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target))\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n      } else {\r\n        function isTarget (className) {\r\n          return $(target).hasClass(className) || $(parent).hasClass(className)\r\n        }\r\n\r\n\r\n        if (isTarget(options.toggleClass)) {\r\n          // Click on \"toggle\" control\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        } else if (isTarget(options.prevClass)) {\r\n          // Click on \"prev\" control\r\n          this.preventDefault(event)\r\n          this.prev()\r\n        } else if (isTarget(options.nextClass)) {\r\n          // Click on \"next\" control\r\n          this.preventDefault(event)\r\n          this.next()\r\n        } else if (isTarget(options.playPauseClass)) {\r\n          // Click on \"play-pause\" control\r\n          this.preventDefault(event)\r\n          this.toggleSlideshow()\r\n        } else if (parent === this.slidesContainer[0]) {\r\n          // Click on slide background\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        } else if (\r\n          parent.parentNode &&\r\n          parent.parentNode === this.slidesContainer[0]\r\n        ) {\r\n          // Click on displayed element\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n\r\n      this.setActiveIndicator(index)\r\n\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var $item = this._create$Item(this.options.item.template,obj);\r\n      $item.find(\"img\").on('load error', callback);\r\n\r\n      $item.addClass(this.options.slideContentClass);\r\n      return $item;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).append(            \r\n            this.createElement(this.list[index], this.proxyListener)\r\n          );\r\n          //$(this.slides[index]).addClass(this.options.slideLoadingClass).append(            \r\n          //  this.createElement(this.list[index], this.proxyListener)\r\n          //);\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    createIndicator: function (obj) {\r\n      var repeater = this.repeater,\r\n          indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = repeater.getItemProperty(obj,\"title\")\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = repeater.getItemProperty(obj, thumbnailProperty)\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n\r\n      this.addIndicator(index)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        // indicator\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var repeater = this.repeater,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || repeater.getItemUrl(this.list[i]) ===  repeater.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n\r\n    initView: function () {\r\n      var that = this\r\n\r\n      /*\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      */\r\n\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView\r\n  };\r\n\r\n  return SliderView;\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views/TableView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$element.find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html(`<th><div class=\"${this.options.headingClass}\">` + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + `<div class=\"${this.options.headingClass}\">` + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$element.find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find(`.${this.options.checkClass}`).remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n                    repeater.$canvas.find(`.${this.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});\ndefine('skylark-widgets-repeater/views/TileView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        }\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-tile .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-tile .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-tile .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-tile .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-tile');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-tile .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n\r\n    return TileView;\r\n    \r\n});\ndefine('skylark-widgets-repeater/main',[\r\n    \"./Repeater\",\r\n    \"./views\",\r\n    \"./views/ViewBase\",\r\n    \"./views/LinearView\",\r\n    \"./views/SliderView\",\r\n    \"./views/TableView\",\r\n    \"./views/TileView\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-widgets-repeater', ['skylark-widgets-repeater/main'], function (main) { return main; });\n\n"]}