{"version":3,"sources":["skylark-widgets-repeater.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","SearchBox","Plugin","inherit","klassName","pluginName","options","clearOnEmpty","searchOnKeyPress","allowCancel","_construct","elm","this","overrided","$element","_elm","$repeater","closest","attr","$button","find","$input","$icon","on","proxy","buttonclicked","keypress","length","clearPending","activeSearch","_destroy","remove","each","val","outerHTML","search","searchText","hasClass","removeClass","addClass","trigger","clear","action","e","preventDefault","currentTarget","is","which","disable","enable","removeAttr","register","skylark","elmx","SelectList","ComboBox","Widget","Repeater","dataSource","callback","count","end","items","page","pages","start","defaultView","dropPagingCap","staticHeight","views","addons","_init","$btn","currentView","self","$canvas","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","plugin","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","value","render","clearInfinite","next","previous","evt","data","pageInputChange","text","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","initViewTypes","changeView","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","infinitescroll","off","enabled","status","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","mixin","returnOptions","view","pageIndex","filter","selectedItem","pageSize","searchValue","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","i","setting","constructor","Error","ctor","push","initViewType","call","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","append","focus","prevView","split","selected","syncViewButtonState","_throbber","throb","className","beforeRender","repeaterPrototypeContext","viewTypeObj","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","$selected","target","parents","$itemToCheck","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","toLowerCase","test","parseJSON","ignore","getItemProperty","msg","console","warn","keep","children","item","pres","detach","$parent","response","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","attach","ViewBase","Evented","controlsClass","fullScreen","_create$Item","template","itemData","invalid","indexOf","trim","substring","init","repeater","hasControls","that","initOptions","cache","defaults","ctors","unshift","superclass","prototype","hasOwnProperty","Object","defineProperty","close","getValue","getSelectedItems","LinearView","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","clearSelectedItems","setSelectedItems","force","$item","n","compareItemIndex","compareItemSelector","selector","selectItem","$itm","select","thumbnail_clearSelectedItems","isArray","infScroll","$cont","$thumbnail","name","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onslide","onslideend","onslidecomplete","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","indicators","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","helper","list","num","initStartIndex","initView","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","dist","translateX","x","y","slides","translateY","from","timer","setInterval","timeElap","left","clearInterval","time","interval","animationFrameId","pause","add","concat","Array","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","slideHeight","ontouchcancel","onkeydown","toggleControls","toggleSlideshow","handleClick","srcElement","parent","parentNode","getNodeIndex","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","setActiveIndicator","firstChild","title","alt","createTextNode","func","args","wait","apply","loadElement","elements","proxyListener","limit","min","j","unloadSlide","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","activeIndicator","slidePrototype","reload","imagePrototype","elementPrototype","clientWidth","clientHeight","len","getItemUrl","type","destroyEventListeners","first","log","bodyOverflowStyle","overflow","display","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","highlightColumn","tbody","col","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","itms","checkIfItemMatchesValue","rowIndex","slct","$frozenCols","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","actionsDropdown","$actionsColumnWrapper","actions_width","$actionsColumn","label","$actionsCells","rowNumber","sizeActionsTable","actionName","row","rows","getActionItems","selectorIndex","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","specialBrowserClass","noItems","sizeColumns","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","firefox","selectedSelector","TileView","center","justify","right","thumbnail_injectSpacers","main"],"mappings":"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","file":"../skylark-widgets-repeater.js","sourcesContent":["define('skylark-widgets-repeater/SearchBox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\"\n],function(langx,browser,eventer,noder,geom,$,plugins){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = plugins.Plugin.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n    \t_construct : function(elm,options) {\n      \t\tthis.overrided(elm,options);\n      \t\t\n      \t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.fu.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.fu.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.fu.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\n\t\t_destroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.fu.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.fu.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.fu.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n    plugins.register(SearchBox);\n\n\treturn \tSearchBox;\n});\n\ndefine('skylark-widgets-repeater/Repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-popups/SelectList\",\r\n  \"skylark-domx-popups/ComboBox\",\r\n  \"skylark-widgets-base/Widget\",\r\n  \"./SearchBox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,SelectList,ComboBox,Widget){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"lark.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n//\t\t_init : function(element,options) {\r\n\t\t_init : function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).plugin(\"domx.dropdown\");\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n//\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"domx.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"domx.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"domx.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.lark.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.lark.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.lark.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.lark.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.lark.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').plugin(\"lark.combobox\").destroy();\r\n\t\t\tthis.$element.find('.selectlist').plugin(\"domx.selectlist\").destroy();\r\n\t\t\tthis.$element.find('.search').plugin(\"lark.searchbox\").destroy();\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.lark.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").disable();\r\n\t\t\tthis.$filters.plugin(\"domx.selectlist\").disable();\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").disable();\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"domx.combobox\").disable();\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").enable();\r\n\t\t\tthis.$filters.plugin(\"domx.selectlist\").enable()\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").enable()\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"domx.combobox\").enable();\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.plugin(\"domx.combobox\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").enable();\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.plugin(\"domx.selectlist\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"domx.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"domx.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\t/*\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\tvar setting = this.constructor.addons.views[viewTypes[i]];\r\n\t\t\t\tif (!setting) {\r\n\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t} \r\n\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (views.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.lark.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.lark.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* lwf\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"throbWrap\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem({\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render({\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* // by lwf\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\t\t*/\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t}\r\n\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\t//this.$loader.hide().loader('pause');\r\n\t\tif (this._throbber) {\r\n\t\t\tthis._throbber.remove();\r\n\t\t\tthis._throbber = null;\r\n\t\t}\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.lark.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tRepeater.addons = {};\r\n\r\n\r\n\treturn skylark.attach(\"widgets.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views',[\r\n\t\"./Repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.addons.views = {};\r\n});\ndefine('skylark-widgets-repeater/views/ViewBase',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"../views\",\t\r\n],function(langx,noder,$,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t  // Defines if the gallery should open in fullscreen mode:\r\n\t\t  fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n\t\tinit : function (repeater,options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.repeater = repeater;\r\n\t\t\tthis.initOptions(options);\r\n\t        if (this.options.fullScreen) {\r\n\t          noder.fullScreen(this.container[0]);\r\n\t        }\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (that.container.hasClass(that.options.controlsClass)) {\r\n\t              hasControls = true\r\n\t              that.container.removeClass(that.options.controlsClass);\r\n\t            } else {\r\n\t              hasControls = false\r\n\t            }\r\n\t        });\r\n\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (hasControls) {\r\n\t              that.container.addClass(that.options.controlsClass);\r\n\t            }\r\n\t        });\r\n\t\t},\r\n\r\n\t    //initOptions: function (options) {\r\n\t    //  // Create a copy of the prototype options:\r\n\t    //  this.options = langx.mixin({}, this.options,options);\r\n\t    //},\r\n\r\n       initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n      \t},\r\n\r\n      \tgetValue : function() {\r\n      \t\treturn this.getSelectedItems();\r\n      \t},\r\n\r\n      \tcleared : function() {\r\n\r\n      \t},\r\n\r\n      \tselected : function() {\r\n\r\n      \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\ndefine('skylark-widgets-repeater/views/LinearView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var LinearView = ViewBase.inherit({\r\n    klassName : \"LinearView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n\r\n        template : '<ul class=\"clearfix repeater-linear\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></ul>',\r\n        item : {\r\n            template: '<li class=\"repeater-item\"><img  src=\"{{ThumbnailImage}}\" class=\"thumb\"/><h4 class=\"title\">{{name}}</h4></div>'\r\n        },\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-linear .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-linear');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        return response;\r\n    },\r\n\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $item = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $item.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $item.addClass('selectable');\r\n            $item.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$item.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-linear .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterList', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $item.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $item);\r\n                } else {\r\n                    $item.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $item);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($item);\r\n\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"linear\"] = {\r\n        name : \"linear\",\r\n        ctor : LinearView\r\n    };\r\n\r\n    return LinearView;\r\n    \r\n});\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-widgets-repeater/views/SliderView',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../views\", \r\n  \"./ViewBase\"\r\n],function (langx,noder,$,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the repeater view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div.slides',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'slider-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'slider-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'slider-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'slider-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'slider-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: true,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'ThumbnailImage',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n      indicators : {\r\n            // Hide the page scrollbars:\r\n          hidePageScrollbars: false,\r\n\r\n          // The tag name, Id, element or querySelector of the indicator container:\r\n          indicatorContainer: 'ol',\r\n          // The class for the active indicator:\r\n          activeIndicatorClass: 'active',\r\n          // The list object property (or data attribute) with the thumbnail URL,\r\n          // used as alternative to a thumbnail child element:\r\n          thumbnailProperty: 'thumbnail',\r\n          // Defines if the gallery indicators should display a thumbnail:\r\n          thumbnailIndicators: true\r\n      },\r\n\r\n\r\n\r\n      \"template\" :'<div class=\"repeater-slider\">' + \r\n                  '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>' +\r\n                  \"</div>\",\r\n\r\n      \"item\" : {\r\n        template : '<img height=\"75\" src=\"{{ThumbnailImage}}\" width=\"65\"/>' \r\n      }\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    render: function (helper){\r\n      //this.overrided(repeater,options);\r\n\r\n      this.container = this.repeater.$canvas.find('.repeater-slider');\r\n\r\n      if (this.container.length < 1) {\r\n        this.container = $(this.options.template);\r\n        this.repeater.$canvas.append(this.container);\r\n      } \r\n      this.list = helper.data.items;\r\n      //this.options.container = helper.container;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      this.initView();\r\n\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval;\r\n      this.timeout = this.setTimeout(\r\n        (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n        [this.index + 1, this.options.slideshowTransitionSpeed],\r\n        this.interval\r\n      )\r\n\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target))\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n      } else {\r\n        function isTarget (className) {\r\n          return $(target).hasClass(className) || $(parent).hasClass(className)\r\n        }\r\n\r\n\r\n        if (isTarget(options.toggleClass)) {\r\n          // Click on \"toggle\" control\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        } else if (isTarget(options.prevClass)) {\r\n          // Click on \"prev\" control\r\n          this.preventDefault(event)\r\n          this.prev()\r\n        } else if (isTarget(options.nextClass)) {\r\n          // Click on \"next\" control\r\n          this.preventDefault(event)\r\n          this.next()\r\n        } else if (isTarget(options.playPauseClass)) {\r\n          // Click on \"play-pause\" control\r\n          this.preventDefault(event)\r\n          this.toggleSlideshow()\r\n        } else if (parent === this.slidesContainer[0]) {\r\n          // Click on slide background\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        } else if (\r\n          parent.parentNode &&\r\n          parent.parentNode === this.slidesContainer[0]\r\n        ) {\r\n          // Click on displayed element\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n\r\n      this.setActiveIndicator(index)\r\n\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var $item = this._create$Item(this.options.item.template,obj);\r\n      $item.find(\"img\").on('load error', callback);\r\n\r\n      $item.addClass(this.options.slideContentClass);\r\n      return $item;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).append(            \r\n            this.createElement(this.list[index], this.proxyListener)\r\n          );\r\n          //$(this.slides[index]).addClass(this.options.slideLoadingClass).append(            \r\n          //  this.createElement(this.list[index], this.proxyListener)\r\n          //);\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    createIndicator: function (obj) {\r\n      var repeater = this.repeater,\r\n          indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = repeater.getItemProperty(obj,\"title\")\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = repeater.getItemProperty(obj, thumbnailProperty)\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n\r\n      this.addIndicator(index)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        // indicator\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var repeater = this.repeater,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || repeater.getItemUrl(this.list[i]) ===  repeater.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n\r\n    initView: function () {\r\n      var that = this\r\n\r\n      /*\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      */\r\n\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView\r\n  };\r\n\r\n  return SliderView;\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views/TableView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$element.find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html(`<th><div class=\"${this.options.headingClass}\">` + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + `<div class=\"${this.options.headingClass}\">` + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$element.find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find(`.${this.options.checkClass}`).remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n                    repeater.$canvas.find(`.${this.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});\ndefine('skylark-widgets-repeater/views/TileView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        }\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-tile .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-tile .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-tile .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-tile .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-tile');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-tile .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n\r\n    return TileView;\r\n    \r\n});\ndefine('skylark-widgets-repeater/main',[\r\n    \"./Repeater\",\r\n    \"./views\",\r\n    \"./views/ViewBase\",\r\n    \"./views/LinearView\",\r\n    \"./views/SliderView\",\r\n    \"./views/TableView\",\r\n    \"./views/TileView\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-widgets-repeater', ['skylark-widgets-repeater/main'], function (main) { return main; });\n\n"]}