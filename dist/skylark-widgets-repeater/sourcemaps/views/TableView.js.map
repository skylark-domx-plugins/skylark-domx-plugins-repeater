{"version":3,"sources":["views/TableView.js"],"names":["define","langx","browser","eventer","noder","geom","$","views","ViewBase","TableView","inherit","klassName","options","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","infiniteScroll","noItemsHTML","selectable","sortClearing","rowRendered","frozenColumns","actions","viewClass","tableWrapperClass","checkClass","headingClass","actionsPlaceHolderClass","clearSelectedItems","this","repeater","$canvas","find","remove","removeClass","highlightColumn","index","force","tbody","each","filter","parent","hasClass","addClass","getSelectedItems","selected","$item","push","data","element","positionHeadings","$wrapper","$element","offsetLeft","offset","left","scrollLeft","$heading","parents","css","setSelectedItems","itms","i","length","self","items","isArray","checkIfItemMatchesValue","rowIndex","property","value","selectItem","$itm","slct","$frozenCols","undefined","prepend","sizeHeadings","$th","height","outerHeight","outerWidth","setFrozenColumns","frozenTable","$table","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","append","$checkboxLabel","attr","sizeFrozenColumns","on","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","action","html","name","actionsDropdown","$actionsColumnWrapper","actions_width","$actionsColumn","label","rowNumber","sizeActionsTable","e","isDisabled","actionName","rows","getActionItems","selector","selectorIndex","selectedObj","actionObj","grep","selectedRowsL","clickedRow","item","rowData","clickAction","$actionsTableHeader","columnWidth","width","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","type","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","preventDefault","currentTarget","row","parseInt","numSelected","prop","is","trigger","cleared","dataOptions","sortDirection","sortProperty","enabled","helpers","status","removeAttr","toggleActionsHeaderButton","call","initialize","callback","specialBrowserClass","noItems","resize","sizeColumns","opts","infScroll","firstRender","$loader","infiniteScrolling","before","$listContainer","container","count","renderThead","renderTbody","renderItem","renderRow","subset","after","$sorted","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","add","render","clearInfinite","pageIncrement","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","keyCode","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","j","hasOwnProperty","areDifferentColumns","splice","actionsColumn","checkboxWidth","column","newWidth","widthTaken","automaticallyGeneratedWidths","col","minWidth","Math","floor","ua","window","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","ctor"],"mappings":"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","file":"../../views/TableView.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false,\r\n\r\n        viewClass : \"repeater-table\",\r\n        tableWrapperClass : \"repeater-table-wrapper\",\r\n        checkClass : \"repeater-table-check\",\r\n        headingClass : \"repeater-table-heading\",\r\n        actionsPlaceHolderClass : \"repeater-table-actions-placeholder\"\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} table tbody tr.selected`).removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody`);\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr.selected`).each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find(`.${this.options.tableWrapperClass}`);\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find(`.${this.options.checkClass}`).remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr:nth-child(` + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table tbody tr`).each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find(`.${self.options.headingClass}`);\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var repeaterWrapper = this.repeater.$element.find(`.${this.options.viewClass}`);\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $(`.frozen-thead-wrapper .${this.options.headingClass}`).on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead th:nth-child(` + index + `) .${this.options.headingClass}`)[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`).outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find(`.${this.options.headingClass}`).css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html(`<th><div class=\"${this.options.headingClass}\">` + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + `<div class=\"${this.options.headingClass}\">` + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = `.${this.options.tableWrapperClass} > table .selected`;\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = `.${this.options.tableWrapperClass} > table tr`;\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find(`.${this.options.viewClass} table.table-actions`);\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find(`.${this.options.tableWrapperClass} > table`);\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find(`.${this.options.headingClass}`).outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find(`.${this.options.viewClass} .${this.options.tableWrapperClass} > table`);\r\n\r\n        this.repeater.$element.find(`.${this.options.viewClass} table.table-frozen tr`).each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find(`.${this.options.viewClass} table`);\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:nth-child(` + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr:not(.selected)`).click();\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find(`.${this.options.tableWrapperClass} > table tbody tr.selected`).click();\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find(`.${this.options.tableWrapperClass} > table thead tr`));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find(`.${this.options.viewClass}`);\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $(`<div class=\"${this.options.viewClass} ` + this.specialBrowserClass + `\" data-preserve=\"shallow\"><div class=\"${this.options.tableWrapperClass}\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>`);\r\n            $listContainer.find(`.${this.options.tableWrapperClass}`).on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find(`.${this.options.tableWrapperClass} > table .${this.options.headingClass}.sorted`);\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = `<div class=\"${this.options.actionsPlaceHolderClass}\" style=\"width: ` + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $(`<div class=\"${this.options.headingClass}\"><span class=\"glyphicon rlc\"></span></div>`);\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = `<div class=\"${this.options.headingClass} header-checkbox\">` +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find(`th, .${this.options.headingClass}`).removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find(`.${this.options.checkClass}`).remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find(`.${this.options.checkClass}`).remove();\r\n                    repeater.$canvas.find(`.${this.options.viewClass} tbody tr.selected`).each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend(`<div class=\"${this.options.checkClass}\"><span class=\"glyphicon glyphicon-ok\"></span></div>`);\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find(`.${this.options.tableWrapperClass} .header-checkbox`).outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find(`.${self.options.headingClass}`).outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find(`.${this.options.tableWrapperClass}`).outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = `.${this.options.tableWrapperClass} > table .selected`;\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = `.${this.options.tableWrapperClass} > table tr`;\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});"]}