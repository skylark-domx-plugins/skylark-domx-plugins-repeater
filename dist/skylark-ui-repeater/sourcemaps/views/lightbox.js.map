{"version":3,"sources":["views/lightbox.js"],"names":["define","langx","views","slider","LightBoxView","ctor","inherit","klassName","options","hidePageScrollbars","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","initOptions","mixin","prototype","this","overrided","createIndicator","obj","thumbnailUrl","thumbnail","album","indicator","indicatorPrototype","cloneNode","title","getItemTitle","Album","getItemProperty","undefined","getElementsByTagName","$","find","src","style","backgroundImage","addIndicator","index","length","list","setAttribute","appendChild","indicators","push","setActiveIndicator","activeIndicator","removeClass","addClass","initSlides","reload","container","document","createElement","children","addSlide","resetSlides","empty","handleClick","event","target","srcElement","parent","parentNode","preventDefault","slide","getNodeIndex","handleSlide","handleClose","name","templates","default"],"mappings":";;;;;;;AAAAA,QACE,sBACA,WACA,YACA,SAAUC,EAAMC,EAAMC,GAEvB,IAAIC,EAAeD,EAAOE,KAAKC,SAC9BC,UAAY,eACZC,SAEOC,oBAAoB,EAGvBC,mBAAoB,KAEpBC,qBAAsB,SAGtBC,kBAAmB,YAEnBC,qBAAqB,GAItBC,YAAa,SAAUN,GAClBA,EAAUP,EAAMc,SAASX,EAAaY,UAAUR,QAAQA,GAC/DS,KAAKC,UAAUV,IAGbW,gBAAiB,SAAUC,GACzB,IAIIC,EACAC,EALAC,EAAQN,KAAKM,MACfC,EAAYP,KAAKQ,mBAAmBC,WAAU,GAC5CC,EAAQJ,EAAMK,aAAaR,GAC3BR,EAAoBK,KAAKT,QAAQI,kBAoBrC,OAjBIK,KAAKT,QAAQK,sBACXD,IACFS,EAAeQ,MAAMC,gBAAgBV,EAAKR,SAEvBmB,IAAjBV,IACFC,EAAYF,EAAIY,sBAAwBC,EAAEb,GAAKc,KAAK,OAAO,MAEzDb,EAAeC,EAAUa,KAGzBd,IACFG,EAAUY,MAAMC,gBAAkB,QAAUhB,EAAe,OAG3DM,IACFH,EAAUG,MAAQA,GAEbH,GAGTc,aAAc,SAAUC,GACtB,GAAItB,KAAKP,mBAAmB8B,OAAQ,CAClC,IAAIhB,EAAYP,KAAKE,gBAAgBF,KAAKwB,KAAKF,IAC/Cf,EAAUkB,aAAa,aAAcH,GACrCtB,KAAKP,mBAAmB,GAAGiC,YAAYnB,GACvCP,KAAK2B,WAAWC,KAAKrB,KAIzBsB,mBAAoB,SAAUP,GACxBtB,KAAK2B,aACH3B,KAAK8B,iBACP9B,KAAK8B,gBAAgBC,YAAY/B,KAAKT,QAAQG,sBAEhDM,KAAK8B,gBAAkBd,EAAEhB,KAAK2B,WAAWL,IACzCtB,KAAK8B,gBAAgBE,SAAShC,KAAKT,QAAQG,wBAI/CuC,WAAY,SAAUC,GACfA,IACHlC,KAAKP,mBAAqBO,KAAKmC,UAAUlB,KACvCjB,KAAKT,QAAQE,oBAEXO,KAAKP,mBAAmB8B,SAC1BvB,KAAKQ,mBAAqB4B,SAASC,cAAc,MACjDrC,KAAK2B,WAAa3B,KAAKP,mBAAmB,GAAG6C,WAGjDtC,KAAKC,UAAUiC,IAGjBK,SAAU,SAAUjB,GAClBtB,KAAKC,UAAUqB,GACftB,KAAKqB,aAAaC,IAGpBkB,YAAa,WACZxC,KAAKC,YACLD,KAAKP,mBAAmBgD,QACxBzC,KAAK2B,eAGNe,YAAa,SAAUC,GACrB,IAAIC,EAASD,EAAMC,QAAUD,EAAME,WAC/BC,EAASF,EAAOG,WACpB,GAAID,IAAW9C,KAAKP,mBAAmB,GAErCO,KAAKgD,eAAeL,GACpB3C,KAAKiD,MAAMjD,KAAKkD,aAAaN,QACxB,CAAA,GAAIE,EAAOC,aAAe/C,KAAKP,mBAAmB,GAKvD,OAAOO,KAAKC,UAAU0C,GAHtB3C,KAAKgD,eAAeL,GACpB3C,KAAKiD,MAAMjD,KAAKkD,aAAaJ,MAMjCK,YAAa,SAAU7B,GACrBtB,KAAKC,UAAUqB,GACftB,KAAK6B,mBAAmBP,IAG1B8B,YAAa,WACPpD,KAAK8B,iBACP9B,KAAK8B,gBAAgBC,YAAY/B,KAAKT,QAAQG,sBAEhDM,KAAKC,eAKX,OAAOhB,EAAgB,UACtBoE,KAAU,WACVjE,KAAUD,EACVmE,WACCC,QAAY","file":"../../views/lightbox.js","sourcesContent":["define([\r\n  'skylark-langx/langx',\r\n  \"../views\",\t\r\n  './slider'\r\n],function (langx,views,slider) {\r\n\r\n\tvar LightBoxView = slider.ctor.inherit({\r\n\t\tklassName : \"LightBoxView\",\r\n\t\toptions : {\r\n\t        // Hide the page scrollbars:\r\n\t        hidePageScrollbars: false,\r\n\r\n\t\t    // The tag name, Id, element or querySelector of the indicator container:\r\n\t\t    indicatorContainer: 'ol',\r\n\t\t    // The class for the active indicator:\r\n\t\t    activeIndicatorClass: 'active',\r\n\t\t    // The list object property (or data attribute) with the thumbnail URL,\r\n\t\t    // used as alternative to a thumbnail child element:\r\n\t\t    thumbnailProperty: 'thumbnail',\r\n\t\t    // Defines if the gallery indicators should display a thumbnail:\r\n\t\t    thumbnailIndicators: true\r\n\t\t},\r\n\r\n\r\n\t    initOptions: function (options) {\r\n\t    \tvar options = langx.mixin({},LightBoxView.prototype.options,options);\r\n\t\t\tthis.overrided(options);\r\n\t    },\r\n\r\n\t    createIndicator: function (obj) {\r\n\t      var album = this.album,\r\n\t      \t\tindicator = this.indicatorPrototype.cloneNode(false)\r\n\t      var title = album.getItemTitle(obj)\r\n\t      var thumbnailProperty = this.options.thumbnailProperty\r\n\t      var thumbnailUrl\r\n\t      var thumbnail\r\n\t      if (this.options.thumbnailIndicators) {\r\n\t        if (thumbnailProperty) {\r\n\t          thumbnailUrl = Album.getItemProperty(obj, thumbnailProperty)\r\n\t        }\r\n\t        if (thumbnailUrl === undefined) {\r\n\t          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n\t          if (thumbnail) {\r\n\t            thumbnailUrl = thumbnail.src\r\n\t          }\r\n\t        }\r\n\t        if (thumbnailUrl) {\r\n\t          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n\t        }\r\n\t      }\r\n\t      if (title) {\r\n\t        indicator.title = title;\r\n\t      }\r\n\t      return indicator;\r\n\t    },\r\n\r\n\t    addIndicator: function (index) {\r\n\t      if (this.indicatorContainer.length) {\r\n\t        var indicator = this.createIndicator(this.list[index])\r\n\t        indicator.setAttribute('data-index', index)\r\n\t        this.indicatorContainer[0].appendChild(indicator)\r\n\t        this.indicators.push(indicator)\r\n\t      }\r\n\t    },\r\n\r\n\t    setActiveIndicator: function (index) {\r\n\t      if (this.indicators) {\r\n\t        if (this.activeIndicator) {\r\n\t          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t        }\r\n\t        this.activeIndicator = $(this.indicators[index])\r\n\t        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n\t      }\r\n\t    },\r\n\r\n\t    initSlides: function (reload) {\r\n\t      if (!reload) {\r\n\t        this.indicatorContainer = this.container.find(\r\n\t          this.options.indicatorContainer\r\n\t        )\r\n\t        if (this.indicatorContainer.length) {\r\n\t          this.indicatorPrototype = document.createElement('li')\r\n\t          this.indicators = this.indicatorContainer[0].children\r\n\t        }\r\n\t      }\r\n\t      this.overrided(reload);\r\n\t    },\r\n\r\n\t    addSlide: function (index) {\r\n\t      this.overrided(index);\r\n\t      this.addIndicator(index)\r\n\t    },\r\n\r\n\t    resetSlides: function () {\r\n\t    \tthis.overrided();\r\n\t    \tthis.indicatorContainer.empty();\r\n\t    \tthis.indicators = [];\r\n\t    },\r\n\r\n\t    handleClick: function (event) {\r\n\t      var target = event.target || event.srcElement\r\n\t      var parent = target.parentNode\r\n\t      if (parent === this.indicatorContainer[0]) {\r\n\t        // Click on indicator element\r\n\t        this.preventDefault(event)\r\n\t        this.slide(this.getNodeIndex(target))\r\n\t      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n\t        // Click on indicator child element\r\n\t        this.preventDefault(event)\r\n\t        this.slide(this.getNodeIndex(parent))\r\n\t      } else {\r\n\t        return this.overrided(event)\r\n\t      }\r\n\t    },\r\n\r\n\t    handleSlide: function (index) {\r\n\t      this.overrided(index)\r\n\t      this.setActiveIndicator(index)\r\n\t    },\r\n\r\n\t    handleClose: function () {\r\n\t      if (this.activeIndicator) {\r\n\t        this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n\t      }\r\n\t      this.overrided();\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views[\"lightbox\"] = {\r\n\t\t\"name\" :  \"lightbox\",\r\n\t\t\"ctor\" :  LightBoxView,\r\n\t\t\"templates\" : {\r\n\t\t\t\"default\" : '<div class=\"slides\"></div>' +\r\n\t\t\t          '<h3 class=\"title\"></h3>' +\r\n\t\t\t          '<a class=\"prev\">‹</a>' +\r\n\t\t\t          '<a class=\"next\">›</a>' +\r\n\t\t\t          '<a class=\"close\">×</a>' + \r\n\t\t\t          '<ol class=\"indicator\"></ol>'\r\n\r\n\t\t} \r\n\t};\r\n\r\n});"]}