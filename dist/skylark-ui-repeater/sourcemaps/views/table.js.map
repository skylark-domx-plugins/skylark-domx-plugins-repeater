{"version":3,"sources":["views/table.js"],"names":["define","langx","browser","eventer","noder","geom","$","views","ViewBase","TableView","inherit","klassName","options","list_columnRendered","list_columnSizing","list_columnSyncing","list_highlightSortedColumn","list_infiniteScroll","list_noItemsHTML","list_selectable","list_sortClearing","list_rowRendered","list_frozenColumns","list_actions","clearSelectedItems","this","$canvas","find","remove","removeClass","highlightColumn","index","force","tbody","viewOptions","each","filter","parent","hasClass","addClass","getSelectedItems","selected","$item","push","data","element","positionHeadings","$wrapper","$element","offsetLeft","offset","left","scrollLeft","$heading","parents","css","setSelectedItems","itms","i","length","selectable","self","items","isArray","checkIfItemMatchesValue","rowIndex","property","value","selectItem","$itm","slct","$frozenCols","undefined","list_clearSelectedItems","prepend","sizeHeadings","$th","height","outerHeight","outerWidth","setFrozenColumns","frozenTable","$table","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","append","$checkboxLabel","attr","list_sizeFrozenColumns","on","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","action","html","name","actionsDropdown","$actionsColumnWrapper","list_actions_width","$actionsColumn","label","rowNumber","list_sizeActionsTable","e","isDisabled","actionName","rows","list_getActionItems","selector","selectorIndex","getActionItems","selectedObj","actionObj","grep","actions","selectedRowsL","clickedRow","item","rowData","clickAction","sizeActionsTable","$actionsTableHeader","sizeFrozenColumns","columnWidth","width","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","type","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","list_revertingCheckbox","preventDefault","currentTarget","row","parseInt","numSelected","prop","is","trigger","cleared","list_sizeHeadings","dataOptions","list_sortDirection","sortDirection","list_sortProperty","sortProperty","enabled","helpers","status","removeAttr","toggleActionsHeaderButton","call","initialize","callback","list_specialBrowserClass","specialBrowserClass","list_noItems","resize","sizeColumns","opts","infScroll","list_firstRender","$loader","infiniteScrolling","before","$listContainer","container","count","list_positionHeadings","list_positionColumns","renderThead","renderTbody","renderItem","renderRow","subset","after","$sorted","list_setFrozenColumns","list_createItemActions","list_frozenOptionsInitialize","list_highlightColumn","renderColumn","$row","columns","columnIndex","className","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","$header","add","render","clearInfinite","pageIncrement","$tbody","repeater","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","keyCode","list_columns","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","j","hasOwnProperty","areDifferentColumns","splice","actionsColumn","checkboxWidth","column","newWidth","widthTaken","automaticallyGeneratedWidths","col","minWidth","Math","floor","ua","window","navigator","userAgent","msie","indexOf","firefox","substring","selectedSelector","ctor"],"mappings":"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","file":"../../views/table.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-utils-dom/browser\",\r\n    \"skylark-utils-dom/eventer\",\r\n    \"skylark-utils-dom/noder\",\r\n    \"skylark-utils-dom/geom\",\r\n    \"skylark-utils-dom/query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        list_columnRendered: null,\r\n        list_columnSizing: true,\r\n        list_columnSyncing: true,\r\n        list_highlightSortedColumn: true,\r\n        list_infiniteScroll: false,\r\n        list_noItemsHTML: 'no items found',\r\n        list_selectable: false,\r\n        list_sortClearing: false,\r\n        list_rowRendered: null,\r\n        list_frozenColumns: 0,\r\n        list_actions: false\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.$canvas.find('.repeater-list-check').remove();\r\n        this.$canvas.find('.repeater-list table tbody tr.selected').removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.$canvas.find('.repeater-list-wrapper > table tbody');\r\n        if (this.viewOptions.list_highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.$element.find('.repeater-list-wrapper');\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.viewOptions.list_selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.list_clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.viewOptions.list_frozenColumns || self.viewOptions.list_selectable === 'multi') {\r\n                        $frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.viewOptions.list_actions) {\r\n                        self.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                }\r\n            } else {\r\n                if (self.viewOptions.list_frozenColumns) {\r\n                    $frozenCols = self.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.viewOptions.list_actions) {\r\n                    self.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find('.repeater-list-check').remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.$canvas.find('.repeater-list .repeater-list-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.$element.find('.repeater-list table');\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find('.repeater-list-heading');\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.$canvas.find('.table-frozen');\r\n        var $wrapper = this.$element.find('.repeater-canvas');\r\n        var $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var repeaterWrapper = this.$element.find('.repeater-list');\r\n        var numFrozenColumns = this.viewOptions.list_frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.viewOptions.list_selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.list_sizeFrozenColumns();\r\n\r\n        $('.frozen-thead-wrapper .repeater-list-heading').on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.$element.find('.repeater-list-wrapper > table thead th:nth-child(' + index + ') .repeater-list-heading')[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi';\r\n        var actionsEnabled = this.viewOptions.list_actions;\r\n\r\n        var canvasWidth = this.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.$element.find('.repeater-list .repeater-list-wrapper > table').outerWidth();\r\n\r\n        var actionsWidth = this.$element.find('.table-actions') ? this.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find('.repeater-list-heading').css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find('.repeater-list-heading').css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n        var $actionsTable = this.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.viewOptions.list_actions.items.length; i < length; i++) {\r\n            var action = this.viewOptions.list_actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.list_actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.viewOptions.list_selectable === 'multi' || this.viewOptions.list_selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html('<th><div class=\"repeater-list-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                if (this.viewOptions.list_selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-list-heading\">' + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.list_sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.list_getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = '.repeater-list-wrapper > table .selected';\r\n\r\n                if ( self.viewOptions.list_selectable === 'action' ) {\r\n                    selector = '.repeater-list-wrapper > table tr';\r\n                }\r\n                self.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.list_getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.viewOptions.list_actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.$canvas.find('.repeater-list-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.$element.find('.repeater-list table.table-actions');\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.$element.find('.repeater-list-wrapper > table');\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find('.repeater-list-heading').outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.$element.find('.repeater-list .repeater-list-wrapper > table');\r\n\r\n        this.$element.find('.repeater-list table.table-frozen tr').each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.$element.find('.repeater-list table');\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.list_revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.$element.find('.repeater-list-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n                    var numSelected = self.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.list_revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.$element.find('.repeater-list-wrapper > table tbody tr:not(.selected)').click();\r\n                    self.$element.trigger('selected.fu.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.$element.find('.repeater-list-wrapper > table tbody tr.selected').click();\r\n                    self.$element.trigger('deselected.fu.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.list_revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.list_revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.viewOptions.list_columnSyncing) {\r\n            this.list_sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.list_sortDirection) {\r\n            options.sortDirection = this.list_sortDirection;\r\n        }\r\n        if (this.list_sortProperty) {\r\n            options.sortProperty = this.list_sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.viewOptions.list_actions) {\r\n            if (!helpers.status) {\r\n                this.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.list_sortDirection = null;\r\n        this.list_sortProperty = null;\r\n        this.list_specialBrowserClass = specialBrowserClass();\r\n        this.list_actions_width = (this.viewOptions.list_actions.width !== undefined) ? this.viewOptions.list_actions.width : 37;\r\n        this.list_noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.$element.find('.repeater-list-wrapper > table thead tr'));\r\n        if (this.viewOptions.list_actions) {\r\n            this.list_sizeActionsTable();\r\n        }\r\n        if (this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') {\r\n            this.list_sizeFrozenColumns();\r\n        }\r\n        if (this.viewOptions.list_columnSyncing) {\r\n            this.list_sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.viewOptions.list_infiniteScroll;\r\n        var opts;\r\n\r\n        this.list_firstRender = true;\r\n        this.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find('.repeater-list');\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.list_noItems = false;\r\n        } else {\r\n            this.list_noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $('<div class=\"repeater-list ' + this.list_specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-list-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n            $listContainer.find('.repeater-list-wrapper').on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n                if (self.viewOptions.list_columnSyncing) {\r\n                    self.list_positionHeadings();\r\n                }\r\n            });\r\n            if (self.viewOptions.list_frozenColumns || self.viewOptions.list_actions || self.viewOptions.list_selectable === 'multi') {\r\n                helpers.container.on('scroll.fu.repeaterList', function onScrollRepeaterList () {\r\n                    self.list_positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.viewOptions.list_frozenColumns || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n            this.list_setFrozenColumns();\r\n        }\r\n\r\n        if (this.viewOptions.list_actions && !this.list_noItems) {\r\n            this.list_createItemActions();\r\n            this.list_sizeActionsTable();\r\n        }\r\n\r\n        if ((this.viewOptions.list_frozenColumns || this.viewOptions.list_actions || this.viewOptions.list_selectable === 'multi') && !this.list_noItems) {\r\n            this.list_positionColumns();\r\n            this.list_frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.viewOptions.list_columnSyncing) {\r\n            this.list_sizeHeadings();\r\n            this.list_positionHeadings();\r\n        }\r\n\r\n        $sorted = this.$canvas.find('.repeater-list-wrapper > table .repeater-list-heading.sorted');\r\n        if ($sorted.length > 0) {\r\n            this.list_highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.viewOptions.list_actions !== false && property === '@_ACTIONS_@') {\r\n            content = '<div class=\"repeater-list-actions-placeholder\" style=\"width: ' + this.list_actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.viewOptions.list_selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $('<div class=\"repeater-list-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n        var checkAllID = (this.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = '<div class=\"repeater-list-heading header-checkbox\">' +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.viewOptions.list_actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.list_actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.fu.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.list_sortDirection = 'desc';\r\n                        } else if (!self.viewOptions.list_sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.list_sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.list_sortDirection = null;\r\n                            self.list_sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.list_sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find('th, .repeater-list-heading').removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.list_sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.list_sortDirection = 'desc';\r\n            }\r\n\r\n            this.list_sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.viewOptions.list_selectable === 'multi';\r\n        var isActions = repeater.viewOptions.list_actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find('.repeater-list-check').remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.fu.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find('.repeater-list-check').remove();\r\n                    repeater.$canvas.find('.repeater-list tbody tr.selected').each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.fu.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend('<div class=\"repeater-list-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.fu.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.viewOptions.list_selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.viewOptions.list_selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.fu.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.fu.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.viewOptions.list_actions && !this.viewOptions.list_selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.list_columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.list_columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.viewOptions.list_columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.list_columns[columnIndex].property === '@_CHECKBOX_@' || this.list_columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.viewOptions.list_columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.list_columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.viewOptions.list_rowRendered) {\r\n            this.viewOptions.list_rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.list_columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.viewOptions.list_noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.list_firstRender || areDifferentColumns(this.list_columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // list_noItems is set in `before` method\r\n\r\n            if (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.list_columns = columns;\r\n            this.list_firstRender = false;\r\n            this.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.viewOptions.list_actions) {\r\n                var actionsColumn = {\r\n                    label: this.viewOptions.list_actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.list_actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.viewOptions.list_selectable === 'multi' && !this.list_noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.$element.find('.repeater-list-wrapper .header-checkbox').outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.viewOptions.list_columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.list_columns[i].width !== undefined) {\r\n                    width = self.list_columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.list_columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find('.repeater-list-heading').outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.$canvas.find('.repeater-list-wrapper').outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.list_columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = '.repeater-list-wrapper > table .selected';\r\n        var $actionsColumn = this.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.viewOptions.list_selectable === 'action') {\r\n            selectedSelector = '.repeater-list-wrapper > table tr';\r\n        }\r\n\r\n        $selected = this.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     return views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    };   \r\n\r\n});"]}